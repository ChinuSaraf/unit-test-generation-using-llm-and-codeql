import org.junit.FixMethodOrder;
import org.junit.Test;
import org.junit.runners.MethodSorters;

@FixMethodOrder(MethodSorters.NAME_ASCENDING)
public class RegressionTest0 {

    public static boolean debug = false;

    @Test
    public void test001() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test001");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 10, (byte) 10, (byte) -1 };
        // The following exception was thrown during execution in test generation
        try {
            int int9 = inputStream0.read(byteArray6, (int) (short) -1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [-1, -1 + -1) out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[10, 10, -1]");
    }

    @Test
    public void test002() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test002");
        java.nio.ByteBuffer byteBuffer0 = null;
        // The following exception was thrown during execution in test generation
        try {
            org.apache.hadoop.fs.cosn.ByteBufferInputStream byteBufferInputStream1 = new org.apache.hadoop.fs.cosn.ByteBufferInputStream(byteBuffer0);
            org.junit.Assert.fail("Expected exception of type java.io.IOException; message: byte buffer is null");
        } catch (java.io.IOException e) {
            // Expected exception.
        }
    }

    @Test
    public void test003() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test003");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        java.io.OutputStream outputStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long9 = inputStream0.transferTo(outputStream8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test004() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test004");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int11 = inputStream0.read(byteArray8, 10, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
    }

    @Test
    public void test005() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test005");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        java.io.OutputStream outputStream3 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long4 = inputStream0.transferTo(outputStream3);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test006() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test006");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.OutputStream outputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long10 = inputStream0.transferTo(outputStream9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
    }

    @Test
    public void test007() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test007");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        java.lang.Class<?> wildcardClass8 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test008() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test008");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        java.io.OutputStream outputStream1 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long2 = inputStream0.transferTo(outputStream1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
    }

    @Test
    public void test009() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test009");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        byte[] byteArray5 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int8 = inputStream0.read(byteArray5, (int) (byte) -1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
    }

    @Test
    public void test010() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test010");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        long long16 = inputStream0.skip((long) 0);
        java.io.InputStream inputStream17 = java.io.InputStream.nullInputStream();
        long long19 = inputStream17.skip((long) 'a');
        byte[] byteArray23 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int24 = inputStream17.read(byteArray23);
        byte[] byteArray26 = inputStream17.readNBytes((int) (short) 100);
        // The following exception was thrown during execution in test generation
        try {
            int int29 = inputStream0.readNBytes(byteArray26, (int) (short) -1, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [-1, -1 + 0) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(inputStream17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
    }

    @Test
    public void test011() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test011");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        java.io.InputStream inputStream5 = java.io.InputStream.nullInputStream();
        long long7 = inputStream5.skip((long) 'a');
        byte[] byteArray8 = new byte[] {};
        int int9 = inputStream5.read(byteArray8);
        byte[] byteArray11 = inputStream5.readNBytes(10);
        byte[] byteArray15 = new byte[] { (byte) 1, (byte) 10, (byte) 1 };
        int int16 = inputStream5.read(byteArray15);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = inputStream0.readNBytes(byteArray15, (int) (byte) -1, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [-1, -1 + 1) out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(inputStream5);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[1, 10, 1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test012() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test012");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        long long11 = inputStream0.skip((long) '4');
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray13 = inputStream0.readNBytes((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: len < 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test013() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test013");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        byte[] byteArray6 = inputStream0.readNBytes((int) (short) 10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray13 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int14 = inputStream7.read(byteArray13);
        byte[] byteArray15 = inputStream7.readAllBytes();
        byte[] byteArray16 = inputStream7.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int19 = inputStream0.readNBytes(byteArray16, (-1), (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [-1, -1 + 0) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
    }

    @Test
    public void test014() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test014");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        byte[] byteArray6 = inputStream0.readNBytes((int) (short) 10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream7.read(byteArray10);
        byte[] byteArray13 = inputStream7.readNBytes(10);
        long long15 = inputStream7.skip((long) '4');
        byte[] byteArray16 = inputStream7.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int19 = inputStream0.readNBytes(byteArray16, 1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [1, 1 + 100) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
    }

    @Test
    public void test015() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test015");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        byte[] byteArray15 = inputStream9.readNBytes(10);
        byte[] byteArray19 = new byte[] { (byte) 1, (byte) 10, (byte) 1 };
        int int20 = inputStream9.read(byteArray19);
        // The following exception was thrown during execution in test generation
        try {
            int int23 = inputStream0.read(byteArray19, 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [100, 100 + -1) out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[1, 10, 1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
    }

    @Test
    public void test016() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test016");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray11 = inputStream0.readNBytes(1);
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long13 = inputStream0.transferTo(outputStream12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
    }

    @Test
    public void test017() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test017");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        java.io.InputStream inputStream8 = java.io.InputStream.nullInputStream();
        long long10 = inputStream8.skip((long) 'a');
        byte[] byteArray11 = new byte[] {};
        int int12 = inputStream8.read(byteArray11);
        byte[] byteArray14 = inputStream8.readNBytes(10);
        java.io.InputStream inputStream15 = java.io.InputStream.nullInputStream();
        long long17 = inputStream15.skip((long) 'a');
        byte[] byteArray18 = new byte[] {};
        int int19 = inputStream15.read(byteArray18);
        byte[] byteArray21 = inputStream15.readNBytes(10);
        int int22 = inputStream8.read(byteArray21);
        // The following exception was thrown during execution in test generation
        try {
            int int25 = inputStream0.read(byteArray21, 0, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [0, 0 + -1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(inputStream8);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertNotNull(inputStream15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
    }

    @Test
    public void test018() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test018");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray15 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int16 = inputStream9.read(byteArray15);
        // The following exception was thrown during execution in test generation
        try {
            int int19 = inputStream0.read(byteArray15, 0, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [0, 0 + 100) out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
    }

    @Test
    public void test019() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test019");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        long long16 = inputStream0.skip((long) 0);
        byte[] byteArray17 = inputStream0.readAllBytes();
        java.io.InputStream inputStream18 = java.io.InputStream.nullInputStream();
        long long20 = inputStream18.skip((long) 'a');
        byte[] byteArray21 = new byte[] {};
        int int22 = inputStream18.read(byteArray21);
        byte[] byteArray24 = inputStream18.readNBytes(10);
        // The following exception was thrown during execution in test generation
        try {
            int int27 = inputStream0.readNBytes(byteArray24, (int) '#', 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [35, 35 + 10) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(inputStream18);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
    }

    @Test
    public void test020() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test020");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray4 = inputStream0.readNBytes((int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: len < 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
    }

    @Test
    public void test021() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test021");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        long long14 = inputStream10.skip((long) 10);
        byte[] byteArray16 = inputStream10.readNBytes((int) (short) 10);
        java.io.InputStream inputStream17 = java.io.InputStream.nullInputStream();
        long long19 = inputStream17.skip((long) 'a');
        byte[] byteArray23 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int24 = inputStream17.read(byteArray23);
        byte[] byteArray25 = inputStream17.readAllBytes();
        java.io.InputStream inputStream26 = java.io.InputStream.nullInputStream();
        long long28 = inputStream26.skip((long) 'a');
        byte[] byteArray32 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int33 = inputStream26.read(byteArray32);
        byte[] byteArray34 = inputStream26.readAllBytes();
        java.io.InputStream inputStream35 = java.io.InputStream.nullInputStream();
        long long37 = inputStream35.skip((long) 'a');
        byte[] byteArray38 = new byte[] {};
        int int39 = inputStream35.read(byteArray38);
        int int40 = inputStream26.read(byteArray38);
        int int43 = inputStream17.read(byteArray38, 0, 0);
        int int44 = inputStream10.read(byteArray38);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = inputStream0.read(byteArray38, (int) '#', (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [35, 35 + 1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(inputStream17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(inputStream26);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(inputStream35);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
    }

    @Test
    public void test022() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test022");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        byte[] byteArray6 = inputStream0.readNBytes((int) (short) 10);
        java.io.OutputStream outputStream7 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long8 = inputStream0.transferTo(outputStream7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
    }

    @Test
    public void test023() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test023");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        java.lang.Class<?> wildcardClass8 = byteArray6.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test024() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test024");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray13 = new byte[] {};
        int int14 = inputStream10.read(byteArray13);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = inputStream0.readNBytes(byteArray13, (int) ' ', (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [32, 32 + 100) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test025() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test025");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        java.lang.Class<?> wildcardClass3 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass3);
    }

    @Test
    public void test026() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test026");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        long long16 = inputStream0.skip((long) 0);
        java.lang.Class<?> wildcardClass17 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass17);
    }

    @Test
    public void test027() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test027");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        long long11 = inputStream0.skip((long) '4');
        java.io.InputStream inputStream12 = java.io.InputStream.nullInputStream();
        long long14 = inputStream12.skip((long) 'a');
        byte[] byteArray15 = new byte[] {};
        int int16 = inputStream12.read(byteArray15);
        byte[] byteArray18 = inputStream12.readNBytes(10);
        long long20 = inputStream12.skip((long) '4');
        byte[] byteArray21 = inputStream12.readAllBytes();
        byte[] byteArray23 = inputStream12.readNBytes(1);
        // The following exception was thrown during execution in test generation
        try {
            int int26 = inputStream0.readNBytes(byteArray23, (int) '#', (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [35, 35 + 10) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(inputStream12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
    }

    @Test
    public void test028() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test028");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray15 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int16 = inputStream9.read(byteArray15);
        byte[] byteArray17 = inputStream9.readAllBytes();
        java.io.InputStream inputStream18 = java.io.InputStream.nullInputStream();
        long long20 = inputStream18.skip((long) 'a');
        byte[] byteArray21 = new byte[] {};
        int int22 = inputStream18.read(byteArray21);
        int int23 = inputStream9.read(byteArray21);
        int int26 = inputStream0.read(byteArray21, 0, 0);
        java.lang.Class<?> wildcardClass27 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(inputStream18);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test029() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test029");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        long long16 = inputStream0.skip((long) 0);
        java.io.OutputStream outputStream17 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long18 = inputStream0.transferTo(outputStream17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test030() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test030");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream0.read(byteArray10);
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long13 = inputStream0.transferTo(outputStream12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
    }

    @Test
    public void test031() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test031");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray9 = inputStream0.readNBytes((int) (short) 100);
        byte[] byteArray10 = inputStream0.readAllBytes();
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray14 = new byte[] {};
        int int15 = inputStream11.read(byteArray14);
        byte[] byteArray17 = inputStream11.readNBytes(10);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = inputStream0.read(byteArray17, 10, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [10, 10 + 100) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
    }

    @Test
    public void test032() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test032");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        byte[] byteArray7 = inputStream0.readAllBytes();
        java.io.InputStream inputStream8 = java.io.InputStream.nullInputStream();
        long long10 = inputStream8.skip((long) 'a');
        byte[] byteArray11 = new byte[] {};
        int int12 = inputStream8.read(byteArray11);
        // The following exception was thrown during execution in test generation
        try {
            int int15 = inputStream0.read(byteArray11, (int) (byte) 1, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [1, 1 + 1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(inputStream8);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test033() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test033");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        byte[] byteArray1 = inputStream0.readAllBytes();
        java.io.InputStream inputStream2 = java.io.InputStream.nullInputStream();
        long long4 = inputStream2.skip((long) 'a');
        byte[] byteArray5 = new byte[] {};
        int int6 = inputStream2.read(byteArray5);
        byte[] byteArray8 = inputStream2.readNBytes(10);
        int int9 = inputStream0.read(byteArray8);
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray13 = inputStream10.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int16 = inputStream0.read(byteArray13, (int) (byte) 1, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [1, 1 + 1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(inputStream2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
    }

    @Test
    public void test034() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test034");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        byte[] byteArray7 = inputStream0.readAllBytes();
        java.lang.Class<?> wildcardClass8 = byteArray7.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(wildcardClass8);
    }

    @Test
    public void test035() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test035");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int17 = inputStream10.read(byteArray16);
        byte[] byteArray19 = inputStream10.readNBytes((int) (short) 100);
        int int20 = inputStream0.read(byteArray19);
        java.lang.Class<?> wildcardClass21 = byteArray19.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test036() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test036");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        java.io.InputStream inputStream5 = java.io.InputStream.nullInputStream();
        byte[] byteArray6 = inputStream5.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int9 = inputStream0.read(byteArray6, 100, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [100, 100 + 52) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(inputStream5);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
    }

    @Test
    public void test037() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test037");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray11 = inputStream0.readNBytes(1);
        java.io.InputStream inputStream12 = java.io.InputStream.nullInputStream();
        long long14 = inputStream12.skip((long) 'a');
        byte[] byteArray18 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int19 = inputStream12.read(byteArray18);
        byte[] byteArray20 = inputStream12.readAllBytes();
        java.io.InputStream inputStream21 = java.io.InputStream.nullInputStream();
        long long23 = inputStream21.skip((long) 'a');
        byte[] byteArray27 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int28 = inputStream21.read(byteArray27);
        byte[] byteArray29 = inputStream21.readAllBytes();
        java.io.InputStream inputStream30 = java.io.InputStream.nullInputStream();
        long long32 = inputStream30.skip((long) 'a');
        byte[] byteArray33 = new byte[] {};
        int int34 = inputStream30.read(byteArray33);
        int int35 = inputStream21.read(byteArray33);
        int int38 = inputStream12.read(byteArray33, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int41 = inputStream0.read(byteArray33, (-1), (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [-1, -1 + -1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(inputStream12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(inputStream21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(inputStream30);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test038() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test038");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        long long16 = inputStream0.skip((long) (byte) 100);
        java.io.InputStream inputStream17 = java.io.InputStream.nullInputStream();
        long long19 = inputStream17.skip((long) 'a');
        byte[] byteArray23 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int24 = inputStream17.read(byteArray23);
        byte[] byteArray25 = inputStream17.readAllBytes();
        java.io.InputStream inputStream26 = java.io.InputStream.nullInputStream();
        long long28 = inputStream26.skip((long) 'a');
        byte[] byteArray29 = new byte[] {};
        int int30 = inputStream26.read(byteArray29);
        int int31 = inputStream17.read(byteArray29);
        // The following exception was thrown during execution in test generation
        try {
            int int34 = inputStream0.readNBytes(byteArray29, (int) ' ', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [32, 32 + -1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(inputStream17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(inputStream26);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test039() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test039");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        long long16 = inputStream0.skip((long) 0);
        byte[] byteArray17 = inputStream0.readAllBytes();
        java.lang.Class<?> wildcardClass18 = byteArray17.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(wildcardClass18);
    }

    @Test
    public void test040() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test040");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        byte[] byteArray8 = inputStream0.readNBytes((int) '4');
        java.io.OutputStream outputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long10 = inputStream0.transferTo(outputStream9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
    }

    @Test
    public void test041() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test041");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream7.read(byteArray10);
        byte[] byteArray13 = inputStream7.readNBytes(10);
        int int14 = inputStream0.read(byteArray13);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray16 = inputStream0.readNBytes((int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: len < 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test042() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test042");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray13 = new byte[] {};
        int int14 = inputStream10.read(byteArray13);
        byte[] byteArray16 = inputStream10.readNBytes(10);
        long long18 = inputStream10.skip((long) '4');
        byte[] byteArray19 = inputStream10.readAllBytes();
        java.io.InputStream inputStream20 = java.io.InputStream.nullInputStream();
        long long22 = inputStream20.skip((long) 'a');
        byte[] byteArray26 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int27 = inputStream20.read(byteArray26);
        byte[] byteArray29 = inputStream20.readNBytes((int) (short) 100);
        int int30 = inputStream10.read(byteArray29);
        int int31 = inputStream0.read(byteArray29);
        java.io.InputStream inputStream32 = java.io.InputStream.nullInputStream();
        long long34 = inputStream32.skip((long) 'a');
        byte[] byteArray35 = new byte[] {};
        int int36 = inputStream32.read(byteArray35);
        byte[] byteArray38 = inputStream32.readNBytes(10);
        long long40 = inputStream32.skip((long) '4');
        byte[] byteArray41 = inputStream32.readAllBytes();
        byte[] byteArray43 = inputStream32.readNBytes(1);
        // The following exception was thrown during execution in test generation
        try {
            int int46 = inputStream0.read(byteArray43, (int) (byte) 100, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [100, 100 + 1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(inputStream20);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(inputStream32);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[]");
    }

    @Test
    public void test043() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test043");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        long long9 = inputStream0.skip(1L);
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray13 = new byte[] {};
        int int14 = inputStream10.read(byteArray13);
        byte[] byteArray16 = inputStream10.readNBytes(10);
        long long18 = inputStream10.skip((long) '4');
        byte[] byteArray19 = inputStream10.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int22 = inputStream0.read(byteArray19, (int) (short) 0, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [0, 0 + 1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
    }

    @Test
    public void test044() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test044");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int17 = inputStream10.read(byteArray16);
        byte[] byteArray18 = inputStream10.readAllBytes();
        byte[] byteArray19 = inputStream10.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int22 = inputStream0.readNBytes(byteArray19, (int) ' ', (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [32, 32 + 97) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
    }

    @Test
    public void test045() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test045");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray10 = inputStream0.readNBytes((int) (byte) 10);
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray14 = new byte[] {};
        int int15 = inputStream11.read(byteArray14);
        byte[] byteArray17 = inputStream11.readNBytes(10);
        long long19 = inputStream11.skip((long) '4');
        byte[] byteArray20 = inputStream11.readAllBytes();
        byte[] byteArray22 = inputStream11.readNBytes(1);
        int int23 = inputStream0.read(byteArray22);
        java.io.InputStream inputStream24 = java.io.InputStream.nullInputStream();
        long long26 = inputStream24.skip((long) 'a');
        byte[] byteArray30 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int31 = inputStream24.read(byteArray30);
        byte[] byteArray32 = inputStream24.readAllBytes();
        byte[] byteArray33 = inputStream24.readAllBytes();
        byte[] byteArray34 = inputStream24.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int37 = inputStream0.read(byteArray34, (int) (short) 100, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [100, 100 + 100) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(inputStream24);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
    }

    @Test
    public void test046() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test046");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        long long10 = inputStream0.skip((long) '#');
        byte[] byteArray11 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int14 = inputStream0.readNBytes(byteArray11, (int) (short) 100, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test047() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test047");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray9 = inputStream0.readNBytes((int) (short) 100);
        byte[] byteArray10 = inputStream0.readAllBytes();
        java.io.OutputStream outputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long12 = inputStream0.transferTo(outputStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
    }

    @Test
    public void test048() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test048");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) 1 };
        int int11 = inputStream0.read(byteArray10);
        byte[] byteArray13 = inputStream0.readNBytes((int) (byte) 1);
        java.io.InputStream inputStream14 = java.io.InputStream.nullInputStream();
        long long16 = inputStream14.skip((long) 'a');
        byte[] byteArray20 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int21 = inputStream14.read(byteArray20);
        byte[] byteArray22 = inputStream14.readAllBytes();
        java.io.InputStream inputStream23 = java.io.InputStream.nullInputStream();
        long long25 = inputStream23.skip((long) 'a');
        byte[] byteArray26 = new byte[] {};
        int int27 = inputStream23.read(byteArray26);
        int int28 = inputStream14.read(byteArray26);
        long long30 = inputStream14.skip((long) 0);
        byte[] byteArray31 = inputStream14.readAllBytes();
        byte[] byteArray33 = inputStream14.readNBytes((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = inputStream0.read(byteArray33, (int) (short) -1, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [-1, -1 + 0) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, 1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(inputStream14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertNotNull(inputStream23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
    }

    @Test
    public void test049() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test049");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        long long11 = inputStream0.skip((long) '4');
        java.lang.Class<?> wildcardClass12 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test050() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test050");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray9 = inputStream0.readNBytes((int) (short) 100);
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray13 = new byte[] {};
        int int14 = inputStream10.read(byteArray13);
        byte[] byteArray16 = inputStream10.readNBytes(10);
        long long18 = inputStream10.skip((long) '4');
        byte[] byteArray19 = inputStream10.readAllBytes();
        byte[] byteArray21 = inputStream10.readNBytes(1);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = inputStream0.readNBytes(byteArray21, (int) (byte) 0, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [0, 0 + 97) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
    }

    @Test
    public void test051() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test051");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray15 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int16 = inputStream9.read(byteArray15);
        byte[] byteArray17 = inputStream9.readAllBytes();
        java.io.InputStream inputStream18 = java.io.InputStream.nullInputStream();
        long long20 = inputStream18.skip((long) 'a');
        byte[] byteArray21 = new byte[] {};
        int int22 = inputStream18.read(byteArray21);
        int int23 = inputStream9.read(byteArray21);
        int int26 = inputStream0.read(byteArray21, 0, 0);
        java.io.OutputStream outputStream27 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long28 = inputStream0.transferTo(outputStream27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(inputStream18);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test052() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test052");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        long long10 = inputStream0.skip(1L);
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray14 = new byte[] {};
        int int15 = inputStream11.read(byteArray14);
        byte[] byteArray17 = inputStream11.readNBytes(10);
        java.io.InputStream inputStream18 = java.io.InputStream.nullInputStream();
        long long20 = inputStream18.skip((long) 'a');
        byte[] byteArray21 = new byte[] {};
        int int22 = inputStream18.read(byteArray21);
        byte[] byteArray24 = inputStream18.readNBytes(10);
        int int25 = inputStream11.read(byteArray24);
        int int26 = inputStream0.read(byteArray24);
        java.lang.Class<?> wildcardClass27 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(inputStream18);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(wildcardClass27);
    }

    @Test
    public void test053() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test053");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        byte[] byteArray1 = inputStream0.readAllBytes();
        java.io.InputStream inputStream2 = java.io.InputStream.nullInputStream();
        long long4 = inputStream2.skip((long) 'a');
        byte[] byteArray5 = new byte[] {};
        int int6 = inputStream2.read(byteArray5);
        byte[] byteArray8 = inputStream2.readNBytes(10);
        int int9 = inputStream0.read(byteArray8);
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int17 = inputStream10.read(byteArray16);
        byte[] byteArray18 = inputStream10.readAllBytes();
        java.io.InputStream inputStream19 = java.io.InputStream.nullInputStream();
        long long21 = inputStream19.skip((long) 'a');
        byte[] byteArray25 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int26 = inputStream19.read(byteArray25);
        byte[] byteArray27 = inputStream19.readAllBytes();
        java.io.InputStream inputStream28 = java.io.InputStream.nullInputStream();
        long long30 = inputStream28.skip((long) 'a');
        byte[] byteArray31 = new byte[] {};
        int int32 = inputStream28.read(byteArray31);
        int int33 = inputStream19.read(byteArray31);
        int int36 = inputStream10.read(byteArray31, 0, 0);
        int int37 = inputStream0.read(byteArray31);
        java.io.OutputStream outputStream38 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long39 = inputStream0.transferTo(outputStream38);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(inputStream2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(inputStream19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(inputStream28);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
    }

    @Test
    public void test054() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test054");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        java.lang.Class<?> wildcardClass15 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test055() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test055");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        java.lang.Class<?> wildcardClass10 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test056() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test056");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) 1 };
        int int11 = inputStream0.read(byteArray10);
        byte[] byteArray13 = inputStream0.readNBytes((int) (byte) 1);
        java.io.InputStream inputStream14 = java.io.InputStream.nullInputStream();
        long long16 = inputStream14.skip((long) 'a');
        long long18 = inputStream14.skip((long) 10);
        byte[] byteArray20 = inputStream14.readNBytes((int) (short) 10);
        byte[] byteArray22 = inputStream14.readNBytes((int) (byte) 0);
        java.io.InputStream inputStream23 = java.io.InputStream.nullInputStream();
        long long25 = inputStream23.skip((long) 'a');
        byte[] byteArray26 = new byte[] {};
        int int27 = inputStream23.read(byteArray26);
        byte[] byteArray29 = inputStream23.readNBytes(10);
        java.io.InputStream inputStream30 = java.io.InputStream.nullInputStream();
        long long32 = inputStream30.skip((long) 'a');
        byte[] byteArray33 = new byte[] {};
        int int34 = inputStream30.read(byteArray33);
        byte[] byteArray36 = inputStream30.readNBytes(10);
        int int37 = inputStream23.read(byteArray36);
        byte[] byteArray39 = inputStream23.readNBytes((int) (byte) 100);
        int int40 = inputStream14.read(byteArray39);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = inputStream0.readNBytes(byteArray39, 0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [0, 0 + -1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, 1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(inputStream14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertNotNull(inputStream23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(inputStream30);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test057() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test057");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        java.lang.Class<?> wildcardClass10 = byteArray9.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test058() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test058");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        byte[] byteArray6 = inputStream0.readNBytes((int) (short) 10);
        byte[] byteArray8 = inputStream0.readNBytes((int) '#');
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray15 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int16 = inputStream9.read(byteArray15);
        byte[] byteArray17 = inputStream9.readAllBytes();
        java.io.InputStream inputStream18 = java.io.InputStream.nullInputStream();
        long long20 = inputStream18.skip((long) 'a');
        byte[] byteArray21 = new byte[] {};
        int int22 = inputStream18.read(byteArray21);
        int int23 = inputStream9.read(byteArray21);
        byte[] byteArray25 = inputStream9.readNBytes((int) (byte) 0);
        java.io.InputStream inputStream26 = java.io.InputStream.nullInputStream();
        long long28 = inputStream26.skip((long) 'a');
        byte[] byteArray32 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int33 = inputStream26.read(byteArray32);
        byte[] byteArray34 = inputStream26.readAllBytes();
        byte[] byteArray35 = inputStream26.readAllBytes();
        byte[] byteArray36 = new byte[] {};
        int int37 = inputStream26.read(byteArray36);
        byte[] byteArray39 = inputStream26.readNBytes((int) (short) 0);
        int int40 = inputStream9.read(byteArray39);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = inputStream0.read(byteArray39, (int) (short) -1, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [-1, -1 + 0) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(inputStream18);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(inputStream26);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test059() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test059");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray13 = new byte[] {};
        int int14 = inputStream10.read(byteArray13);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = inputStream0.read(byteArray13, (-1), 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [-1, -1 + 100) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test060() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test060");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        java.lang.Class<?> wildcardClass5 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test061() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test061");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream0.read(byteArray10);
        byte[] byteArray13 = inputStream0.readNBytes((int) (short) 100);
        java.io.OutputStream outputStream14 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long15 = inputStream0.transferTo(outputStream14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
    }

    @Test
    public void test062() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test062");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        byte[] byteArray1 = inputStream0.readAllBytes();
        java.io.OutputStream outputStream2 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long3 = inputStream0.transferTo(outputStream2);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
    }

    @Test
    public void test063() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test063");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream7.read(byteArray10);
        byte[] byteArray13 = inputStream7.readNBytes(10);
        int int14 = inputStream0.read(byteArray13);
        java.io.OutputStream outputStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long16 = inputStream0.transferTo(outputStream15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
    }

    @Test
    public void test064() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test064");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream0.read(byteArray10);
        java.lang.Class<?> wildcardClass12 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test065() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test065");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream7.read(byteArray10);
        byte[] byteArray13 = inputStream7.readNBytes(10);
        int int14 = inputStream0.read(byteArray13);
        byte[] byteArray16 = inputStream0.readNBytes((int) (byte) 100);
        byte[] byteArray17 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int20 = inputStream0.readNBytes(byteArray17, (int) '#', (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
    }

    @Test
    public void test066() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test066");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int17 = inputStream10.read(byteArray16);
        byte[] byteArray19 = inputStream10.readNBytes((int) (short) 100);
        int int20 = inputStream0.read(byteArray19);
        java.lang.Class<?> wildcardClass21 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test067() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test067");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        long long11 = inputStream0.skip((long) '4');
        java.io.InputStream inputStream12 = java.io.InputStream.nullInputStream();
        long long14 = inputStream12.skip((long) 'a');
        byte[] byteArray18 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int19 = inputStream12.read(byteArray18);
        byte[] byteArray20 = inputStream12.readAllBytes();
        java.io.InputStream inputStream21 = java.io.InputStream.nullInputStream();
        long long23 = inputStream21.skip((long) 'a');
        byte[] byteArray27 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int28 = inputStream21.read(byteArray27);
        byte[] byteArray29 = inputStream21.readAllBytes();
        java.io.InputStream inputStream30 = java.io.InputStream.nullInputStream();
        long long32 = inputStream30.skip((long) 'a');
        byte[] byteArray33 = new byte[] {};
        int int34 = inputStream30.read(byteArray33);
        int int35 = inputStream21.read(byteArray33);
        int int38 = inputStream12.read(byteArray33, 0, 0);
        // The following exception was thrown during execution in test generation
        try {
            int int41 = inputStream0.readNBytes(byteArray33, (int) (byte) -1, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [-1, -1 + 0) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(inputStream12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(inputStream21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(inputStream30);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
    }

    @Test
    public void test068() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test068");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray9 = inputStream0.readNBytes((int) (short) 100);
        byte[] byteArray11 = inputStream0.readNBytes((int) (short) 10);
        java.io.InputStream inputStream12 = java.io.InputStream.nullInputStream();
        long long14 = inputStream12.skip((long) 'a');
        byte[] byteArray18 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int19 = inputStream12.read(byteArray18);
        byte[] byteArray20 = inputStream12.readAllBytes();
        byte[] byteArray21 = inputStream12.readAllBytes();
        byte[] byteArray22 = new byte[] {};
        int int23 = inputStream12.read(byteArray22);
        byte[] byteArray24 = inputStream12.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int27 = inputStream0.readNBytes(byteArray24, (int) (byte) 0, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [0, 0 + 10) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(inputStream12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + (-1) + "'", int19 == (-1));
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
    }

    @Test
    public void test069() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test069");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        java.io.OutputStream outputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long10 = inputStream0.transferTo(outputStream9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
    }

    @Test
    public void test070() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test070");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray15 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int16 = inputStream9.read(byteArray15);
        byte[] byteArray17 = inputStream9.readAllBytes();
        java.io.InputStream inputStream18 = java.io.InputStream.nullInputStream();
        long long20 = inputStream18.skip((long) 'a');
        byte[] byteArray21 = new byte[] {};
        int int22 = inputStream18.read(byteArray21);
        int int23 = inputStream9.read(byteArray21);
        int int26 = inputStream0.read(byteArray21, 0, 0);
        java.io.InputStream inputStream27 = java.io.InputStream.nullInputStream();
        long long29 = inputStream27.skip((long) 'a');
        byte[] byteArray30 = new byte[] {};
        int int31 = inputStream27.read(byteArray30);
        byte[] byteArray33 = inputStream27.readNBytes(10);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = inputStream0.readNBytes(byteArray33, (int) '4', (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [52, 52 + 0) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(inputStream18);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(inputStream27);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
    }

    @Test
    public void test071() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test071");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray10 = inputStream0.readNBytes((int) (byte) 10);
        byte[] byteArray12 = inputStream0.readNBytes((int) (byte) 1);
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        long long15 = inputStream13.skip((long) 'a');
        byte[] byteArray16 = new byte[] {};
        int int17 = inputStream13.read(byteArray16);
        byte[] byteArray19 = inputStream13.readNBytes(10);
        long long21 = inputStream13.skip((long) '4');
        byte[] byteArray23 = inputStream13.readNBytes((int) (byte) 10);
        java.io.InputStream inputStream24 = java.io.InputStream.nullInputStream();
        long long26 = inputStream24.skip((long) 'a');
        byte[] byteArray27 = new byte[] {};
        int int28 = inputStream24.read(byteArray27);
        byte[] byteArray30 = inputStream24.readNBytes(10);
        long long32 = inputStream24.skip((long) '4');
        byte[] byteArray33 = inputStream24.readAllBytes();
        byte[] byteArray35 = inputStream24.readNBytes(1);
        int int36 = inputStream13.read(byteArray35);
        int int37 = inputStream0.read(byteArray35);
        java.io.InputStream inputStream38 = java.io.InputStream.nullInputStream();
        long long40 = inputStream38.skip((long) 'a');
        byte[] byteArray44 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int45 = inputStream38.read(byteArray44);
        byte[] byteArray46 = inputStream38.readAllBytes();
        java.io.InputStream inputStream47 = java.io.InputStream.nullInputStream();
        long long49 = inputStream47.skip((long) 'a');
        byte[] byteArray50 = new byte[] {};
        int int51 = inputStream47.read(byteArray50);
        int int52 = inputStream38.read(byteArray50);
        byte[] byteArray54 = inputStream38.readNBytes((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int57 = inputStream0.read(byteArray54, (int) (short) 1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [1, 1 + 32) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(inputStream24);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(inputStream38);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(inputStream47);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
    }

    @Test
    public void test072() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test072");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        java.lang.Class<?> wildcardClass5 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass5);
    }

    @Test
    public void test073() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test073");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray11 = inputStream0.readNBytes(1);
        java.io.InputStream inputStream12 = java.io.InputStream.nullInputStream();
        long long14 = inputStream12.skip((long) 'a');
        long long16 = inputStream12.skip((long) 10);
        byte[] byteArray18 = inputStream12.readNBytes((int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = inputStream0.readNBytes(byteArray18, (int) (short) 1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [1, 1 + 10) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(inputStream12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
    }

    @Test
    public void test074() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test074");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) 1 };
        int int11 = inputStream0.read(byteArray10);
        java.io.OutputStream outputStream12 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long13 = inputStream0.transferTo(outputStream12);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, 1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
    }

    @Test
    public void test075() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test075");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        java.io.OutputStream outputStream5 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long6 = inputStream0.transferTo(outputStream5);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
    }

    @Test
    public void test076() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test076");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        long long10 = inputStream0.skip((long) '#');
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray14 = new byte[] {};
        int int15 = inputStream11.read(byteArray14);
        byte[] byteArray17 = inputStream11.readNBytes(10);
        long long19 = inputStream11.skip((long) '4');
        byte[] byteArray20 = inputStream11.readAllBytes();
        byte[] byteArray22 = inputStream11.readNBytes(1);
        java.io.InputStream inputStream23 = java.io.InputStream.nullInputStream();
        long long25 = inputStream23.skip((long) 'a');
        byte[] byteArray26 = new byte[] {};
        int int27 = inputStream23.read(byteArray26);
        byte[] byteArray29 = inputStream23.readNBytes(10);
        long long31 = inputStream23.skip((long) '4');
        byte[] byteArray33 = inputStream23.readNBytes((int) (byte) 10);
        int int34 = inputStream11.read(byteArray33);
        // The following exception was thrown during execution in test generation
        try {
            int int37 = inputStream0.read(byteArray33, 10, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [10, 10 + 97) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertNotNull(inputStream23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
    }

    @Test
    public void test077() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test077");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream0.read(byteArray10);
        byte[] byteArray12 = inputStream0.readAllBytes();
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        long long15 = inputStream13.skip((long) 'a');
        byte[] byteArray16 = new byte[] {};
        int int17 = inputStream13.read(byteArray16);
        byte[] byteArray19 = inputStream13.readNBytes(10);
        byte[] byteArray23 = new byte[] { (byte) 1, (byte) 10, (byte) 1 };
        int int24 = inputStream13.read(byteArray23);
        // The following exception was thrown during execution in test generation
        try {
            int int27 = inputStream0.readNBytes(byteArray23, (int) (short) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [-1, -1 + 0) out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, 10, 1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test078() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test078");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) 1 };
        int int11 = inputStream0.read(byteArray10);
        java.lang.Class<?> wildcardClass12 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, 1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test079() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test079");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray11 = inputStream0.readNBytes((int) (short) 100);
        byte[] byteArray12 = inputStream0.readAllBytes();
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        long long15 = inputStream13.skip((long) 'a');
        long long17 = inputStream13.skip((long) 10);
        byte[] byteArray19 = inputStream13.readNBytes((int) (short) 10);
        byte[] byteArray21 = inputStream13.readNBytes((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = inputStream0.read(byteArray21, (-1), 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [-1, -1 + 10) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
    }

    @Test
    public void test080() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test080");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray9 = inputStream0.readNBytes((int) (short) 100);
        byte[] byteArray11 = inputStream0.readNBytes((int) (short) 10);
        java.io.InputStream inputStream12 = java.io.InputStream.nullInputStream();
        long long14 = inputStream12.skip((long) 'a');
        byte[] byteArray15 = new byte[] {};
        int int16 = inputStream12.read(byteArray15);
        byte[] byteArray18 = inputStream12.readNBytes(10);
        java.io.InputStream inputStream19 = java.io.InputStream.nullInputStream();
        long long21 = inputStream19.skip((long) 'a');
        byte[] byteArray22 = new byte[] {};
        int int23 = inputStream19.read(byteArray22);
        byte[] byteArray25 = inputStream19.readNBytes(10);
        int int26 = inputStream12.read(byteArray25);
        byte[] byteArray28 = inputStream12.readNBytes((int) (byte) 100);
        java.io.InputStream inputStream29 = java.io.InputStream.nullInputStream();
        long long31 = inputStream29.skip((long) 'a');
        byte[] byteArray32 = new byte[] {};
        int int33 = inputStream29.read(byteArray32);
        byte[] byteArray35 = inputStream29.readNBytes(10);
        long long37 = inputStream29.skip((long) '4');
        byte[] byteArray38 = inputStream29.readAllBytes();
        java.io.InputStream inputStream39 = java.io.InputStream.nullInputStream();
        long long41 = inputStream39.skip((long) 'a');
        byte[] byteArray42 = new byte[] {};
        int int43 = inputStream39.read(byteArray42);
        byte[] byteArray45 = inputStream39.readNBytes(10);
        long long47 = inputStream39.skip((long) '4');
        byte[] byteArray48 = inputStream39.readAllBytes();
        java.io.InputStream inputStream49 = java.io.InputStream.nullInputStream();
        long long51 = inputStream49.skip((long) 'a');
        byte[] byteArray55 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int56 = inputStream49.read(byteArray55);
        byte[] byteArray58 = inputStream49.readNBytes((int) (short) 100);
        int int59 = inputStream39.read(byteArray58);
        int int60 = inputStream29.read(byteArray58);
        int int61 = inputStream12.read(byteArray58);
        byte[] byteArray62 = inputStream12.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int65 = inputStream0.readNBytes(byteArray62, (int) 'a', (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [97, 97 + 10) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(inputStream12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(inputStream19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertNotNull(inputStream29);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertNotNull(inputStream39);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(inputStream49);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
    }

    @Test
    public void test081() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test081");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream0.read(byteArray10);
        byte[] byteArray13 = inputStream0.readNBytes((int) (short) 0);
        java.io.OutputStream outputStream14 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long15 = inputStream0.transferTo(outputStream14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
    }

    @Test
    public void test082() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test082");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        byte[] byteArray8 = inputStream0.readNBytes((int) '4');
        java.lang.Class<?> wildcardClass9 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test083() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test083");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        byte[] byteArray6 = inputStream0.readNBytes((int) (short) 10);
        byte[] byteArray8 = inputStream0.readNBytes((int) '#');
        java.lang.Class<?> wildcardClass9 = byteArray8.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test084() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test084");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = inputStream0.readAllBytes();
        byte[] byteArray11 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int14 = inputStream0.readNBytes(byteArray11, (int) (byte) 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
    }

    @Test
    public void test085() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test085");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        long long10 = inputStream0.skip(1L);
        java.io.OutputStream outputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long12 = inputStream0.transferTo(outputStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test086() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test086");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray11 = inputStream0.readNBytes((int) (short) 100);
        byte[] byteArray12 = inputStream0.readAllBytes();
        java.lang.Class<?> wildcardClass13 = byteArray12.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test087() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test087");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream7.read(byteArray10);
        byte[] byteArray13 = inputStream7.readNBytes(10);
        int int14 = inputStream0.read(byteArray13);
        byte[] byteArray16 = inputStream0.readNBytes((int) (byte) 100);
        long long18 = inputStream0.skip(0L);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
    }

    @Test
    public void test088() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test088");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream7.read(byteArray10);
        byte[] byteArray13 = inputStream7.readNBytes(10);
        int int14 = inputStream0.read(byteArray13);
        byte[] byteArray16 = inputStream0.readNBytes((int) (byte) 100);
        java.io.InputStream inputStream17 = java.io.InputStream.nullInputStream();
        long long19 = inputStream17.skip((long) 'a');
        byte[] byteArray23 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int24 = inputStream17.read(byteArray23);
        byte[] byteArray26 = inputStream17.readNBytes((int) (short) 100);
        int int27 = inputStream0.read(byteArray26);
        java.io.OutputStream outputStream28 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long29 = inputStream0.transferTo(outputStream28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(inputStream17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test089() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test089");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        byte[] byteArray7 = inputStream0.readAllBytes();
        java.io.OutputStream outputStream8 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long9 = inputStream0.transferTo(outputStream8);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
    }

    @Test
    public void test090() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test090");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        byte[] byteArray6 = inputStream0.readNBytes((int) (short) 10);
        byte[] byteArray8 = inputStream0.readNBytes((int) (byte) 0);
        long long10 = inputStream0.skip((long) (short) 10);
        java.lang.Class<?> wildcardClass11 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test091() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test091");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream0.read(byteArray10);
        byte[] byteArray13 = inputStream0.readNBytes((int) (short) 100);
        java.lang.Class<?> wildcardClass14 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test092() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test092");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        byte[] byteArray6 = inputStream0.readNBytes((int) (short) 10);
        byte[] byteArray8 = inputStream0.readNBytes((int) (byte) 0);
        java.io.OutputStream outputStream9 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long10 = inputStream0.transferTo(outputStream9);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
    }

    @Test
    public void test093() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test093");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int17 = inputStream10.read(byteArray16);
        byte[] byteArray18 = inputStream10.readAllBytes();
        java.io.InputStream inputStream19 = java.io.InputStream.nullInputStream();
        long long21 = inputStream19.skip((long) 'a');
        byte[] byteArray22 = new byte[] {};
        int int23 = inputStream19.read(byteArray22);
        int int24 = inputStream10.read(byteArray22);
        byte[] byteArray26 = inputStream10.readNBytes((int) (byte) 0);
        int int29 = inputStream0.read(byteArray26, 0, 0);
        java.io.OutputStream outputStream30 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long31 = inputStream0.transferTo(outputStream30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(inputStream19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test094() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test094");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        java.io.InputStream inputStream15 = java.io.InputStream.nullInputStream();
        long long17 = inputStream15.skip((long) 'a');
        byte[] byteArray18 = new byte[] {};
        int int19 = inputStream15.read(byteArray18);
        byte[] byteArray21 = inputStream15.readNBytes(10);
        long long23 = inputStream15.skip((long) '4');
        byte[] byteArray24 = inputStream15.readAllBytes();
        byte[] byteArray26 = inputStream15.readNBytes((int) (short) 100);
        int int27 = inputStream0.read(byteArray26);
        java.io.OutputStream outputStream28 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long29 = inputStream0.transferTo(outputStream28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(inputStream15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test095() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test095");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        long long11 = inputStream0.skip((long) '4');
        java.io.InputStream inputStream12 = java.io.InputStream.nullInputStream();
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        byte[] byteArray14 = inputStream13.readAllBytes();
        java.io.InputStream inputStream15 = java.io.InputStream.nullInputStream();
        long long17 = inputStream15.skip((long) 'a');
        byte[] byteArray18 = new byte[] {};
        int int19 = inputStream15.read(byteArray18);
        byte[] byteArray21 = inputStream15.readNBytes(10);
        int int22 = inputStream13.read(byteArray21);
        byte[] byteArray23 = inputStream13.readAllBytes();
        int int24 = inputStream12.read(byteArray23);
        byte[] byteArray26 = inputStream12.readNBytes(10);
        int int27 = inputStream0.read(byteArray26);
        java.io.OutputStream outputStream28 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long29 = inputStream0.transferTo(outputStream28);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(inputStream12);
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertNotNull(inputStream15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test096() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test096");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        long long16 = inputStream0.skip((long) 0);
        long long18 = inputStream0.skip(0L);
        java.io.OutputStream outputStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long20 = inputStream0.transferTo(outputStream19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
    }

    @Test
    public void test097() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test097");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        java.io.InputStream inputStream3 = java.io.InputStream.nullInputStream();
        long long5 = inputStream3.skip((long) 'a');
        byte[] byteArray6 = new byte[] {};
        int int7 = inputStream3.read(byteArray6);
        byte[] byteArray9 = inputStream3.readNBytes(10);
        long long11 = inputStream3.skip((long) '4');
        byte[] byteArray12 = inputStream3.readAllBytes();
        byte[] byteArray14 = inputStream3.readNBytes(1);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = inputStream0.read(byteArray14, (int) (byte) 100, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [100, 100 + -1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(inputStream3);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
    }

    @Test
    public void test098() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test098");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        long long11 = inputStream0.skip((long) '4');
        java.io.InputStream inputStream12 = java.io.InputStream.nullInputStream();
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        byte[] byteArray14 = inputStream13.readAllBytes();
        java.io.InputStream inputStream15 = java.io.InputStream.nullInputStream();
        long long17 = inputStream15.skip((long) 'a');
        byte[] byteArray18 = new byte[] {};
        int int19 = inputStream15.read(byteArray18);
        byte[] byteArray21 = inputStream15.readNBytes(10);
        int int22 = inputStream13.read(byteArray21);
        byte[] byteArray23 = inputStream13.readAllBytes();
        int int24 = inputStream12.read(byteArray23);
        byte[] byteArray26 = inputStream12.readNBytes(10);
        int int27 = inputStream0.read(byteArray26);
        java.io.InputStream inputStream28 = java.io.InputStream.nullInputStream();
        byte[] byteArray29 = inputStream28.readAllBytes();
        java.io.InputStream inputStream30 = java.io.InputStream.nullInputStream();
        long long32 = inputStream30.skip((long) 'a');
        byte[] byteArray33 = new byte[] {};
        int int34 = inputStream30.read(byteArray33);
        byte[] byteArray36 = inputStream30.readNBytes(10);
        int int37 = inputStream28.read(byteArray36);
        // The following exception was thrown during execution in test generation
        try {
            int int40 = inputStream0.readNBytes(byteArray36, (int) (short) 1, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [1, 1 + 1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(inputStream12);
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertNotNull(inputStream15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(inputStream28);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(inputStream30);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
    }

    @Test
    public void test099() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test099");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        java.io.InputStream inputStream15 = java.io.InputStream.nullInputStream();
        long long17 = inputStream15.skip((long) 'a');
        byte[] byteArray18 = new byte[] {};
        int int19 = inputStream15.read(byteArray18);
        byte[] byteArray21 = inputStream15.readNBytes(10);
        long long23 = inputStream15.skip((long) '4');
        byte[] byteArray24 = inputStream15.readAllBytes();
        byte[] byteArray26 = inputStream15.readNBytes((int) (short) 100);
        int int27 = inputStream0.read(byteArray26);
        java.lang.Class<?> wildcardClass28 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(inputStream15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test100() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test100");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream0.read(byteArray10);
        byte[] byteArray12 = inputStream0.readAllBytes();
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long14 = inputStream0.transferTo(outputStream13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
    }

    @Test
    public void test101() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test101");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        byte[] byteArray6 = inputStream0.readNBytes((int) (short) 10);
        byte[] byteArray8 = inputStream0.readNBytes((int) (byte) 0);
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        byte[] byteArray15 = inputStream9.readNBytes(10);
        java.io.InputStream inputStream16 = java.io.InputStream.nullInputStream();
        long long18 = inputStream16.skip((long) 'a');
        byte[] byteArray19 = new byte[] {};
        int int20 = inputStream16.read(byteArray19);
        byte[] byteArray22 = inputStream16.readNBytes(10);
        int int23 = inputStream9.read(byteArray22);
        byte[] byteArray25 = inputStream9.readNBytes((int) (byte) 100);
        int int26 = inputStream0.read(byteArray25);
        java.io.InputStream inputStream27 = java.io.InputStream.nullInputStream();
        long long29 = inputStream27.skip((long) 'a');
        long long31 = inputStream27.skip((long) 10);
        byte[] byteArray33 = inputStream27.readNBytes((int) (short) 10);
        byte[] byteArray35 = inputStream27.readNBytes((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int38 = inputStream0.readNBytes(byteArray35, (int) (short) 0, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [0, 0 + 52) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertNotNull(inputStream16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(inputStream27);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
    }

    @Test
    public void test102() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test102");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        byte[] byteArray6 = inputStream0.readNBytes((int) (short) 0);
        java.io.OutputStream outputStream7 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long8 = inputStream0.transferTo(outputStream7);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
    }

    @Test
    public void test103() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test103");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        java.io.InputStream inputStream1 = java.io.InputStream.nullInputStream();
        byte[] byteArray2 = inputStream1.readAllBytes();
        java.io.InputStream inputStream3 = java.io.InputStream.nullInputStream();
        long long5 = inputStream3.skip((long) 'a');
        byte[] byteArray6 = new byte[] {};
        int int7 = inputStream3.read(byteArray6);
        byte[] byteArray9 = inputStream3.readNBytes(10);
        int int10 = inputStream1.read(byteArray9);
        byte[] byteArray11 = inputStream1.readAllBytes();
        int int12 = inputStream0.read(byteArray11);
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        long long15 = inputStream13.skip((long) 'a');
        byte[] byteArray19 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int20 = inputStream13.read(byteArray19);
        byte[] byteArray22 = inputStream13.readNBytes((int) (short) 100);
        byte[] byteArray23 = inputStream13.readAllBytes();
        int int24 = inputStream0.read(byteArray23);
        java.io.InputStream inputStream25 = java.io.InputStream.nullInputStream();
        byte[] byteArray26 = inputStream25.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int29 = inputStream0.readNBytes(byteArray26, (int) 'a', (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [97, 97 + 100) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(inputStream1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[]");
        org.junit.Assert.assertNotNull(inputStream3);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(inputStream25);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
    }

    @Test
    public void test104() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test104");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        byte[] byteArray1 = inputStream0.readAllBytes();
        java.io.InputStream inputStream2 = java.io.InputStream.nullInputStream();
        long long4 = inputStream2.skip((long) 'a');
        byte[] byteArray5 = new byte[] {};
        int int6 = inputStream2.read(byteArray5);
        byte[] byteArray8 = inputStream2.readNBytes(10);
        int int9 = inputStream0.read(byteArray8);
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int17 = inputStream10.read(byteArray16);
        byte[] byteArray18 = inputStream10.readAllBytes();
        java.io.InputStream inputStream19 = java.io.InputStream.nullInputStream();
        long long21 = inputStream19.skip((long) 'a');
        byte[] byteArray25 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int26 = inputStream19.read(byteArray25);
        byte[] byteArray27 = inputStream19.readAllBytes();
        java.io.InputStream inputStream28 = java.io.InputStream.nullInputStream();
        long long30 = inputStream28.skip((long) 'a');
        byte[] byteArray31 = new byte[] {};
        int int32 = inputStream28.read(byteArray31);
        int int33 = inputStream19.read(byteArray31);
        int int36 = inputStream10.read(byteArray31, 0, 0);
        int int37 = inputStream0.read(byteArray31);
        java.io.InputStream inputStream38 = java.io.InputStream.nullInputStream();
        long long40 = inputStream38.skip((long) 'a');
        byte[] byteArray41 = new byte[] {};
        int int42 = inputStream38.read(byteArray41);
        byte[] byteArray44 = inputStream38.readNBytes(10);
        byte[] byteArray48 = new byte[] { (byte) 1, (byte) 10, (byte) 1 };
        int int49 = inputStream38.read(byteArray48);
        byte[] byteArray51 = inputStream38.readNBytes((int) (byte) 1);
        int int52 = inputStream0.read(byteArray51);
        java.io.InputStream inputStream53 = java.io.InputStream.nullInputStream();
        long long55 = inputStream53.skip((long) 'a');
        byte[] byteArray56 = new byte[] {};
        int int57 = inputStream53.read(byteArray56);
        byte[] byteArray59 = inputStream53.readNBytes(10);
        long long61 = inputStream53.skip((long) '4');
        byte[] byteArray63 = inputStream53.readNBytes((int) (byte) 10);
        java.io.InputStream inputStream64 = java.io.InputStream.nullInputStream();
        long long66 = inputStream64.skip((long) 'a');
        byte[] byteArray67 = new byte[] {};
        int int68 = inputStream64.read(byteArray67);
        byte[] byteArray70 = inputStream64.readNBytes(10);
        long long72 = inputStream64.skip((long) '4');
        byte[] byteArray73 = inputStream64.readAllBytes();
        byte[] byteArray75 = inputStream64.readNBytes(1);
        int int76 = inputStream53.read(byteArray75);
        byte[] byteArray78 = inputStream53.readNBytes((int) ' ');
        int int79 = inputStream0.read(byteArray78);
        java.io.OutputStream outputStream80 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long81 = inputStream0.transferTo(outputStream80);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(inputStream2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(inputStream19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(inputStream28);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(inputStream38);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[1, 10, 1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(inputStream53);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[]");
        org.junit.Assert.assertNotNull(inputStream64);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[]");
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
    }

    @Test
    public void test105() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test105");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        java.lang.Class<?> wildcardClass9 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass9);
    }

    @Test
    public void test106() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test106");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        byte[] byteArray1 = inputStream0.readAllBytes();
        java.io.InputStream inputStream2 = java.io.InputStream.nullInputStream();
        long long4 = inputStream2.skip((long) 'a');
        byte[] byteArray5 = new byte[] {};
        int int6 = inputStream2.read(byteArray5);
        byte[] byteArray8 = inputStream2.readNBytes(10);
        int int9 = inputStream0.read(byteArray8);
        byte[] byteArray10 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int13 = inputStream0.readNBytes(byteArray10, (int) (byte) 10, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(inputStream2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
    }

    @Test
    public void test107() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test107");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray10 = inputStream0.readNBytes((int) (byte) 10);
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray14 = new byte[] {};
        int int15 = inputStream11.read(byteArray14);
        byte[] byteArray17 = inputStream11.readNBytes(10);
        long long19 = inputStream11.skip((long) '4');
        byte[] byteArray20 = inputStream11.readAllBytes();
        byte[] byteArray22 = inputStream11.readNBytes(1);
        int int23 = inputStream0.read(byteArray22);
        java.io.InputStream inputStream24 = java.io.InputStream.nullInputStream();
        long long26 = inputStream24.skip((long) 'a');
        byte[] byteArray30 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int31 = inputStream24.read(byteArray30);
        byte[] byteArray32 = inputStream24.readAllBytes();
        java.io.InputStream inputStream33 = java.io.InputStream.nullInputStream();
        long long35 = inputStream33.skip((long) 'a');
        byte[] byteArray36 = new byte[] {};
        int int37 = inputStream33.read(byteArray36);
        int int38 = inputStream24.read(byteArray36);
        long long40 = inputStream24.skip((long) 0);
        byte[] byteArray41 = inputStream24.readAllBytes();
        byte[] byteArray43 = inputStream24.readNBytes((int) (byte) 1);
        int int44 = inputStream0.read(byteArray43);
        java.lang.Class<?> wildcardClass45 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(inputStream24);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertNotNull(inputStream33);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(wildcardClass45);
    }

    @Test
    public void test108() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test108");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream7.read(byteArray10);
        byte[] byteArray13 = inputStream7.readNBytes(10);
        int int14 = inputStream0.read(byteArray13);
        byte[] byteArray16 = inputStream0.readNBytes((int) (byte) 100);
        java.io.InputStream inputStream17 = java.io.InputStream.nullInputStream();
        long long19 = inputStream17.skip((long) 'a');
        byte[] byteArray20 = new byte[] {};
        int int21 = inputStream17.read(byteArray20);
        byte[] byteArray23 = inputStream17.readNBytes(10);
        long long25 = inputStream17.skip((long) '4');
        byte[] byteArray26 = inputStream17.readAllBytes();
        java.io.InputStream inputStream27 = java.io.InputStream.nullInputStream();
        long long29 = inputStream27.skip((long) 'a');
        byte[] byteArray30 = new byte[] {};
        int int31 = inputStream27.read(byteArray30);
        byte[] byteArray33 = inputStream27.readNBytes(10);
        long long35 = inputStream27.skip((long) '4');
        byte[] byteArray36 = inputStream27.readAllBytes();
        java.io.InputStream inputStream37 = java.io.InputStream.nullInputStream();
        long long39 = inputStream37.skip((long) 'a');
        byte[] byteArray43 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int44 = inputStream37.read(byteArray43);
        byte[] byteArray46 = inputStream37.readNBytes((int) (short) 100);
        int int47 = inputStream27.read(byteArray46);
        int int48 = inputStream17.read(byteArray46);
        int int49 = inputStream0.read(byteArray46);
        byte[] byteArray50 = inputStream0.readAllBytes();
        byte[] byteArray51 = inputStream0.readAllBytes();
        java.io.OutputStream outputStream52 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long53 = inputStream0.transferTo(outputStream52);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(inputStream17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertNotNull(inputStream27);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(inputStream37);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
    }

    @Test
    public void test109() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test109");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream7.read(byteArray10);
        byte[] byteArray13 = inputStream7.readNBytes(10);
        int int14 = inputStream0.read(byteArray13);
        byte[] byteArray16 = inputStream0.readNBytes((int) (byte) 100);
        java.io.InputStream inputStream17 = java.io.InputStream.nullInputStream();
        long long19 = inputStream17.skip((long) 'a');
        byte[] byteArray20 = new byte[] {};
        int int21 = inputStream17.read(byteArray20);
        byte[] byteArray23 = inputStream17.readNBytes(10);
        long long25 = inputStream17.skip((long) '4');
        byte[] byteArray26 = inputStream17.readAllBytes();
        java.io.InputStream inputStream27 = java.io.InputStream.nullInputStream();
        long long29 = inputStream27.skip((long) 'a');
        byte[] byteArray30 = new byte[] {};
        int int31 = inputStream27.read(byteArray30);
        byte[] byteArray33 = inputStream27.readNBytes(10);
        long long35 = inputStream27.skip((long) '4');
        byte[] byteArray36 = inputStream27.readAllBytes();
        java.io.InputStream inputStream37 = java.io.InputStream.nullInputStream();
        long long39 = inputStream37.skip((long) 'a');
        byte[] byteArray43 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int44 = inputStream37.read(byteArray43);
        byte[] byteArray46 = inputStream37.readNBytes((int) (short) 100);
        int int47 = inputStream27.read(byteArray46);
        int int48 = inputStream17.read(byteArray46);
        int int49 = inputStream0.read(byteArray46);
        byte[] byteArray50 = inputStream0.readAllBytes();
        byte[] byteArray51 = inputStream0.readAllBytes();
        java.io.InputStream inputStream52 = java.io.InputStream.nullInputStream();
        long long54 = inputStream52.skip((long) 'a');
        byte[] byteArray55 = new byte[] {};
        int int56 = inputStream52.read(byteArray55);
        byte[] byteArray58 = inputStream52.readNBytes(10);
        long long60 = inputStream52.skip((long) '4');
        byte[] byteArray62 = inputStream52.readNBytes(100);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = inputStream0.readNBytes(byteArray62, (int) (byte) 1, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [1, 1 + -1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(inputStream17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertNotNull(inputStream27);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(inputStream37);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(inputStream52);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
    }

    @Test
    public void test110() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test110");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        long long16 = inputStream0.skip((long) (byte) 100);
        long long18 = inputStream0.skip(0L);
        java.io.InputStream inputStream19 = java.io.InputStream.nullInputStream();
        long long21 = inputStream19.skip((long) 'a');
        byte[] byteArray22 = new byte[] {};
        int int23 = inputStream19.read(byteArray22);
        byte[] byteArray25 = inputStream19.readNBytes(10);
        byte[] byteArray27 = inputStream19.readNBytes((int) '4');
        // The following exception was thrown during execution in test generation
        try {
            int int30 = inputStream0.read(byteArray27, (int) (short) 100, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [100, 100 + 1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(inputStream19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
    }

    @Test
    public void test111() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test111");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        long long16 = inputStream0.skip((long) 0);
        byte[] byteArray17 = inputStream0.readAllBytes();
        byte[] byteArray19 = inputStream0.readNBytes((int) (byte) 100);
        java.io.OutputStream outputStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long21 = inputStream0.transferTo(outputStream20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
    }

    @Test
    public void test112() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test112");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream0.read(byteArray10);
        byte[] byteArray13 = inputStream0.readNBytes((int) (short) 0);
        java.io.InputStream inputStream14 = java.io.InputStream.nullInputStream();
        long long16 = inputStream14.skip((long) 'a');
        byte[] byteArray17 = new byte[] {};
        int int18 = inputStream14.read(byteArray17);
        byte[] byteArray20 = inputStream14.readNBytes(10);
        long long22 = inputStream14.skip((long) '4');
        long long24 = inputStream14.skip(1L);
        java.io.InputStream inputStream25 = java.io.InputStream.nullInputStream();
        long long27 = inputStream25.skip((long) 'a');
        byte[] byteArray31 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int32 = inputStream25.read(byteArray31);
        byte[] byteArray33 = inputStream25.readAllBytes();
        byte[] byteArray34 = inputStream25.readAllBytes();
        java.io.InputStream inputStream35 = java.io.InputStream.nullInputStream();
        long long37 = inputStream35.skip((long) 'a');
        byte[] byteArray41 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int42 = inputStream35.read(byteArray41);
        byte[] byteArray43 = inputStream35.readAllBytes();
        java.io.InputStream inputStream44 = java.io.InputStream.nullInputStream();
        long long46 = inputStream44.skip((long) 'a');
        byte[] byteArray47 = new byte[] {};
        int int48 = inputStream44.read(byteArray47);
        int int49 = inputStream35.read(byteArray47);
        byte[] byteArray51 = inputStream35.readNBytes((int) (byte) 0);
        int int54 = inputStream25.read(byteArray51, 0, 0);
        int int55 = inputStream14.read(byteArray51);
        // The following exception was thrown during execution in test generation
        try {
            int int58 = inputStream0.read(byteArray51, 0, (int) (short) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [0, 0 + 100) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(inputStream14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(inputStream25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(inputStream35);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[]");
        org.junit.Assert.assertNotNull(inputStream44);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
    }

    @Test
    public void test113() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test113");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        long long9 = inputStream0.skip(1L);
        java.io.OutputStream outputStream10 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long11 = inputStream0.transferTo(outputStream10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
    }

    @Test
    public void test114() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test114");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        java.io.InputStream inputStream1 = java.io.InputStream.nullInputStream();
        byte[] byteArray2 = inputStream1.readAllBytes();
        java.io.InputStream inputStream3 = java.io.InputStream.nullInputStream();
        long long5 = inputStream3.skip((long) 'a');
        byte[] byteArray6 = new byte[] {};
        int int7 = inputStream3.read(byteArray6);
        byte[] byteArray9 = inputStream3.readNBytes(10);
        int int10 = inputStream1.read(byteArray9);
        byte[] byteArray11 = inputStream1.readAllBytes();
        int int12 = inputStream0.read(byteArray11);
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long14 = inputStream0.transferTo(outputStream13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(inputStream1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[]");
        org.junit.Assert.assertNotNull(inputStream3);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
    }

    @Test
    public void test115() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test115");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        long long9 = inputStream0.skip(1L);
        byte[] byteArray10 = inputStream0.readAllBytes();
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray14 = new byte[] {};
        int int15 = inputStream11.read(byteArray14);
        byte[] byteArray17 = inputStream11.readNBytes(10);
        long long19 = inputStream11.skip((long) '4');
        byte[] byteArray21 = inputStream11.readNBytes((int) (byte) 10);
        java.io.InputStream inputStream22 = java.io.InputStream.nullInputStream();
        long long24 = inputStream22.skip((long) 'a');
        byte[] byteArray25 = new byte[] {};
        int int26 = inputStream22.read(byteArray25);
        byte[] byteArray28 = inputStream22.readNBytes(10);
        long long30 = inputStream22.skip((long) '4');
        byte[] byteArray31 = inputStream22.readAllBytes();
        byte[] byteArray33 = inputStream22.readNBytes(1);
        int int34 = inputStream11.read(byteArray33);
        java.io.InputStream inputStream35 = java.io.InputStream.nullInputStream();
        long long37 = inputStream35.skip((long) 'a');
        byte[] byteArray41 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int42 = inputStream35.read(byteArray41);
        byte[] byteArray43 = inputStream35.readAllBytes();
        java.io.InputStream inputStream44 = java.io.InputStream.nullInputStream();
        long long46 = inputStream44.skip((long) 'a');
        byte[] byteArray47 = new byte[] {};
        int int48 = inputStream44.read(byteArray47);
        int int49 = inputStream35.read(byteArray47);
        long long51 = inputStream35.skip((long) 0);
        byte[] byteArray52 = inputStream35.readAllBytes();
        byte[] byteArray54 = inputStream35.readNBytes((int) (byte) 1);
        int int55 = inputStream11.read(byteArray54);
        byte[] byteArray57 = inputStream11.readNBytes((int) ' ');
        int int60 = inputStream0.readNBytes(byteArray57, 0, 0);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(inputStream22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(inputStream35);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[]");
        org.junit.Assert.assertNotNull(inputStream44);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test116() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test116");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        long long9 = inputStream0.skip(1L);
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray13 = new byte[] {};
        int int14 = inputStream10.read(byteArray13);
        byte[] byteArray16 = inputStream10.readNBytes(10);
        long long18 = inputStream10.skip((long) '4');
        byte[] byteArray20 = inputStream10.readNBytes((int) (byte) 10);
        java.io.InputStream inputStream21 = java.io.InputStream.nullInputStream();
        long long23 = inputStream21.skip((long) 'a');
        byte[] byteArray24 = new byte[] {};
        int int25 = inputStream21.read(byteArray24);
        byte[] byteArray27 = inputStream21.readNBytes(10);
        long long29 = inputStream21.skip((long) '4');
        byte[] byteArray30 = inputStream21.readAllBytes();
        byte[] byteArray32 = inputStream21.readNBytes(1);
        int int33 = inputStream10.read(byteArray32);
        // The following exception was thrown during execution in test generation
        try {
            int int36 = inputStream0.read(byteArray32, 10, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [10, 10 + 100) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(inputStream21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
    }

    @Test
    public void test117() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test117");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        byte[] byteArray5 = inputStream0.readAllBytes();
        java.io.InputStream inputStream6 = java.io.InputStream.nullInputStream();
        long long8 = inputStream6.skip((long) 'a');
        byte[] byteArray12 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int13 = inputStream6.read(byteArray12);
        byte[] byteArray14 = inputStream6.readAllBytes();
        byte[] byteArray15 = inputStream6.readAllBytes();
        byte[] byteArray16 = new byte[] {};
        int int17 = inputStream6.read(byteArray16);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = inputStream0.readNBytes(byteArray16, (int) '#', (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [35, 35 + 10) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertNotNull(inputStream6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + (-1) + "'", int13 == (-1));
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
    }

    @Test
    public void test118() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test118");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream0.read(byteArray10);
        byte[] byteArray13 = inputStream0.readNBytes((int) (short) 100);
        long long15 = inputStream0.skip((long) (byte) 0);
        java.io.InputStream inputStream16 = java.io.InputStream.nullInputStream();
        long long18 = inputStream16.skip((long) 'a');
        byte[] byteArray22 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int23 = inputStream16.read(byteArray22);
        byte[] byteArray25 = inputStream16.readNBytes((int) (short) 100);
        java.io.InputStream inputStream26 = java.io.InputStream.nullInputStream();
        byte[] byteArray27 = inputStream26.readAllBytes();
        java.io.InputStream inputStream28 = java.io.InputStream.nullInputStream();
        long long30 = inputStream28.skip((long) 'a');
        byte[] byteArray31 = new byte[] {};
        int int32 = inputStream28.read(byteArray31);
        byte[] byteArray34 = inputStream28.readNBytes(10);
        int int35 = inputStream26.read(byteArray34);
        byte[] byteArray36 = inputStream26.readAllBytes();
        int int37 = inputStream16.read(byteArray36);
        java.io.InputStream inputStream38 = java.io.InputStream.nullInputStream();
        long long40 = inputStream38.skip((long) 'a');
        byte[] byteArray44 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int45 = inputStream38.read(byteArray44);
        int int46 = inputStream16.read(byteArray44);
        // The following exception was thrown during execution in test generation
        try {
            int int49 = inputStream0.readNBytes(byteArray44, (int) '#', (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [35, 35 + -1) out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(inputStream16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(inputStream26);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(inputStream28);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(inputStream38);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + (-1) + "'", int46 == (-1));
    }

    @Test
    public void test119() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test119");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray10 = inputStream0.readNBytes(100);
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray14 = new byte[] {};
        int int15 = inputStream11.read(byteArray14);
        byte[] byteArray17 = inputStream11.readNBytes(10);
        java.io.InputStream inputStream18 = java.io.InputStream.nullInputStream();
        long long20 = inputStream18.skip((long) 'a');
        byte[] byteArray21 = new byte[] {};
        int int22 = inputStream18.read(byteArray21);
        byte[] byteArray24 = inputStream18.readNBytes(10);
        int int25 = inputStream11.read(byteArray24);
        byte[] byteArray27 = inputStream11.readNBytes((int) (byte) 100);
        java.io.InputStream inputStream28 = java.io.InputStream.nullInputStream();
        long long30 = inputStream28.skip((long) 'a');
        byte[] byteArray31 = new byte[] {};
        int int32 = inputStream28.read(byteArray31);
        byte[] byteArray34 = inputStream28.readNBytes(10);
        long long36 = inputStream28.skip((long) '4');
        byte[] byteArray37 = inputStream28.readAllBytes();
        java.io.InputStream inputStream38 = java.io.InputStream.nullInputStream();
        long long40 = inputStream38.skip((long) 'a');
        byte[] byteArray41 = new byte[] {};
        int int42 = inputStream38.read(byteArray41);
        byte[] byteArray44 = inputStream38.readNBytes(10);
        long long46 = inputStream38.skip((long) '4');
        byte[] byteArray47 = inputStream38.readAllBytes();
        java.io.InputStream inputStream48 = java.io.InputStream.nullInputStream();
        long long50 = inputStream48.skip((long) 'a');
        byte[] byteArray54 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int55 = inputStream48.read(byteArray54);
        byte[] byteArray57 = inputStream48.readNBytes((int) (short) 100);
        int int58 = inputStream38.read(byteArray57);
        int int59 = inputStream28.read(byteArray57);
        int int60 = inputStream11.read(byteArray57);
        byte[] byteArray61 = inputStream11.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int64 = inputStream0.read(byteArray61, (int) (byte) 100, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [100, 100 + 32) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(inputStream18);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(inputStream28);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[]");
        org.junit.Assert.assertNotNull(inputStream38);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(inputStream48);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
    }

    @Test
    public void test120() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test120");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        byte[] byteArray6 = inputStream0.readNBytes((int) (short) 10);
        byte[] byteArray8 = inputStream0.readNBytes((int) '#');
        long long10 = inputStream0.skip(1L);
        java.lang.Class<?> wildcardClass11 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test121() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test121");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = inputStream0.readAllBytes();
        byte[] byteArray12 = inputStream0.readNBytes((int) (byte) 10);
        long long14 = inputStream0.skip((long) '4');
        java.io.OutputStream outputStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long16 = inputStream0.transferTo(outputStream15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test122() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test122");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        byte[] byteArray1 = inputStream0.readAllBytes();
        java.io.InputStream inputStream2 = java.io.InputStream.nullInputStream();
        long long4 = inputStream2.skip((long) 'a');
        byte[] byteArray5 = new byte[] {};
        int int6 = inputStream2.read(byteArray5);
        byte[] byteArray8 = inputStream2.readNBytes(10);
        int int9 = inputStream0.read(byteArray8);
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int17 = inputStream10.read(byteArray16);
        byte[] byteArray18 = inputStream10.readAllBytes();
        java.io.InputStream inputStream19 = java.io.InputStream.nullInputStream();
        long long21 = inputStream19.skip((long) 'a');
        byte[] byteArray25 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int26 = inputStream19.read(byteArray25);
        byte[] byteArray27 = inputStream19.readAllBytes();
        java.io.InputStream inputStream28 = java.io.InputStream.nullInputStream();
        long long30 = inputStream28.skip((long) 'a');
        byte[] byteArray31 = new byte[] {};
        int int32 = inputStream28.read(byteArray31);
        int int33 = inputStream19.read(byteArray31);
        int int36 = inputStream10.read(byteArray31, 0, 0);
        int int37 = inputStream0.read(byteArray31);
        java.io.InputStream inputStream38 = java.io.InputStream.nullInputStream();
        long long40 = inputStream38.skip((long) 'a');
        byte[] byteArray41 = new byte[] {};
        int int42 = inputStream38.read(byteArray41);
        byte[] byteArray44 = inputStream38.readNBytes(10);
        byte[] byteArray48 = new byte[] { (byte) 1, (byte) 10, (byte) 1 };
        int int49 = inputStream38.read(byteArray48);
        byte[] byteArray51 = inputStream38.readNBytes((int) (byte) 1);
        int int52 = inputStream0.read(byteArray51);
        java.io.InputStream inputStream53 = java.io.InputStream.nullInputStream();
        long long55 = inputStream53.skip((long) 'a');
        byte[] byteArray56 = new byte[] {};
        int int57 = inputStream53.read(byteArray56);
        byte[] byteArray59 = inputStream53.readNBytes(10);
        java.io.InputStream inputStream60 = java.io.InputStream.nullInputStream();
        long long62 = inputStream60.skip((long) 'a');
        byte[] byteArray63 = new byte[] {};
        int int64 = inputStream60.read(byteArray63);
        byte[] byteArray66 = inputStream60.readNBytes(10);
        int int67 = inputStream53.read(byteArray66);
        byte[] byteArray69 = inputStream53.readNBytes((int) (byte) 100);
        // The following exception was thrown during execution in test generation
        try {
            int int72 = inputStream0.read(byteArray69, (-1), (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [-1, -1 + 100) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(inputStream2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(inputStream19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(inputStream28);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(inputStream38);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[1, 10, 1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(inputStream53);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(inputStream60);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[]");
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[]");
    }

    @Test
    public void test123() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test123");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        java.io.InputStream inputStream1 = java.io.InputStream.nullInputStream();
        byte[] byteArray2 = inputStream1.readAllBytes();
        java.io.InputStream inputStream3 = java.io.InputStream.nullInputStream();
        long long5 = inputStream3.skip((long) 'a');
        byte[] byteArray6 = new byte[] {};
        int int7 = inputStream3.read(byteArray6);
        byte[] byteArray9 = inputStream3.readNBytes(10);
        int int10 = inputStream1.read(byteArray9);
        byte[] byteArray11 = inputStream1.readAllBytes();
        int int12 = inputStream0.read(byteArray11);
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        long long15 = inputStream13.skip((long) 'a');
        byte[] byteArray19 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int20 = inputStream13.read(byteArray19);
        byte[] byteArray22 = inputStream13.readNBytes((int) (short) 100);
        byte[] byteArray23 = inputStream13.readAllBytes();
        int int24 = inputStream0.read(byteArray23);
        java.io.InputStream inputStream25 = java.io.InputStream.nullInputStream();
        long long27 = inputStream25.skip((long) 'a');
        byte[] byteArray28 = new byte[] {};
        int int29 = inputStream25.read(byteArray28);
        byte[] byteArray31 = inputStream25.readNBytes(10);
        long long33 = inputStream25.skip((long) '4');
        byte[] byteArray34 = inputStream25.readAllBytes();
        java.io.InputStream inputStream35 = java.io.InputStream.nullInputStream();
        long long37 = inputStream35.skip((long) 'a');
        byte[] byteArray41 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int42 = inputStream35.read(byteArray41);
        byte[] byteArray44 = inputStream35.readNBytes((int) (short) 100);
        int int45 = inputStream25.read(byteArray44);
        int int46 = inputStream0.read(byteArray44);
        java.io.InputStream inputStream47 = java.io.InputStream.nullInputStream();
        long long49 = inputStream47.skip((long) 'a');
        byte[] byteArray53 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int54 = inputStream47.read(byteArray53);
        byte[] byteArray56 = inputStream47.readNBytes((int) (short) 100);
        java.io.InputStream inputStream57 = java.io.InputStream.nullInputStream();
        byte[] byteArray58 = inputStream57.readAllBytes();
        java.io.InputStream inputStream59 = java.io.InputStream.nullInputStream();
        long long61 = inputStream59.skip((long) 'a');
        byte[] byteArray62 = new byte[] {};
        int int63 = inputStream59.read(byteArray62);
        byte[] byteArray65 = inputStream59.readNBytes(10);
        int int66 = inputStream57.read(byteArray65);
        byte[] byteArray67 = inputStream57.readAllBytes();
        int int68 = inputStream47.read(byteArray67);
        // The following exception was thrown during execution in test generation
        try {
            int int71 = inputStream0.read(byteArray67, 0, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [0, 0 + 10) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(inputStream1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[]");
        org.junit.Assert.assertNotNull(inputStream3);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(inputStream25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(inputStream35);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(inputStream47);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + (-1) + "'", int54 == (-1));
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(inputStream57);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertNotNull(inputStream59);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
    }

    @Test
    public void test124() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test124");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        java.io.InputStream inputStream1 = java.io.InputStream.nullInputStream();
        long long3 = inputStream1.skip((long) 'a');
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int8 = inputStream1.read(byteArray7);
        byte[] byteArray9 = inputStream1.readAllBytes();
        byte[] byteArray10 = inputStream1.readAllBytes();
        byte[] byteArray11 = new byte[] {};
        int int12 = inputStream1.read(byteArray11);
        byte[] byteArray14 = inputStream1.readNBytes((int) (short) 100);
        int int15 = inputStream0.read(byteArray14);
        java.lang.Class<?> wildcardClass16 = byteArray14.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(inputStream1);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test125() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test125");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        byte[] byteArray6 = inputStream0.readNBytes((int) (short) 10);
        byte[] byteArray7 = inputStream0.readAllBytes();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
    }

    @Test
    public void test126() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test126");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream0.read(byteArray10);
        byte[] byteArray13 = inputStream0.readNBytes((int) (short) 100);
        long long15 = inputStream0.skip((long) (byte) 0);
        java.io.InputStream inputStream16 = java.io.InputStream.nullInputStream();
        long long18 = inputStream16.skip((long) 'a');
        byte[] byteArray19 = new byte[] {};
        int int20 = inputStream16.read(byteArray19);
        byte[] byteArray22 = inputStream16.readNBytes(10);
        long long24 = inputStream16.skip((long) '4');
        byte[] byteArray25 = inputStream16.readAllBytes();
        byte[] byteArray27 = inputStream16.readNBytes(1);
        java.io.InputStream inputStream28 = java.io.InputStream.nullInputStream();
        long long30 = inputStream28.skip((long) 'a');
        byte[] byteArray31 = new byte[] {};
        int int32 = inputStream28.read(byteArray31);
        byte[] byteArray34 = inputStream28.readNBytes(10);
        long long36 = inputStream28.skip((long) '4');
        byte[] byteArray38 = inputStream28.readNBytes((int) (byte) 10);
        int int39 = inputStream16.read(byteArray38);
        java.io.InputStream inputStream40 = java.io.InputStream.nullInputStream();
        long long42 = inputStream40.skip((long) 'a');
        byte[] byteArray43 = new byte[] {};
        int int44 = inputStream40.read(byteArray43);
        byte[] byteArray46 = inputStream40.readNBytes(10);
        long long48 = inputStream40.skip((long) '4');
        byte[] byteArray49 = inputStream40.readAllBytes();
        int int50 = inputStream16.read(byteArray49);
        // The following exception was thrown during execution in test generation
        try {
            int int53 = inputStream0.read(byteArray49, (int) 'a', (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [97, 97 + 0) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(inputStream16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(inputStream28);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(inputStream40);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
    }

    @Test
    public void test127() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test127");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int17 = inputStream10.read(byteArray16);
        byte[] byteArray19 = inputStream10.readNBytes((int) (short) 100);
        int int20 = inputStream0.read(byteArray19);
        java.io.InputStream inputStream21 = java.io.InputStream.nullInputStream();
        long long23 = inputStream21.skip((long) 'a');
        byte[] byteArray24 = new byte[] {};
        int int25 = inputStream21.read(byteArray24);
        byte[] byteArray27 = inputStream21.readNBytes(10);
        byte[] byteArray31 = new byte[] { (byte) 1, (byte) 10, (byte) 1 };
        int int32 = inputStream21.read(byteArray31);
        // The following exception was thrown during execution in test generation
        try {
            int int35 = inputStream0.read(byteArray31, (int) (short) 100, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [100, 100 + 35) out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(inputStream21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[1, 10, 1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
    }

    @Test
    public void test128() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test128");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = inputStream0.readAllBytes();
        java.io.InputStream inputStream4 = java.io.InputStream.nullInputStream();
        long long6 = inputStream4.skip((long) 'a');
        byte[] byteArray10 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int11 = inputStream4.read(byteArray10);
        byte[] byteArray12 = inputStream4.readAllBytes();
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        long long15 = inputStream13.skip((long) 'a');
        byte[] byteArray16 = new byte[] {};
        int int17 = inputStream13.read(byteArray16);
        int int18 = inputStream4.read(byteArray16);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = inputStream0.readNBytes(byteArray16, (int) (short) 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [100, 100 + -1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertNotNull(inputStream4);
        org.junit.Assert.assertTrue("'" + long6 + "' != '" + 0L + "'", long6 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test129() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test129");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        long long10 = inputStream0.skip((long) '#');
        java.io.OutputStream outputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long12 = inputStream0.transferTo(outputStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test130() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test130");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        byte[] byteArray1 = inputStream0.readAllBytes();
        java.io.InputStream inputStream2 = java.io.InputStream.nullInputStream();
        long long4 = inputStream2.skip((long) 'a');
        byte[] byteArray5 = new byte[] {};
        int int6 = inputStream2.read(byteArray5);
        byte[] byteArray8 = inputStream2.readNBytes(10);
        int int9 = inputStream0.read(byteArray8);
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        long long14 = inputStream10.skip((long) 10);
        byte[] byteArray16 = inputStream10.readNBytes((int) (short) 10);
        byte[] byteArray18 = inputStream10.readNBytes((int) (byte) 0);
        java.io.InputStream inputStream19 = java.io.InputStream.nullInputStream();
        long long21 = inputStream19.skip((long) 'a');
        byte[] byteArray22 = new byte[] {};
        int int23 = inputStream19.read(byteArray22);
        byte[] byteArray25 = inputStream19.readNBytes(10);
        java.io.InputStream inputStream26 = java.io.InputStream.nullInputStream();
        long long28 = inputStream26.skip((long) 'a');
        byte[] byteArray29 = new byte[] {};
        int int30 = inputStream26.read(byteArray29);
        byte[] byteArray32 = inputStream26.readNBytes(10);
        int int33 = inputStream19.read(byteArray32);
        byte[] byteArray35 = inputStream19.readNBytes((int) (byte) 100);
        int int36 = inputStream10.read(byteArray35);
        byte[] byteArray38 = inputStream10.readNBytes((int) (short) 1);
        byte[] byteArray39 = inputStream10.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int42 = inputStream0.readNBytes(byteArray39, (int) (byte) 1, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [1, 1 + 100) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(inputStream2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(inputStream19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(inputStream26);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
    }

    @Test
    public void test131() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test131");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        byte[] byteArray1 = inputStream0.readAllBytes();
        java.io.InputStream inputStream2 = java.io.InputStream.nullInputStream();
        long long4 = inputStream2.skip((long) 'a');
        byte[] byteArray5 = new byte[] {};
        int int6 = inputStream2.read(byteArray5);
        byte[] byteArray8 = inputStream2.readNBytes(10);
        int int9 = inputStream0.read(byteArray8);
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int17 = inputStream10.read(byteArray16);
        byte[] byteArray18 = inputStream10.readAllBytes();
        java.io.InputStream inputStream19 = java.io.InputStream.nullInputStream();
        long long21 = inputStream19.skip((long) 'a');
        byte[] byteArray25 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int26 = inputStream19.read(byteArray25);
        byte[] byteArray27 = inputStream19.readAllBytes();
        java.io.InputStream inputStream28 = java.io.InputStream.nullInputStream();
        long long30 = inputStream28.skip((long) 'a');
        byte[] byteArray31 = new byte[] {};
        int int32 = inputStream28.read(byteArray31);
        int int33 = inputStream19.read(byteArray31);
        int int36 = inputStream10.read(byteArray31, 0, 0);
        int int37 = inputStream0.read(byteArray31);
        java.io.InputStream inputStream38 = java.io.InputStream.nullInputStream();
        long long40 = inputStream38.skip((long) 'a');
        byte[] byteArray41 = new byte[] {};
        int int42 = inputStream38.read(byteArray41);
        byte[] byteArray44 = inputStream38.readNBytes(10);
        byte[] byteArray48 = new byte[] { (byte) 1, (byte) 10, (byte) 1 };
        int int49 = inputStream38.read(byteArray48);
        byte[] byteArray51 = inputStream38.readNBytes((int) (byte) 1);
        int int52 = inputStream0.read(byteArray51);
        java.io.InputStream inputStream53 = java.io.InputStream.nullInputStream();
        long long55 = inputStream53.skip((long) 'a');
        byte[] byteArray56 = new byte[] {};
        int int57 = inputStream53.read(byteArray56);
        byte[] byteArray59 = inputStream53.readNBytes(10);
        long long61 = inputStream53.skip((long) '4');
        byte[] byteArray63 = inputStream53.readNBytes((int) (byte) 10);
        java.io.InputStream inputStream64 = java.io.InputStream.nullInputStream();
        long long66 = inputStream64.skip((long) 'a');
        byte[] byteArray67 = new byte[] {};
        int int68 = inputStream64.read(byteArray67);
        byte[] byteArray70 = inputStream64.readNBytes(10);
        long long72 = inputStream64.skip((long) '4');
        byte[] byteArray73 = inputStream64.readAllBytes();
        byte[] byteArray75 = inputStream64.readNBytes(1);
        int int76 = inputStream53.read(byteArray75);
        byte[] byteArray78 = inputStream53.readNBytes((int) ' ');
        int int79 = inputStream0.read(byteArray78);
        java.lang.Class<?> wildcardClass80 = byteArray78.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(inputStream2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(inputStream19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(inputStream28);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(inputStream38);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[1, 10, 1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(inputStream53);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[]");
        org.junit.Assert.assertNotNull(inputStream64);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[]");
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(wildcardClass80);
    }

    @Test
    public void test132() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test132");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int17 = inputStream10.read(byteArray16);
        byte[] byteArray19 = inputStream10.readNBytes((int) (short) 100);
        int int20 = inputStream0.read(byteArray19);
        java.io.InputStream inputStream21 = java.io.InputStream.nullInputStream();
        byte[] byteArray22 = inputStream21.readAllBytes();
        java.io.InputStream inputStream23 = java.io.InputStream.nullInputStream();
        long long25 = inputStream23.skip((long) 'a');
        byte[] byteArray26 = new byte[] {};
        int int27 = inputStream23.read(byteArray26);
        byte[] byteArray29 = inputStream23.readNBytes(10);
        int int30 = inputStream21.read(byteArray29);
        byte[] byteArray31 = inputStream21.readAllBytes();
        long long33 = inputStream21.skip((long) 'a');
        byte[] byteArray35 = inputStream21.readNBytes((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            int int38 = inputStream0.read(byteArray35, 10, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [10, 10 + 10) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(inputStream21);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertNotNull(inputStream23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
    }

    @Test
    public void test133() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test133");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        long long9 = inputStream0.skip(1L);
        long long11 = inputStream0.skip((long) (short) 1);
        java.io.InputStream inputStream12 = java.io.InputStream.nullInputStream();
        long long14 = inputStream12.skip((long) 'a');
        byte[] byteArray15 = new byte[] {};
        int int16 = inputStream12.read(byteArray15);
        byte[] byteArray18 = inputStream12.readNBytes(10);
        java.io.InputStream inputStream19 = java.io.InputStream.nullInputStream();
        long long21 = inputStream19.skip((long) 'a');
        byte[] byteArray22 = new byte[] {};
        int int23 = inputStream19.read(byteArray22);
        byte[] byteArray25 = inputStream19.readNBytes(10);
        int int26 = inputStream12.read(byteArray25);
        byte[] byteArray28 = inputStream12.readNBytes((int) (byte) 100);
        java.io.InputStream inputStream29 = java.io.InputStream.nullInputStream();
        long long31 = inputStream29.skip((long) 'a');
        byte[] byteArray32 = new byte[] {};
        int int33 = inputStream29.read(byteArray32);
        byte[] byteArray35 = inputStream29.readNBytes(10);
        long long37 = inputStream29.skip((long) '4');
        byte[] byteArray38 = inputStream29.readAllBytes();
        java.io.InputStream inputStream39 = java.io.InputStream.nullInputStream();
        long long41 = inputStream39.skip((long) 'a');
        byte[] byteArray42 = new byte[] {};
        int int43 = inputStream39.read(byteArray42);
        byte[] byteArray45 = inputStream39.readNBytes(10);
        long long47 = inputStream39.skip((long) '4');
        byte[] byteArray48 = inputStream39.readAllBytes();
        java.io.InputStream inputStream49 = java.io.InputStream.nullInputStream();
        long long51 = inputStream49.skip((long) 'a');
        byte[] byteArray55 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int56 = inputStream49.read(byteArray55);
        byte[] byteArray58 = inputStream49.readNBytes((int) (short) 100);
        int int59 = inputStream39.read(byteArray58);
        int int60 = inputStream29.read(byteArray58);
        int int61 = inputStream12.read(byteArray58);
        byte[] byteArray62 = inputStream12.readAllBytes();
        byte[] byteArray63 = inputStream12.readAllBytes();
        byte[] byteArray64 = inputStream12.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int67 = inputStream0.read(byteArray64, (int) (short) 100, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [100, 100 + -1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(inputStream12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(inputStream19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertNotNull(inputStream29);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertNotNull(inputStream39);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(inputStream49);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[]");
    }

    @Test
    public void test134() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test134");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        byte[] byteArray6 = inputStream0.readNBytes((int) (short) 10);
        byte[] byteArray8 = inputStream0.readNBytes((int) (byte) 0);
        long long10 = inputStream0.skip((long) (short) 10);
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray14 = new byte[] {};
        int int15 = inputStream11.read(byteArray14);
        byte[] byteArray17 = inputStream11.readNBytes(10);
        long long19 = inputStream11.skip((long) '4');
        byte[] byteArray21 = inputStream11.readNBytes((int) (byte) 10);
        java.io.InputStream inputStream22 = java.io.InputStream.nullInputStream();
        long long24 = inputStream22.skip((long) 'a');
        byte[] byteArray25 = new byte[] {};
        int int26 = inputStream22.read(byteArray25);
        byte[] byteArray28 = inputStream22.readNBytes(10);
        long long30 = inputStream22.skip((long) '4');
        byte[] byteArray31 = inputStream22.readAllBytes();
        byte[] byteArray33 = inputStream22.readNBytes(1);
        int int34 = inputStream11.read(byteArray33);
        byte[] byteArray36 = inputStream11.readNBytes((int) ' ');
        java.io.InputStream inputStream37 = java.io.InputStream.nullInputStream();
        byte[] byteArray38 = inputStream37.readAllBytes();
        java.io.InputStream inputStream39 = java.io.InputStream.nullInputStream();
        long long41 = inputStream39.skip((long) 'a');
        byte[] byteArray42 = new byte[] {};
        int int43 = inputStream39.read(byteArray42);
        byte[] byteArray45 = inputStream39.readNBytes(10);
        int int46 = inputStream37.read(byteArray45);
        int int47 = inputStream11.read(byteArray45);
        int int48 = inputStream0.read(byteArray45);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(inputStream22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(inputStream37);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertNotNull(inputStream39);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
    }

    @Test
    public void test135() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test135");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        byte[] byteArray1 = inputStream0.readAllBytes();
        java.io.InputStream inputStream2 = java.io.InputStream.nullInputStream();
        long long4 = inputStream2.skip((long) 'a');
        byte[] byteArray5 = new byte[] {};
        int int6 = inputStream2.read(byteArray5);
        byte[] byteArray8 = inputStream2.readNBytes(10);
        int int9 = inputStream0.read(byteArray8);
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int17 = inputStream10.read(byteArray16);
        byte[] byteArray18 = inputStream10.readAllBytes();
        java.io.InputStream inputStream19 = java.io.InputStream.nullInputStream();
        long long21 = inputStream19.skip((long) 'a');
        byte[] byteArray25 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int26 = inputStream19.read(byteArray25);
        byte[] byteArray27 = inputStream19.readAllBytes();
        java.io.InputStream inputStream28 = java.io.InputStream.nullInputStream();
        long long30 = inputStream28.skip((long) 'a');
        byte[] byteArray31 = new byte[] {};
        int int32 = inputStream28.read(byteArray31);
        int int33 = inputStream19.read(byteArray31);
        int int36 = inputStream10.read(byteArray31, 0, 0);
        int int37 = inputStream0.read(byteArray31);
        java.io.InputStream inputStream38 = java.io.InputStream.nullInputStream();
        long long40 = inputStream38.skip((long) 'a');
        byte[] byteArray41 = new byte[] {};
        int int42 = inputStream38.read(byteArray41);
        byte[] byteArray44 = inputStream38.readNBytes(10);
        byte[] byteArray48 = new byte[] { (byte) 1, (byte) 10, (byte) 1 };
        int int49 = inputStream38.read(byteArray48);
        byte[] byteArray51 = inputStream38.readNBytes((int) (byte) 1);
        int int52 = inputStream0.read(byteArray51);
        java.io.InputStream inputStream53 = java.io.InputStream.nullInputStream();
        long long55 = inputStream53.skip((long) 'a');
        byte[] byteArray56 = new byte[] {};
        int int57 = inputStream53.read(byteArray56);
        // The following exception was thrown during execution in test generation
        try {
            int int60 = inputStream0.readNBytes(byteArray56, 10, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [10, 10 + 100) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(inputStream2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(inputStream19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(inputStream28);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(inputStream38);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[1, 10, 1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(inputStream53);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
    }

    @Test
    public void test136() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test136");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        long long10 = inputStream0.skip(1L);
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int18 = inputStream11.read(byteArray17);
        byte[] byteArray19 = inputStream11.readAllBytes();
        byte[] byteArray20 = inputStream11.readAllBytes();
        java.io.InputStream inputStream21 = java.io.InputStream.nullInputStream();
        long long23 = inputStream21.skip((long) 'a');
        byte[] byteArray27 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int28 = inputStream21.read(byteArray27);
        byte[] byteArray29 = inputStream21.readAllBytes();
        java.io.InputStream inputStream30 = java.io.InputStream.nullInputStream();
        long long32 = inputStream30.skip((long) 'a');
        byte[] byteArray33 = new byte[] {};
        int int34 = inputStream30.read(byteArray33);
        int int35 = inputStream21.read(byteArray33);
        byte[] byteArray37 = inputStream21.readNBytes((int) (byte) 0);
        int int40 = inputStream11.read(byteArray37, 0, 0);
        int int41 = inputStream0.read(byteArray37);
        java.io.InputStream inputStream42 = java.io.InputStream.nullInputStream();
        long long44 = inputStream42.skip((long) 'a');
        byte[] byteArray48 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int49 = inputStream42.read(byteArray48);
        byte[] byteArray50 = inputStream42.readAllBytes();
        java.io.InputStream inputStream51 = java.io.InputStream.nullInputStream();
        long long53 = inputStream51.skip((long) 'a');
        byte[] byteArray54 = new byte[] {};
        int int55 = inputStream51.read(byteArray54);
        int int56 = inputStream42.read(byteArray54);
        long long58 = inputStream42.skip((long) 0);
        byte[] byteArray59 = inputStream42.readAllBytes();
        byte[] byteArray61 = inputStream42.readNBytes((int) (byte) 1);
        byte[] byteArray62 = inputStream42.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int65 = inputStream0.readNBytes(byteArray62, (-1), (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [-1, -1 + -1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(inputStream21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(inputStream30);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(inputStream42);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(inputStream51);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
    }

    @Test
    public void test137() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test137");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        long long10 = inputStream0.skip(1L);
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray14 = new byte[] {};
        int int15 = inputStream11.read(byteArray14);
        byte[] byteArray17 = inputStream11.readNBytes(10);
        java.io.InputStream inputStream18 = java.io.InputStream.nullInputStream();
        long long20 = inputStream18.skip((long) 'a');
        byte[] byteArray21 = new byte[] {};
        int int22 = inputStream18.read(byteArray21);
        byte[] byteArray24 = inputStream18.readNBytes(10);
        int int25 = inputStream11.read(byteArray24);
        int int26 = inputStream0.read(byteArray24);
        java.io.OutputStream outputStream27 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long28 = inputStream0.transferTo(outputStream27);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(inputStream18);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test138() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test138");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        byte[] byteArray1 = inputStream0.readAllBytes();
        java.lang.Class<?> wildcardClass2 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(wildcardClass2);
    }

    @Test
    public void test139() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test139");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream0.read(byteArray10);
        java.io.InputStream inputStream12 = java.io.InputStream.nullInputStream();
        byte[] byteArray13 = inputStream12.readAllBytes();
        java.io.InputStream inputStream14 = java.io.InputStream.nullInputStream();
        long long16 = inputStream14.skip((long) 'a');
        byte[] byteArray17 = new byte[] {};
        int int18 = inputStream14.read(byteArray17);
        byte[] byteArray20 = inputStream14.readNBytes(10);
        int int21 = inputStream12.read(byteArray20);
        byte[] byteArray23 = inputStream12.readNBytes((int) 'a');
        byte[] byteArray24 = inputStream12.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int27 = inputStream0.readNBytes(byteArray24, (int) ' ', (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [32, 32 + -1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(inputStream12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(inputStream14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
    }

    @Test
    public void test140() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test140");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray10 = inputStream0.readNBytes((int) (byte) 10);
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray14 = new byte[] {};
        int int15 = inputStream11.read(byteArray14);
        byte[] byteArray17 = inputStream11.readNBytes(10);
        long long19 = inputStream11.skip((long) '4');
        byte[] byteArray20 = inputStream11.readAllBytes();
        byte[] byteArray22 = inputStream11.readNBytes(1);
        int int23 = inputStream0.read(byteArray22);
        long long25 = inputStream0.skip((long) (byte) 1);
        java.io.InputStream inputStream26 = java.io.InputStream.nullInputStream();
        long long28 = inputStream26.skip((long) 'a');
        byte[] byteArray32 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int33 = inputStream26.read(byteArray32);
        byte[] byteArray34 = inputStream26.readAllBytes();
        byte[] byteArray35 = inputStream26.readAllBytes();
        byte[] byteArray36 = new byte[] {};
        int int37 = inputStream26.read(byteArray36);
        byte[] byteArray39 = inputStream26.readNBytes((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int42 = inputStream0.readNBytes(byteArray39, 1, (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [1, 1 + -1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(inputStream26);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
    }

    @Test
    public void test141() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test141");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        long long9 = inputStream0.skip(1L);
        byte[] byteArray10 = inputStream0.readAllBytes();
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        byte[] byteArray12 = inputStream11.readAllBytes();
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        long long15 = inputStream13.skip((long) 'a');
        byte[] byteArray16 = new byte[] {};
        int int17 = inputStream13.read(byteArray16);
        byte[] byteArray19 = inputStream13.readNBytes(10);
        int int20 = inputStream11.read(byteArray19);
        byte[] byteArray21 = inputStream11.readAllBytes();
        long long23 = inputStream11.skip((long) 'a');
        byte[] byteArray25 = inputStream11.readNBytes((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            int int28 = inputStream0.read(byteArray25, (int) 'a', (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [97, 97 + 0) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
    }

    @Test
    public void test142() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test142");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream7.read(byteArray10);
        byte[] byteArray13 = inputStream7.readNBytes(10);
        int int14 = inputStream0.read(byteArray13);
        byte[] byteArray15 = inputStream0.readAllBytes();
        java.io.InputStream inputStream16 = java.io.InputStream.nullInputStream();
        long long18 = inputStream16.skip((long) 'a');
        byte[] byteArray19 = new byte[] {};
        int int20 = inputStream16.read(byteArray19);
        byte[] byteArray22 = inputStream16.readNBytes(10);
        long long24 = inputStream16.skip((long) '4');
        byte[] byteArray26 = inputStream16.readNBytes((int) (byte) 10);
        java.io.InputStream inputStream27 = java.io.InputStream.nullInputStream();
        long long29 = inputStream27.skip((long) 'a');
        byte[] byteArray30 = new byte[] {};
        int int31 = inputStream27.read(byteArray30);
        byte[] byteArray33 = inputStream27.readNBytes(10);
        long long35 = inputStream27.skip((long) '4');
        byte[] byteArray36 = inputStream27.readAllBytes();
        byte[] byteArray38 = inputStream27.readNBytes(1);
        int int39 = inputStream16.read(byteArray38);
        byte[] byteArray41 = inputStream16.readNBytes((int) ' ');
        java.io.InputStream inputStream42 = java.io.InputStream.nullInputStream();
        byte[] byteArray43 = inputStream42.readAllBytes();
        java.io.InputStream inputStream44 = java.io.InputStream.nullInputStream();
        long long46 = inputStream44.skip((long) 'a');
        byte[] byteArray47 = new byte[] {};
        int int48 = inputStream44.read(byteArray47);
        byte[] byteArray50 = inputStream44.readNBytes(10);
        int int51 = inputStream42.read(byteArray50);
        int int52 = inputStream16.read(byteArray50);
        // The following exception was thrown during execution in test generation
        try {
            int int55 = inputStream0.readNBytes(byteArray50, (int) (byte) 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [10, 10 + 32) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertNotNull(inputStream16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertNotNull(inputStream27);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(inputStream42);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[]");
        org.junit.Assert.assertNotNull(inputStream44);
        org.junit.Assert.assertTrue("'" + long46 + "' != '" + 0L + "'", long46 == 0L);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
    }

    @Test
    public void test143() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test143");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        byte[] byteArray1 = inputStream0.readAllBytes();
        byte[] byteArray2 = inputStream0.readAllBytes();
        java.io.InputStream inputStream3 = java.io.InputStream.nullInputStream();
        long long5 = inputStream3.skip((long) 'a');
        byte[] byteArray6 = new byte[] {};
        int int7 = inputStream3.read(byteArray6);
        byte[] byteArray9 = inputStream3.readNBytes(10);
        long long11 = inputStream3.skip((long) '4');
        byte[] byteArray13 = inputStream3.readNBytes((int) (byte) 10);
        byte[] byteArray15 = inputStream3.readNBytes((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int18 = inputStream0.readNBytes(byteArray15, (int) '#', (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [35, 35 + 97) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[]");
        org.junit.Assert.assertNotNull(inputStream3);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
    }

    @Test
    public void test144() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test144");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream0.read(byteArray10);
        byte[] byteArray13 = inputStream0.readNBytes((int) (short) 0);
        byte[] byteArray15 = inputStream0.readNBytes(0);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
    }

    @Test
    public void test145() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test145");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        long long16 = inputStream0.skip((-1L));
        java.io.OutputStream outputStream17 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long18 = inputStream0.transferTo(outputStream17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test146() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test146");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream7.read(byteArray10);
        byte[] byteArray13 = inputStream7.readNBytes(10);
        int int14 = inputStream0.read(byteArray13);
        byte[] byteArray16 = inputStream0.readNBytes((int) (byte) 100);
        java.io.InputStream inputStream17 = java.io.InputStream.nullInputStream();
        long long19 = inputStream17.skip((long) 'a');
        byte[] byteArray20 = new byte[] {};
        int int21 = inputStream17.read(byteArray20);
        byte[] byteArray23 = inputStream17.readNBytes(10);
        long long25 = inputStream17.skip((long) '4');
        byte[] byteArray26 = inputStream17.readAllBytes();
        java.io.InputStream inputStream27 = java.io.InputStream.nullInputStream();
        long long29 = inputStream27.skip((long) 'a');
        byte[] byteArray30 = new byte[] {};
        int int31 = inputStream27.read(byteArray30);
        byte[] byteArray33 = inputStream27.readNBytes(10);
        long long35 = inputStream27.skip((long) '4');
        byte[] byteArray36 = inputStream27.readAllBytes();
        java.io.InputStream inputStream37 = java.io.InputStream.nullInputStream();
        long long39 = inputStream37.skip((long) 'a');
        byte[] byteArray43 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int44 = inputStream37.read(byteArray43);
        byte[] byteArray46 = inputStream37.readNBytes((int) (short) 100);
        int int47 = inputStream27.read(byteArray46);
        int int48 = inputStream17.read(byteArray46);
        int int49 = inputStream0.read(byteArray46);
        byte[] byteArray50 = inputStream0.readAllBytes();
        java.lang.Class<?> wildcardClass51 = byteArray50.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(inputStream17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertNotNull(inputStream27);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(inputStream37);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(wildcardClass51);
    }

    @Test
    public void test147() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test147");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int17 = inputStream10.read(byteArray16);
        byte[] byteArray19 = inputStream10.readNBytes((int) (short) 100);
        int int20 = inputStream0.read(byteArray19);
        long long22 = inputStream0.skip((long) (byte) 10);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    }

    @Test
    public void test148() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test148");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        long long10 = inputStream0.skip(1L);
        byte[] byteArray12 = inputStream0.readNBytes(1);
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        long long15 = inputStream13.skip((long) 'a');
        byte[] byteArray16 = new byte[] {};
        int int17 = inputStream13.read(byteArray16);
        byte[] byteArray19 = inputStream13.readNBytes(10);
        long long21 = inputStream13.skip((long) '4');
        byte[] byteArray22 = inputStream13.readAllBytes();
        java.io.InputStream inputStream23 = java.io.InputStream.nullInputStream();
        long long25 = inputStream23.skip((long) 'a');
        byte[] byteArray26 = new byte[] {};
        int int27 = inputStream23.read(byteArray26);
        byte[] byteArray29 = inputStream23.readNBytes(10);
        long long31 = inputStream23.skip((long) '4');
        byte[] byteArray32 = inputStream23.readAllBytes();
        java.io.InputStream inputStream33 = java.io.InputStream.nullInputStream();
        long long35 = inputStream33.skip((long) 'a');
        byte[] byteArray39 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int40 = inputStream33.read(byteArray39);
        byte[] byteArray42 = inputStream33.readNBytes((int) (short) 100);
        int int43 = inputStream23.read(byteArray42);
        int int44 = inputStream13.read(byteArray42);
        // The following exception was thrown during execution in test generation
        try {
            int int47 = inputStream0.readNBytes(byteArray42, (int) (short) -1, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [-1, -1 + 0) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertNotNull(inputStream23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertNotNull(inputStream33);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
    }

    @Test
    public void test149() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test149");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray9 = inputStream0.readNBytes((int) (short) 100);
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray13 = new byte[] {};
        int int14 = inputStream10.read(byteArray13);
        byte[] byteArray16 = inputStream10.readNBytes(10);
        long long18 = inputStream10.skip((long) '4');
        byte[] byteArray20 = inputStream10.readNBytes((int) (byte) 10);
        // The following exception was thrown during execution in test generation
        try {
            int int23 = inputStream0.read(byteArray20, (int) (byte) -1, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [-1, -1 + 1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
    }

    @Test
    public void test150() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test150");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        long long16 = inputStream0.skip((long) 0);
        java.io.InputStream inputStream17 = java.io.InputStream.nullInputStream();
        long long19 = inputStream17.skip((long) 'a');
        byte[] byteArray23 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int24 = inputStream17.read(byteArray23);
        int int27 = inputStream0.readNBytes(byteArray23, (int) (byte) 1, 1);
        java.io.InputStream inputStream28 = java.io.InputStream.nullInputStream();
        long long30 = inputStream28.skip((long) 'a');
        byte[] byteArray31 = new byte[] {};
        int int32 = inputStream28.read(byteArray31);
        byte[] byteArray34 = inputStream28.readNBytes(10);
        long long36 = inputStream28.skip((long) '4');
        long long38 = inputStream28.skip((long) '#');
        byte[] byteArray39 = inputStream28.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int42 = inputStream0.readNBytes(byteArray39, 100, (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [100, 100 + 35) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(inputStream17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(inputStream28);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
    }

    @Test
    public void test151() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test151");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        long long16 = inputStream0.skip((long) 0);
        byte[] byteArray17 = inputStream0.readAllBytes();
        byte[] byteArray19 = inputStream0.readNBytes((int) (byte) 1);
        byte[] byteArray20 = inputStream0.readAllBytes();
        java.lang.Class<?> wildcardClass21 = byteArray20.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(wildcardClass21);
    }

    @Test
    public void test152() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test152");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        byte[] byteArray1 = inputStream0.readAllBytes();
        java.io.InputStream inputStream2 = java.io.InputStream.nullInputStream();
        long long4 = inputStream2.skip((long) 'a');
        byte[] byteArray5 = new byte[] {};
        int int6 = inputStream2.read(byteArray5);
        byte[] byteArray8 = inputStream2.readNBytes(10);
        int int9 = inputStream0.read(byteArray8);
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int17 = inputStream10.read(byteArray16);
        byte[] byteArray18 = inputStream10.readAllBytes();
        java.io.InputStream inputStream19 = java.io.InputStream.nullInputStream();
        long long21 = inputStream19.skip((long) 'a');
        byte[] byteArray25 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int26 = inputStream19.read(byteArray25);
        byte[] byteArray27 = inputStream19.readAllBytes();
        java.io.InputStream inputStream28 = java.io.InputStream.nullInputStream();
        long long30 = inputStream28.skip((long) 'a');
        byte[] byteArray31 = new byte[] {};
        int int32 = inputStream28.read(byteArray31);
        int int33 = inputStream19.read(byteArray31);
        int int36 = inputStream10.read(byteArray31, 0, 0);
        int int37 = inputStream0.read(byteArray31);
        java.io.InputStream inputStream38 = java.io.InputStream.nullInputStream();
        long long40 = inputStream38.skip((long) 'a');
        byte[] byteArray41 = new byte[] {};
        int int42 = inputStream38.read(byteArray41);
        byte[] byteArray44 = inputStream38.readNBytes(10);
        byte[] byteArray48 = new byte[] { (byte) 1, (byte) 10, (byte) 1 };
        int int49 = inputStream38.read(byteArray48);
        byte[] byteArray51 = inputStream38.readNBytes((int) (byte) 1);
        int int52 = inputStream0.read(byteArray51);
        java.io.InputStream inputStream53 = java.io.InputStream.nullInputStream();
        long long55 = inputStream53.skip((long) 'a');
        byte[] byteArray56 = new byte[] {};
        int int57 = inputStream53.read(byteArray56);
        byte[] byteArray59 = inputStream53.readNBytes(10);
        long long61 = inputStream53.skip((long) '4');
        byte[] byteArray63 = inputStream53.readNBytes((int) (byte) 10);
        java.io.InputStream inputStream64 = java.io.InputStream.nullInputStream();
        long long66 = inputStream64.skip((long) 'a');
        byte[] byteArray67 = new byte[] {};
        int int68 = inputStream64.read(byteArray67);
        byte[] byteArray70 = inputStream64.readNBytes(10);
        long long72 = inputStream64.skip((long) '4');
        byte[] byteArray73 = inputStream64.readAllBytes();
        byte[] byteArray75 = inputStream64.readNBytes(1);
        int int76 = inputStream53.read(byteArray75);
        byte[] byteArray78 = inputStream53.readNBytes((int) ' ');
        int int79 = inputStream0.read(byteArray78);
        byte[] byteArray81 = inputStream0.readNBytes((int) (short) 10);
        long long83 = inputStream0.skip((long) 100);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(inputStream2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(inputStream19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(inputStream28);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(inputStream38);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[1, 10, 1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(inputStream53);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[]");
        org.junit.Assert.assertNotNull(inputStream64);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[]");
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[]");
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertNotNull(byteArray81);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray81), "[]");
        org.junit.Assert.assertTrue("'" + long83 + "' != '" + 0L + "'", long83 == 0L);
    }

    @Test
    public void test153() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test153");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        long long10 = inputStream0.skip((long) '#');
        byte[] byteArray11 = inputStream0.readAllBytes();
        java.io.InputStream inputStream12 = java.io.InputStream.nullInputStream();
        long long14 = inputStream12.skip((long) 'a');
        long long16 = inputStream12.skip((long) 10);
        byte[] byteArray18 = inputStream12.readNBytes((int) (short) 10);
        // The following exception was thrown during execution in test generation
        try {
            int int21 = inputStream0.readNBytes(byteArray18, (int) (byte) 0, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [0, 0 + 32) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(inputStream12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
    }

    @Test
    public void test154() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test154");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray10 = inputStream0.readNBytes((int) (byte) 10);
        byte[] byteArray12 = inputStream0.readNBytes((int) (byte) 1);
        java.lang.Class<?> wildcardClass13 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(wildcardClass13);
    }

    @Test
    public void test155() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test155");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray11 = inputStream0.readNBytes(1);
        java.io.InputStream inputStream12 = java.io.InputStream.nullInputStream();
        long long14 = inputStream12.skip((long) 'a');
        byte[] byteArray15 = new byte[] {};
        int int16 = inputStream12.read(byteArray15);
        byte[] byteArray18 = inputStream12.readNBytes(10);
        long long20 = inputStream12.skip((long) '4');
        byte[] byteArray22 = inputStream12.readNBytes((int) (byte) 10);
        int int23 = inputStream0.read(byteArray22);
        long long25 = inputStream0.skip((long) 1);
        byte[] byteArray27 = inputStream0.readNBytes((int) ' ');
        java.io.InputStream inputStream28 = java.io.InputStream.nullInputStream();
        long long30 = inputStream28.skip((long) 'a');
        byte[] byteArray31 = new byte[] {};
        int int32 = inputStream28.read(byteArray31);
        byte[] byteArray34 = inputStream28.readNBytes(10);
        long long36 = inputStream28.skip((long) '4');
        long long38 = inputStream28.skip(1L);
        byte[] byteArray40 = inputStream28.readNBytes(1);
        // The following exception was thrown during execution in test generation
        try {
            int int43 = inputStream0.read(byteArray40, 100, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [100, 100 + 1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(inputStream12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(inputStream28);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
    }

    @Test
    public void test156() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test156");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        long long16 = inputStream0.skip((long) (byte) 100);
        java.io.OutputStream outputStream17 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long18 = inputStream0.transferTo(outputStream17);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test157() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test157");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray9 = inputStream0.readNBytes((int) (short) 100);
        byte[] byteArray11 = inputStream0.readNBytes((int) (short) 10);
        java.lang.Class<?> wildcardClass12 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test158() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test158");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray11 = inputStream0.readNBytes((int) (short) 100);
        java.lang.Class<?> wildcardClass12 = byteArray11.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test159() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test159");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        long long11 = inputStream0.skip((long) 10);
        byte[] byteArray12 = inputStream0.readAllBytes();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
    }

    @Test
    public void test160() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test160");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream7.read(byteArray10);
        byte[] byteArray13 = inputStream7.readNBytes(10);
        int int14 = inputStream0.read(byteArray13);
        byte[] byteArray16 = inputStream0.readNBytes((int) (byte) 100);
        java.io.InputStream inputStream17 = java.io.InputStream.nullInputStream();
        long long19 = inputStream17.skip((long) 'a');
        byte[] byteArray23 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int24 = inputStream17.read(byteArray23);
        byte[] byteArray26 = inputStream17.readNBytes((int) (short) 100);
        int int27 = inputStream0.read(byteArray26);
        byte[] byteArray28 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int31 = inputStream0.readNBytes(byteArray28, (-1), (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(inputStream17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
    }

    @Test
    public void test161() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test161");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        byte[] byteArray6 = inputStream0.readNBytes((int) (short) 10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray13 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int14 = inputStream7.read(byteArray13);
        byte[] byteArray16 = inputStream7.readNBytes((int) (short) 100);
        java.io.InputStream inputStream17 = java.io.InputStream.nullInputStream();
        byte[] byteArray18 = inputStream17.readAllBytes();
        java.io.InputStream inputStream19 = java.io.InputStream.nullInputStream();
        long long21 = inputStream19.skip((long) 'a');
        byte[] byteArray22 = new byte[] {};
        int int23 = inputStream19.read(byteArray22);
        byte[] byteArray25 = inputStream19.readNBytes(10);
        int int26 = inputStream17.read(byteArray25);
        byte[] byteArray27 = inputStream17.readAllBytes();
        int int28 = inputStream7.read(byteArray27);
        int int29 = inputStream0.read(byteArray27);
        java.io.InputStream inputStream30 = java.io.InputStream.nullInputStream();
        long long32 = inputStream30.skip((long) 'a');
        byte[] byteArray33 = new byte[] {};
        int int34 = inputStream30.read(byteArray33);
        byte[] byteArray36 = inputStream30.readNBytes(10);
        long long38 = inputStream30.skip((long) '4');
        byte[] byteArray39 = inputStream30.readAllBytes();
        byte[] byteArray41 = inputStream30.readNBytes(1);
        java.io.InputStream inputStream42 = java.io.InputStream.nullInputStream();
        long long44 = inputStream42.skip((long) 'a');
        byte[] byteArray45 = new byte[] {};
        int int46 = inputStream42.read(byteArray45);
        byte[] byteArray48 = inputStream42.readNBytes(10);
        long long50 = inputStream42.skip((long) '4');
        byte[] byteArray52 = inputStream42.readNBytes((int) (byte) 10);
        int int53 = inputStream30.read(byteArray52);
        long long55 = inputStream30.skip((long) 1);
        long long57 = inputStream30.skip((long) 100);
        byte[] byteArray58 = inputStream30.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int61 = inputStream0.readNBytes(byteArray58, (int) (byte) 1, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [1, 1 + 100) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(inputStream17);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(inputStream19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(inputStream30);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(inputStream42);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
    }

    @Test
    public void test162() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test162");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        byte[] byteArray1 = inputStream0.readAllBytes();
        java.io.InputStream inputStream2 = java.io.InputStream.nullInputStream();
        long long4 = inputStream2.skip((long) 'a');
        byte[] byteArray5 = new byte[] {};
        int int6 = inputStream2.read(byteArray5);
        byte[] byteArray8 = inputStream2.readNBytes(10);
        int int9 = inputStream0.read(byteArray8);
        byte[] byteArray10 = inputStream0.readAllBytes();
        long long12 = inputStream0.skip((long) 'a');
        byte[] byteArray13 = inputStream0.readAllBytes();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(inputStream2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
    }

    @Test
    public void test163() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test163");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = inputStream0.readAllBytes();
        java.lang.Class<?> wildcardClass11 = byteArray10.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(wildcardClass11);
    }

    @Test
    public void test164() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test164");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray10 = inputStream0.readNBytes((int) (byte) 10);
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray14 = new byte[] {};
        int int15 = inputStream11.read(byteArray14);
        byte[] byteArray17 = inputStream11.readNBytes(10);
        long long19 = inputStream11.skip((long) '4');
        byte[] byteArray20 = inputStream11.readAllBytes();
        byte[] byteArray22 = inputStream11.readNBytes(1);
        int int23 = inputStream0.read(byteArray22);
        java.io.InputStream inputStream24 = java.io.InputStream.nullInputStream();
        long long26 = inputStream24.skip((long) 'a');
        byte[] byteArray30 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int31 = inputStream24.read(byteArray30);
        byte[] byteArray32 = inputStream24.readAllBytes();
        java.io.InputStream inputStream33 = java.io.InputStream.nullInputStream();
        long long35 = inputStream33.skip((long) 'a');
        byte[] byteArray36 = new byte[] {};
        int int37 = inputStream33.read(byteArray36);
        int int38 = inputStream24.read(byteArray36);
        long long40 = inputStream24.skip((long) 0);
        byte[] byteArray41 = inputStream24.readAllBytes();
        byte[] byteArray43 = inputStream24.readNBytes((int) (byte) 1);
        int int44 = inputStream0.read(byteArray43);
        byte[] byteArray46 = inputStream0.readNBytes(10);
        long long48 = inputStream0.skip((long) (byte) 100);
        java.io.InputStream inputStream49 = java.io.InputStream.nullInputStream();
        long long51 = inputStream49.skip((long) 'a');
        byte[] byteArray55 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int56 = inputStream49.read(byteArray55);
        byte[] byteArray57 = inputStream49.readAllBytes();
        byte[] byteArray58 = inputStream49.readAllBytes();
        byte[] byteArray59 = inputStream49.readAllBytes();
        java.io.InputStream inputStream60 = java.io.InputStream.nullInputStream();
        long long62 = inputStream60.skip((long) 'a');
        byte[] byteArray66 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int67 = inputStream60.read(byteArray66);
        byte[] byteArray68 = inputStream60.readAllBytes();
        byte[] byteArray69 = inputStream60.readAllBytes();
        byte[] byteArray70 = new byte[] {};
        int int71 = inputStream60.read(byteArray70);
        byte[] byteArray73 = inputStream60.readNBytes((int) (short) 100);
        int int74 = inputStream49.read(byteArray73);
        // The following exception was thrown during execution in test generation
        try {
            int int77 = inputStream0.readNBytes(byteArray73, (int) (byte) 0, (-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [0, 0 + -1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(inputStream24);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertNotNull(inputStream33);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNotNull(inputStream49);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(inputStream60);
        org.junit.Assert.assertTrue("'" + long62 + "' != '" + 0L + "'", long62 == 0L);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + (-1) + "'", int67 == (-1));
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
    }

    @Test
    public void test165() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test165");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        long long16 = inputStream0.skip((long) 0);
        long long18 = inputStream0.skip(0L);
        byte[] byteArray19 = inputStream0.readAllBytes();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
    }

    @Test
    public void test166() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test166");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        byte[] byteArray8 = inputStream0.readNBytes((int) '4');
        long long10 = inputStream0.skip((long) (byte) 10);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
    }

    @Test
    public void test167() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test167");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray10 = inputStream0.readNBytes(100);
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        long long15 = inputStream11.skip((long) 10);
        byte[] byteArray17 = inputStream11.readNBytes((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int20 = inputStream0.readNBytes(byteArray17, (int) (byte) -1, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [-1, -1 + 52) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
    }

    @Test
    public void test168() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test168");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray11 = inputStream0.readNBytes(1);
        java.io.InputStream inputStream12 = java.io.InputStream.nullInputStream();
        long long14 = inputStream12.skip((long) 'a');
        byte[] byteArray15 = new byte[] {};
        int int16 = inputStream12.read(byteArray15);
        byte[] byteArray18 = inputStream12.readNBytes(10);
        long long20 = inputStream12.skip((long) '4');
        byte[] byteArray22 = inputStream12.readNBytes((int) (byte) 10);
        int int23 = inputStream0.read(byteArray22);
        long long25 = inputStream0.skip((long) 1);
        long long27 = inputStream0.skip((long) 100);
        byte[] byteArray28 = inputStream0.readAllBytes();
        long long30 = inputStream0.skip((long) '4');
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(inputStream12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
    }

    @Test
    public void test169() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test169");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        long long16 = inputStream0.skip((long) (byte) 100);
        long long18 = inputStream0.skip(0L);
        long long20 = inputStream0.skip((long) ' ');
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
    }

    @Test
    public void test170() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test170");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        byte[] byteArray1 = inputStream0.readAllBytes();
        java.io.InputStream inputStream2 = java.io.InputStream.nullInputStream();
        long long4 = inputStream2.skip((long) 'a');
        byte[] byteArray5 = new byte[] {};
        int int6 = inputStream2.read(byteArray5);
        byte[] byteArray8 = inputStream2.readNBytes(10);
        int int9 = inputStream0.read(byteArray8);
        byte[] byteArray10 = inputStream0.readAllBytes();
        long long12 = inputStream0.skip((long) 'a');
        byte[] byteArray14 = inputStream0.readNBytes((int) (byte) 10);
        java.io.OutputStream outputStream15 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long16 = inputStream0.transferTo(outputStream15);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(inputStream2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
    }

    @Test
    public void test171() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test171");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        long long16 = inputStream0.skip((long) 0);
        byte[] byteArray17 = inputStream0.readAllBytes();
        byte[] byteArray19 = inputStream0.readNBytes((int) (byte) 1);
        byte[] byteArray20 = inputStream0.readAllBytes();
        long long22 = inputStream0.skip((long) (byte) 1);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
    }

    @Test
    public void test172() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test172");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        byte[] byteArray6 = inputStream0.readNBytes((int) (short) 10);
        byte[] byteArray8 = inputStream0.readNBytes((int) (byte) 0);
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        byte[] byteArray15 = inputStream9.readNBytes(10);
        java.io.InputStream inputStream16 = java.io.InputStream.nullInputStream();
        long long18 = inputStream16.skip((long) 'a');
        byte[] byteArray19 = new byte[] {};
        int int20 = inputStream16.read(byteArray19);
        byte[] byteArray22 = inputStream16.readNBytes(10);
        int int23 = inputStream9.read(byteArray22);
        byte[] byteArray25 = inputStream9.readNBytes((int) (byte) 100);
        int int26 = inputStream0.read(byteArray25);
        byte[] byteArray28 = inputStream0.readNBytes((int) (short) 1);
        byte[] byteArray29 = inputStream0.readAllBytes();
        java.lang.Class<?> wildcardClass30 = byteArray29.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertNotNull(inputStream16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(wildcardClass30);
    }

    @Test
    public void test173() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test173");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        long long9 = inputStream0.skip(1L);
        byte[] byteArray10 = inputStream0.readAllBytes();
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray14 = new byte[] {};
        int int15 = inputStream11.read(byteArray14);
        byte[] byteArray17 = inputStream11.readNBytes(10);
        long long19 = inputStream11.skip((long) '4');
        byte[] byteArray21 = inputStream11.readNBytes(100);
        // The following exception was thrown during execution in test generation
        try {
            int int24 = inputStream0.readNBytes(byteArray21, (int) (byte) 10, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [10, 10 + 1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
    }

    @Test
    public void test174() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test174");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        long long16 = inputStream0.skip((long) 0);
        byte[] byteArray17 = inputStream0.readAllBytes();
        byte[] byteArray19 = inputStream0.readNBytes((int) (byte) 1);
        byte[] byteArray20 = inputStream0.readAllBytes();
        java.io.OutputStream outputStream21 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long22 = inputStream0.transferTo(outputStream21);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
    }

    @Test
    public void test175() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test175");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        long long16 = inputStream0.skip((long) 0);
        byte[] byteArray17 = inputStream0.readAllBytes();
        byte[] byteArray19 = inputStream0.readNBytes((int) (byte) 100);
        long long21 = inputStream0.skip((long) 'a');
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
    }

    @Test
    public void test176() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test176");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        byte[] byteArray6 = inputStream0.readNBytes((int) (short) 10);
        byte[] byteArray8 = inputStream0.readNBytes((int) (byte) 0);
        long long10 = inputStream0.skip((long) (short) 10);
        byte[] byteArray12 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        long long15 = inputStream13.skip((long) 'a');
        byte[] byteArray16 = new byte[] {};
        int int17 = inputStream13.read(byteArray16);
        byte[] byteArray19 = inputStream13.readNBytes(10);
        long long21 = inputStream13.skip((long) '4');
        byte[] byteArray22 = inputStream13.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int25 = inputStream0.readNBytes(byteArray22, (int) (short) 10, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [10, 10 + 0) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
    }

    @Test
    public void test177() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test177");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        java.io.InputStream inputStream1 = java.io.InputStream.nullInputStream();
        byte[] byteArray2 = inputStream1.readAllBytes();
        java.io.InputStream inputStream3 = java.io.InputStream.nullInputStream();
        long long5 = inputStream3.skip((long) 'a');
        byte[] byteArray6 = new byte[] {};
        int int7 = inputStream3.read(byteArray6);
        byte[] byteArray9 = inputStream3.readNBytes(10);
        int int10 = inputStream1.read(byteArray9);
        byte[] byteArray11 = inputStream1.readAllBytes();
        int int12 = inputStream0.read(byteArray11);
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        long long15 = inputStream13.skip((long) 'a');
        byte[] byteArray19 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int20 = inputStream13.read(byteArray19);
        byte[] byteArray22 = inputStream13.readNBytes((int) (short) 100);
        byte[] byteArray23 = inputStream13.readAllBytes();
        int int24 = inputStream0.read(byteArray23);
        java.io.InputStream inputStream25 = java.io.InputStream.nullInputStream();
        long long27 = inputStream25.skip((long) 'a');
        byte[] byteArray28 = new byte[] {};
        int int29 = inputStream25.read(byteArray28);
        byte[] byteArray31 = inputStream25.readNBytes(10);
        long long33 = inputStream25.skip((long) '4');
        long long35 = inputStream25.skip((long) '#');
        byte[] byteArray36 = inputStream25.readAllBytes();
        java.io.InputStream inputStream37 = java.io.InputStream.nullInputStream();
        long long39 = inputStream37.skip((long) 'a');
        long long41 = inputStream37.skip((long) 10);
        byte[] byteArray43 = inputStream37.readNBytes((int) (short) 10);
        byte[] byteArray45 = inputStream37.readNBytes((int) (byte) 0);
        java.io.InputStream inputStream46 = java.io.InputStream.nullInputStream();
        long long48 = inputStream46.skip((long) 'a');
        byte[] byteArray49 = new byte[] {};
        int int50 = inputStream46.read(byteArray49);
        byte[] byteArray52 = inputStream46.readNBytes(10);
        java.io.InputStream inputStream53 = java.io.InputStream.nullInputStream();
        long long55 = inputStream53.skip((long) 'a');
        byte[] byteArray56 = new byte[] {};
        int int57 = inputStream53.read(byteArray56);
        byte[] byteArray59 = inputStream53.readNBytes(10);
        int int60 = inputStream46.read(byteArray59);
        byte[] byteArray62 = inputStream46.readNBytes((int) (byte) 100);
        int int63 = inputStream37.read(byteArray62);
        byte[] byteArray65 = inputStream37.readNBytes((int) (short) 1);
        byte[] byteArray66 = inputStream37.readAllBytes();
        int int67 = inputStream25.read(byteArray66);
        int int70 = inputStream0.read(byteArray66, (int) (byte) 0, 0);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(inputStream1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[]");
        org.junit.Assert.assertNotNull(inputStream3);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(inputStream25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(inputStream37);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[]");
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertNotNull(inputStream46);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(inputStream53);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
    }

    @Test
    public void test178() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test178");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = inputStream0.readAllBytes();
        byte[] byteArray12 = inputStream0.readNBytes((int) (byte) 10);
        long long14 = inputStream0.skip((long) 1);
        byte[] byteArray15 = inputStream0.readAllBytes();
        java.io.OutputStream outputStream16 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long17 = inputStream0.transferTo(outputStream16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
    }

    @Test
    public void test179() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test179");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray11 = inputStream0.readNBytes((int) (short) 100);
        byte[] byteArray12 = inputStream0.readAllBytes();
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        long long15 = inputStream13.skip((long) 'a');
        byte[] byteArray16 = new byte[] {};
        int int17 = inputStream13.read(byteArray16);
        byte[] byteArray19 = inputStream13.readNBytes(10);
        long long21 = inputStream13.skip((long) '4');
        byte[] byteArray22 = inputStream13.readAllBytes();
        byte[] byteArray24 = inputStream13.readNBytes(1);
        java.io.InputStream inputStream25 = java.io.InputStream.nullInputStream();
        long long27 = inputStream25.skip((long) 'a');
        byte[] byteArray28 = new byte[] {};
        int int29 = inputStream25.read(byteArray28);
        byte[] byteArray31 = inputStream25.readNBytes(10);
        long long33 = inputStream25.skip((long) '4');
        byte[] byteArray35 = inputStream25.readNBytes((int) (byte) 10);
        int int36 = inputStream13.read(byteArray35);
        java.io.InputStream inputStream37 = java.io.InputStream.nullInputStream();
        long long39 = inputStream37.skip((long) 'a');
        byte[] byteArray40 = new byte[] {};
        int int41 = inputStream37.read(byteArray40);
        byte[] byteArray43 = inputStream37.readNBytes(10);
        long long45 = inputStream37.skip((long) '4');
        byte[] byteArray46 = inputStream37.readAllBytes();
        int int47 = inputStream13.read(byteArray46);
        java.io.InputStream inputStream48 = java.io.InputStream.nullInputStream();
        long long50 = inputStream48.skip((long) 'a');
        byte[] byteArray51 = new byte[] {};
        int int52 = inputStream48.read(byteArray51);
        byte[] byteArray54 = inputStream48.readNBytes(10);
        long long56 = inputStream48.skip((long) '4');
        byte[] byteArray58 = inputStream48.readNBytes(100);
        int int59 = inputStream13.read(byteArray58);
        int int60 = inputStream0.read(byteArray58);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(inputStream25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(inputStream37);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[]");
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(inputStream48);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
    }

    @Test
    public void test180() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test180");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        java.io.InputStream inputStream15 = java.io.InputStream.nullInputStream();
        byte[] byteArray16 = inputStream15.readAllBytes();
        byte[] byteArray17 = inputStream15.readAllBytes();
        int int18 = inputStream0.read(byteArray17);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(inputStream15);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
    }

    @Test
    public void test181() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test181");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        byte[] byteArray6 = inputStream0.readNBytes((int) (short) 10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream7.read(byteArray10);
        byte[] byteArray13 = inputStream7.readNBytes(10);
        long long15 = inputStream7.skip((long) '4');
        byte[] byteArray17 = inputStream7.readNBytes((int) (byte) 10);
        java.io.InputStream inputStream18 = java.io.InputStream.nullInputStream();
        long long20 = inputStream18.skip((long) 'a');
        byte[] byteArray21 = new byte[] {};
        int int22 = inputStream18.read(byteArray21);
        byte[] byteArray24 = inputStream18.readNBytes(10);
        long long26 = inputStream18.skip((long) '4');
        byte[] byteArray27 = inputStream18.readAllBytes();
        byte[] byteArray29 = inputStream18.readNBytes(1);
        int int30 = inputStream7.read(byteArray29);
        // The following exception was thrown during execution in test generation
        try {
            int int33 = inputStream0.read(byteArray29, (int) ' ', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [32, 32 + 0) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(inputStream18);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test182() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test182");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        java.io.InputStream inputStream15 = java.io.InputStream.nullInputStream();
        long long17 = inputStream15.skip((long) 'a');
        byte[] byteArray21 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int22 = inputStream15.read(byteArray21);
        byte[] byteArray23 = inputStream15.readAllBytes();
        java.io.InputStream inputStream24 = java.io.InputStream.nullInputStream();
        long long26 = inputStream24.skip((long) 'a');
        byte[] byteArray27 = new byte[] {};
        int int28 = inputStream24.read(byteArray27);
        int int29 = inputStream15.read(byteArray27);
        int int30 = inputStream0.read(byteArray27);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(inputStream15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + (-1) + "'", int22 == (-1));
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(inputStream24);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
    }

    @Test
    public void test183() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test183");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray10 = inputStream0.readNBytes((int) (byte) 10);
        byte[] byteArray12 = inputStream0.readNBytes((int) (byte) 1);
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        long long15 = inputStream13.skip((long) 'a');
        byte[] byteArray16 = new byte[] {};
        int int17 = inputStream13.read(byteArray16);
        byte[] byteArray19 = inputStream13.readNBytes(10);
        long long21 = inputStream13.skip((long) '4');
        byte[] byteArray23 = inputStream13.readNBytes((int) (byte) 10);
        java.io.InputStream inputStream24 = java.io.InputStream.nullInputStream();
        long long26 = inputStream24.skip((long) 'a');
        byte[] byteArray27 = new byte[] {};
        int int28 = inputStream24.read(byteArray27);
        byte[] byteArray30 = inputStream24.readNBytes(10);
        long long32 = inputStream24.skip((long) '4');
        byte[] byteArray33 = inputStream24.readAllBytes();
        byte[] byteArray35 = inputStream24.readNBytes(1);
        int int36 = inputStream13.read(byteArray35);
        int int37 = inputStream0.read(byteArray35);
        java.io.InputStream inputStream38 = java.io.InputStream.nullInputStream();
        byte[] byteArray39 = inputStream38.readAllBytes();
        java.io.InputStream inputStream40 = java.io.InputStream.nullInputStream();
        long long42 = inputStream40.skip((long) 'a');
        byte[] byteArray43 = new byte[] {};
        int int44 = inputStream40.read(byteArray43);
        byte[] byteArray46 = inputStream40.readNBytes(10);
        int int47 = inputStream38.read(byteArray46);
        byte[] byteArray48 = inputStream38.readAllBytes();
        java.io.InputStream inputStream49 = java.io.InputStream.nullInputStream();
        long long51 = inputStream49.skip((long) 'a');
        byte[] byteArray55 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int56 = inputStream49.read(byteArray55);
        byte[] byteArray57 = inputStream49.readAllBytes();
        byte[] byteArray58 = inputStream49.readAllBytes();
        byte[] byteArray59 = inputStream49.readAllBytes();
        byte[] byteArray61 = inputStream49.readNBytes((int) (byte) 10);
        int int62 = inputStream38.read(byteArray61);
        java.io.InputStream inputStream63 = java.io.InputStream.nullInputStream();
        long long65 = inputStream63.skip((long) 'a');
        byte[] byteArray69 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int70 = inputStream63.read(byteArray69);
        byte[] byteArray71 = inputStream63.readAllBytes();
        byte[] byteArray72 = inputStream63.readAllBytes();
        byte[] byteArray73 = new byte[] {};
        int int74 = inputStream63.read(byteArray73);
        byte[] byteArray76 = inputStream63.readNBytes((int) (short) 0);
        int int77 = inputStream38.read(byteArray76);
        // The following exception was thrown during execution in test generation
        try {
            int int80 = inputStream0.readNBytes(byteArray76, (int) (short) 100, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [100, 100 + 10) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(inputStream24);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(inputStream38);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertNotNull(inputStream40);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(inputStream49);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[]");
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertNotNull(inputStream63);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
    }

    @Test
    public void test184() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test184");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray10 = inputStream0.readNBytes(100);
        java.io.OutputStream outputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long12 = inputStream0.transferTo(outputStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
    }

    @Test
    public void test185() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test185");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        java.lang.Class<?> wildcardClass10 = byteArray9.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(wildcardClass10);
    }

    @Test
    public void test186() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test186");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray9 = inputStream0.readNBytes((int) (short) 100);
        byte[] byteArray10 = inputStream0.readAllBytes();
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int18 = inputStream11.read(byteArray17);
        byte[] byteArray19 = inputStream11.readAllBytes();
        byte[] byteArray20 = inputStream11.readAllBytes();
        byte[] byteArray21 = inputStream11.readAllBytes();
        java.io.InputStream inputStream22 = java.io.InputStream.nullInputStream();
        long long24 = inputStream22.skip((long) 'a');
        byte[] byteArray28 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int29 = inputStream22.read(byteArray28);
        byte[] byteArray30 = inputStream22.readAllBytes();
        byte[] byteArray31 = inputStream22.readAllBytes();
        byte[] byteArray32 = new byte[] {};
        int int33 = inputStream22.read(byteArray32);
        byte[] byteArray35 = inputStream22.readNBytes((int) (short) 100);
        int int36 = inputStream11.read(byteArray35);
        // The following exception was thrown during execution in test generation
        try {
            int int39 = inputStream0.read(byteArray35, (int) '4', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [52, 52 + 0) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(inputStream22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test187() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test187");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        byte[] byteArray6 = inputStream0.readNBytes((int) (short) 10);
        byte[] byteArray8 = inputStream0.readNBytes((int) '#');
        long long10 = inputStream0.skip(1L);
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray14 = new byte[] {};
        int int15 = inputStream11.read(byteArray14);
        byte[] byteArray17 = inputStream11.readNBytes(10);
        long long19 = inputStream11.skip((long) '4');
        long long21 = inputStream11.skip(1L);
        java.io.InputStream inputStream22 = java.io.InputStream.nullInputStream();
        long long24 = inputStream22.skip((long) 'a');
        byte[] byteArray25 = new byte[] {};
        int int26 = inputStream22.read(byteArray25);
        byte[] byteArray28 = inputStream22.readNBytes(10);
        java.io.InputStream inputStream29 = java.io.InputStream.nullInputStream();
        long long31 = inputStream29.skip((long) 'a');
        byte[] byteArray32 = new byte[] {};
        int int33 = inputStream29.read(byteArray32);
        byte[] byteArray35 = inputStream29.readNBytes(10);
        int int36 = inputStream22.read(byteArray35);
        int int37 = inputStream11.read(byteArray35);
        int int38 = inputStream0.read(byteArray35);
        java.lang.Class<?> wildcardClass39 = byteArray35.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(inputStream22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertNotNull(inputStream29);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(wildcardClass39);
    }

    @Test
    public void test188() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test188");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray11 = inputStream0.readNBytes((int) (short) 100);
        byte[] byteArray12 = inputStream0.readAllBytes();
        long long14 = inputStream0.skip((-1L));
        byte[] byteArray15 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int18 = inputStream0.readNBytes(byteArray15, (int) (short) 0, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test189() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test189");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream0.read(byteArray10);
        byte[] byteArray13 = inputStream0.readNBytes((int) (short) 100);
        byte[] byteArray15 = inputStream0.readNBytes(0);
        java.io.InputStream inputStream16 = java.io.InputStream.nullInputStream();
        long long18 = inputStream16.skip((long) 'a');
        byte[] byteArray19 = new byte[] {};
        int int20 = inputStream16.read(byteArray19);
        byte[] byteArray22 = inputStream16.readNBytes(10);
        long long24 = inputStream16.skip((long) '4');
        byte[] byteArray25 = inputStream16.readAllBytes();
        byte[] byteArray27 = inputStream16.readNBytes(1);
        // The following exception was thrown during execution in test generation
        try {
            int int30 = inputStream0.read(byteArray27, (int) (byte) 1, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [1, 1 + 1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertNotNull(inputStream16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
    }

    @Test
    public void test190() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test190");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray11 = inputStream0.readNBytes(1);
        java.io.InputStream inputStream12 = java.io.InputStream.nullInputStream();
        long long14 = inputStream12.skip((long) 'a');
        byte[] byteArray15 = new byte[] {};
        int int16 = inputStream12.read(byteArray15);
        byte[] byteArray18 = inputStream12.readNBytes(10);
        long long20 = inputStream12.skip((long) '4');
        byte[] byteArray22 = inputStream12.readNBytes((int) (byte) 10);
        int int23 = inputStream0.read(byteArray22);
        long long25 = inputStream0.skip((long) 1);
        byte[] byteArray27 = inputStream0.readNBytes((int) ' ');
        java.lang.Class<?> wildcardClass28 = byteArray27.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(inputStream12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test191() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test191");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray11 = inputStream0.readNBytes((int) (short) 100);
        java.io.InputStream inputStream12 = java.io.InputStream.nullInputStream();
        long long14 = inputStream12.skip((long) 'a');
        long long16 = inputStream12.skip((long) 10);
        byte[] byteArray18 = inputStream12.readNBytes((int) (short) 10);
        byte[] byteArray20 = inputStream12.readNBytes((int) (byte) 0);
        java.io.InputStream inputStream21 = java.io.InputStream.nullInputStream();
        long long23 = inputStream21.skip((long) 'a');
        byte[] byteArray24 = new byte[] {};
        int int25 = inputStream21.read(byteArray24);
        byte[] byteArray27 = inputStream21.readNBytes(10);
        java.io.InputStream inputStream28 = java.io.InputStream.nullInputStream();
        long long30 = inputStream28.skip((long) 'a');
        byte[] byteArray31 = new byte[] {};
        int int32 = inputStream28.read(byteArray31);
        byte[] byteArray34 = inputStream28.readNBytes(10);
        int int35 = inputStream21.read(byteArray34);
        byte[] byteArray37 = inputStream21.readNBytes((int) (byte) 100);
        int int38 = inputStream12.read(byteArray37);
        byte[] byteArray40 = inputStream12.readNBytes((int) (short) 1);
        byte[] byteArray41 = inputStream12.readAllBytes();
        int int42 = inputStream0.read(byteArray41);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(inputStream12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(inputStream21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(inputStream28);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test192() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test192");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        byte[] byteArray6 = inputStream0.readNBytes((int) (short) 10);
        byte[] byteArray8 = inputStream0.readNBytes((int) '#');
        long long10 = inputStream0.skip((long) 0);
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        byte[] byteArray12 = inputStream11.readAllBytes();
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        long long15 = inputStream13.skip((long) 'a');
        byte[] byteArray16 = new byte[] {};
        int int17 = inputStream13.read(byteArray16);
        byte[] byteArray19 = inputStream13.readNBytes(10);
        int int20 = inputStream11.read(byteArray19);
        byte[] byteArray21 = inputStream11.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int24 = inputStream0.readNBytes(byteArray21, (int) (byte) 100, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [100, 100 + 0) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
    }

    @Test
    public void test193() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test193");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        byte[] byteArray6 = inputStream0.readNBytes((int) (short) 10);
        java.lang.Class<?> wildcardClass7 = byteArray6.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(wildcardClass7);
    }

    @Test
    public void test194() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test194");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray10 = inputStream0.readNBytes((int) (byte) 10);
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray14 = new byte[] {};
        int int15 = inputStream11.read(byteArray14);
        byte[] byteArray17 = inputStream11.readNBytes(10);
        long long19 = inputStream11.skip((long) '4');
        byte[] byteArray20 = inputStream11.readAllBytes();
        byte[] byteArray22 = inputStream11.readNBytes(1);
        int int23 = inputStream0.read(byteArray22);
        java.io.InputStream inputStream24 = java.io.InputStream.nullInputStream();
        long long26 = inputStream24.skip((long) 'a');
        byte[] byteArray30 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int31 = inputStream24.read(byteArray30);
        byte[] byteArray32 = inputStream24.readAllBytes();
        java.io.InputStream inputStream33 = java.io.InputStream.nullInputStream();
        long long35 = inputStream33.skip((long) 'a');
        byte[] byteArray36 = new byte[] {};
        int int37 = inputStream33.read(byteArray36);
        int int38 = inputStream24.read(byteArray36);
        long long40 = inputStream24.skip((long) 0);
        byte[] byteArray41 = inputStream24.readAllBytes();
        byte[] byteArray43 = inputStream24.readNBytes((int) (byte) 1);
        int int44 = inputStream0.read(byteArray43);
        byte[] byteArray46 = inputStream0.readNBytes((int) ' ');
        java.lang.Class<?> wildcardClass47 = byteArray46.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(inputStream24);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertNotNull(inputStream33);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + 0 + "'", int44 == 0);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test195() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test195");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        java.io.InputStream inputStream8 = java.io.InputStream.nullInputStream();
        long long10 = inputStream8.skip((long) 'a');
        byte[] byteArray11 = new byte[] {};
        int int12 = inputStream8.read(byteArray11);
        byte[] byteArray14 = inputStream8.readNBytes(10);
        long long16 = inputStream8.skip((long) '4');
        long long18 = inputStream8.skip(1L);
        java.io.InputStream inputStream19 = java.io.InputStream.nullInputStream();
        long long21 = inputStream19.skip((long) 'a');
        byte[] byteArray22 = new byte[] {};
        int int23 = inputStream19.read(byteArray22);
        byte[] byteArray25 = inputStream19.readNBytes(10);
        java.io.InputStream inputStream26 = java.io.InputStream.nullInputStream();
        long long28 = inputStream26.skip((long) 'a');
        byte[] byteArray29 = new byte[] {};
        int int30 = inputStream26.read(byteArray29);
        byte[] byteArray32 = inputStream26.readNBytes(10);
        int int33 = inputStream19.read(byteArray32);
        int int34 = inputStream8.read(byteArray32);
        int int35 = inputStream0.read(byteArray32);
        java.io.InputStream inputStream36 = java.io.InputStream.nullInputStream();
        long long38 = inputStream36.skip((long) 'a');
        byte[] byteArray39 = new byte[] {};
        int int40 = inputStream36.read(byteArray39);
        byte[] byteArray42 = inputStream36.readNBytes(10);
        long long44 = inputStream36.skip((long) '4');
        byte[] byteArray45 = inputStream36.readAllBytes();
        byte[] byteArray47 = inputStream36.readNBytes((int) (short) 100);
        byte[] byteArray48 = inputStream36.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int51 = inputStream0.readNBytes(byteArray48, (int) (byte) 1, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [1, 1 + 0) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(inputStream8);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(inputStream19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(inputStream26);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(inputStream36);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
    }

    @Test
    public void test196() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test196");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray11 = inputStream0.readNBytes((int) (short) 100);
        long long13 = inputStream0.skip(0L);
        java.lang.Class<?> wildcardClass14 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test197() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test197");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray13 = new byte[] {};
        int int14 = inputStream10.read(byteArray13);
        byte[] byteArray16 = inputStream10.readNBytes(10);
        long long18 = inputStream10.skip((long) '4');
        byte[] byteArray19 = inputStream10.readAllBytes();
        java.io.InputStream inputStream20 = java.io.InputStream.nullInputStream();
        long long22 = inputStream20.skip((long) 'a');
        byte[] byteArray26 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int27 = inputStream20.read(byteArray26);
        byte[] byteArray29 = inputStream20.readNBytes((int) (short) 100);
        int int30 = inputStream10.read(byteArray29);
        int int31 = inputStream0.read(byteArray29);
        byte[] byteArray33 = inputStream0.readNBytes((int) (short) 1);
        byte[] byteArray34 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int37 = inputStream0.read(byteArray34, (int) (byte) -1, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(inputStream20);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
    }

    @Test
    public void test198() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test198");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        long long16 = inputStream0.skip((long) 0);
        long long18 = inputStream0.skip(0L);
        java.lang.Class<?> wildcardClass19 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test199() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test199");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray10 = inputStream0.readNBytes((int) (byte) 10);
        byte[] byteArray12 = inputStream0.readNBytes((int) (byte) 1);
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long14 = inputStream0.transferTo(outputStream13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
    }

    @Test
    public void test200() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test200");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        java.io.InputStream inputStream1 = java.io.InputStream.nullInputStream();
        byte[] byteArray2 = inputStream1.readAllBytes();
        java.io.InputStream inputStream3 = java.io.InputStream.nullInputStream();
        long long5 = inputStream3.skip((long) 'a');
        byte[] byteArray6 = new byte[] {};
        int int7 = inputStream3.read(byteArray6);
        byte[] byteArray9 = inputStream3.readNBytes(10);
        int int10 = inputStream1.read(byteArray9);
        byte[] byteArray11 = inputStream1.readAllBytes();
        int int12 = inputStream0.read(byteArray11);
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        long long15 = inputStream13.skip((long) 'a');
        byte[] byteArray19 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int20 = inputStream13.read(byteArray19);
        byte[] byteArray22 = inputStream13.readNBytes((int) (short) 100);
        byte[] byteArray23 = inputStream13.readAllBytes();
        int int24 = inputStream0.read(byteArray23);
        java.io.InputStream inputStream25 = java.io.InputStream.nullInputStream();
        long long27 = inputStream25.skip((long) 'a');
        byte[] byteArray28 = new byte[] {};
        int int29 = inputStream25.read(byteArray28);
        byte[] byteArray31 = inputStream25.readNBytes(10);
        long long33 = inputStream25.skip((long) '4');
        byte[] byteArray34 = inputStream25.readAllBytes();
        java.io.InputStream inputStream35 = java.io.InputStream.nullInputStream();
        long long37 = inputStream35.skip((long) 'a');
        byte[] byteArray41 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int42 = inputStream35.read(byteArray41);
        byte[] byteArray44 = inputStream35.readNBytes((int) (short) 100);
        int int45 = inputStream25.read(byteArray44);
        int int46 = inputStream0.read(byteArray44);
        java.io.InputStream inputStream47 = java.io.InputStream.nullInputStream();
        long long49 = inputStream47.skip((long) 'a');
        byte[] byteArray50 = new byte[] {};
        int int51 = inputStream47.read(byteArray50);
        byte[] byteArray53 = inputStream47.readNBytes(10);
        long long55 = inputStream47.skip((long) '4');
        byte[] byteArray56 = inputStream47.readAllBytes();
        java.io.InputStream inputStream57 = java.io.InputStream.nullInputStream();
        long long59 = inputStream57.skip((long) 'a');
        byte[] byteArray60 = new byte[] {};
        int int61 = inputStream57.read(byteArray60);
        byte[] byteArray63 = inputStream57.readNBytes(10);
        long long65 = inputStream57.skip((long) '4');
        byte[] byteArray66 = inputStream57.readAllBytes();
        java.io.InputStream inputStream67 = java.io.InputStream.nullInputStream();
        long long69 = inputStream67.skip((long) 'a');
        byte[] byteArray73 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int74 = inputStream67.read(byteArray73);
        byte[] byteArray76 = inputStream67.readNBytes((int) (short) 100);
        int int77 = inputStream57.read(byteArray76);
        int int78 = inputStream47.read(byteArray76);
        // The following exception was thrown during execution in test generation
        try {
            int int81 = inputStream0.readNBytes(byteArray76, 100, 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [100, 100 + 1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(inputStream1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[]");
        org.junit.Assert.assertNotNull(inputStream3);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(inputStream25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(inputStream35);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(inputStream47);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[]");
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(inputStream57);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[]");
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[]");
        org.junit.Assert.assertNotNull(inputStream67);
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 0L + "'", long69 == 0L);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + (-1) + "'", int74 == (-1));
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
    }

    @Test
    public void test201() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test201");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        byte[] byteArray5 = inputStream0.readAllBytes();
        java.io.InputStream inputStream6 = java.io.InputStream.nullInputStream();
        byte[] byteArray7 = inputStream6.readAllBytes();
        java.io.InputStream inputStream8 = java.io.InputStream.nullInputStream();
        long long10 = inputStream8.skip((long) 'a');
        byte[] byteArray11 = new byte[] {};
        int int12 = inputStream8.read(byteArray11);
        byte[] byteArray14 = inputStream8.readNBytes(10);
        int int15 = inputStream6.read(byteArray14);
        byte[] byteArray17 = inputStream6.readNBytes((int) 'a');
        byte[] byteArray18 = inputStream6.readAllBytes();
        java.io.InputStream inputStream19 = java.io.InputStream.nullInputStream();
        long long21 = inputStream19.skip((long) 'a');
        byte[] byteArray22 = new byte[] {};
        int int23 = inputStream19.read(byteArray22);
        byte[] byteArray25 = inputStream19.readNBytes(10);
        long long27 = inputStream19.skip((long) '4');
        long long29 = inputStream19.skip(1L);
        java.io.InputStream inputStream30 = java.io.InputStream.nullInputStream();
        long long32 = inputStream30.skip((long) 'a');
        byte[] byteArray36 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int37 = inputStream30.read(byteArray36);
        byte[] byteArray38 = inputStream30.readAllBytes();
        byte[] byteArray39 = inputStream30.readAllBytes();
        java.io.InputStream inputStream40 = java.io.InputStream.nullInputStream();
        long long42 = inputStream40.skip((long) 'a');
        byte[] byteArray46 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int47 = inputStream40.read(byteArray46);
        byte[] byteArray48 = inputStream40.readAllBytes();
        java.io.InputStream inputStream49 = java.io.InputStream.nullInputStream();
        long long51 = inputStream49.skip((long) 'a');
        byte[] byteArray52 = new byte[] {};
        int int53 = inputStream49.read(byteArray52);
        int int54 = inputStream40.read(byteArray52);
        byte[] byteArray56 = inputStream40.readNBytes((int) (byte) 0);
        int int59 = inputStream30.read(byteArray56, 0, 0);
        int int60 = inputStream19.read(byteArray56);
        int int61 = inputStream6.read(byteArray56);
        // The following exception was thrown during execution in test generation
        try {
            int int64 = inputStream0.readNBytes(byteArray56, (int) 'a', 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [97, 97 + 0) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertNotNull(inputStream6);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[]");
        org.junit.Assert.assertNotNull(inputStream8);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(inputStream19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(inputStream30);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + (-1) + "'", int37 == (-1));
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertNotNull(inputStream40);
        org.junit.Assert.assertTrue("'" + long42 + "' != '" + 0L + "'", long42 == 0L);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + (-1) + "'", int47 == (-1));
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(inputStream49);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
    }

    @Test
    public void test202() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test202");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray4 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream5 = java.io.InputStream.nullInputStream();
        long long7 = inputStream5.skip((long) 'a');
        byte[] byteArray8 = new byte[] {};
        int int9 = inputStream5.read(byteArray8);
        byte[] byteArray11 = inputStream5.readNBytes(10);
        long long13 = inputStream5.skip((long) '4');
        long long15 = inputStream5.skip(1L);
        java.io.InputStream inputStream16 = java.io.InputStream.nullInputStream();
        long long18 = inputStream16.skip((long) 'a');
        byte[] byteArray22 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int23 = inputStream16.read(byteArray22);
        byte[] byteArray24 = inputStream16.readAllBytes();
        byte[] byteArray25 = inputStream16.readAllBytes();
        java.io.InputStream inputStream26 = java.io.InputStream.nullInputStream();
        long long28 = inputStream26.skip((long) 'a');
        byte[] byteArray32 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int33 = inputStream26.read(byteArray32);
        byte[] byteArray34 = inputStream26.readAllBytes();
        java.io.InputStream inputStream35 = java.io.InputStream.nullInputStream();
        long long37 = inputStream35.skip((long) 'a');
        byte[] byteArray38 = new byte[] {};
        int int39 = inputStream35.read(byteArray38);
        int int40 = inputStream26.read(byteArray38);
        byte[] byteArray42 = inputStream26.readNBytes((int) (byte) 0);
        int int45 = inputStream16.read(byteArray42, 0, 0);
        int int46 = inputStream5.read(byteArray42);
        int int47 = inputStream0.read(byteArray42);
        java.io.InputStream inputStream48 = java.io.InputStream.nullInputStream();
        long long50 = inputStream48.skip((long) 'a');
        byte[] byteArray51 = new byte[] {};
        int int52 = inputStream48.read(byteArray51);
        byte[] byteArray54 = inputStream48.readNBytes(10);
        java.io.InputStream inputStream55 = java.io.InputStream.nullInputStream();
        long long57 = inputStream55.skip((long) 'a');
        byte[] byteArray58 = new byte[] {};
        int int59 = inputStream55.read(byteArray58);
        byte[] byteArray61 = inputStream55.readNBytes(10);
        int int62 = inputStream48.read(byteArray61);
        // The following exception was thrown during execution in test generation
        try {
            int int65 = inputStream0.readNBytes(byteArray61, (int) (byte) -1, (int) (byte) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [-1, -1 + 1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[]");
        org.junit.Assert.assertNotNull(inputStream5);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(inputStream16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(inputStream26);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(inputStream35);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(inputStream48);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertNotNull(inputStream55);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
    }

    @Test
    public void test203() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test203");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        byte[] byteArray1 = inputStream0.readAllBytes();
        java.io.InputStream inputStream2 = java.io.InputStream.nullInputStream();
        long long4 = inputStream2.skip((long) 'a');
        byte[] byteArray5 = new byte[] {};
        int int6 = inputStream2.read(byteArray5);
        byte[] byteArray8 = inputStream2.readNBytes(10);
        int int9 = inputStream0.read(byteArray8);
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int17 = inputStream10.read(byteArray16);
        byte[] byteArray18 = inputStream10.readAllBytes();
        java.io.InputStream inputStream19 = java.io.InputStream.nullInputStream();
        long long21 = inputStream19.skip((long) 'a');
        byte[] byteArray25 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int26 = inputStream19.read(byteArray25);
        byte[] byteArray27 = inputStream19.readAllBytes();
        java.io.InputStream inputStream28 = java.io.InputStream.nullInputStream();
        long long30 = inputStream28.skip((long) 'a');
        byte[] byteArray31 = new byte[] {};
        int int32 = inputStream28.read(byteArray31);
        int int33 = inputStream19.read(byteArray31);
        int int36 = inputStream10.read(byteArray31, 0, 0);
        int int37 = inputStream0.read(byteArray31);
        java.io.InputStream inputStream38 = java.io.InputStream.nullInputStream();
        long long40 = inputStream38.skip((long) 'a');
        byte[] byteArray41 = new byte[] {};
        int int42 = inputStream38.read(byteArray41);
        byte[] byteArray44 = inputStream38.readNBytes(10);
        byte[] byteArray48 = new byte[] { (byte) 1, (byte) 10, (byte) 1 };
        int int49 = inputStream38.read(byteArray48);
        byte[] byteArray51 = inputStream38.readNBytes((int) (byte) 1);
        int int52 = inputStream0.read(byteArray51);
        long long54 = inputStream0.skip((long) (-1));
        byte[] byteArray55 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int58 = inputStream0.readNBytes(byteArray55, (int) '4', (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(inputStream2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(inputStream19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(inputStream28);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(inputStream38);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[1, 10, 1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
    }

    @Test
    public void test204() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test204");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray10 = inputStream0.readNBytes(100);
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int18 = inputStream11.read(byteArray17);
        byte[] byteArray19 = inputStream11.readAllBytes();
        byte[] byteArray20 = inputStream11.readAllBytes();
        byte[] byteArray21 = inputStream11.readAllBytes();
        java.io.InputStream inputStream22 = java.io.InputStream.nullInputStream();
        long long24 = inputStream22.skip((long) 'a');
        byte[] byteArray28 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int29 = inputStream22.read(byteArray28);
        byte[] byteArray30 = inputStream22.readAllBytes();
        byte[] byteArray31 = inputStream22.readAllBytes();
        byte[] byteArray32 = new byte[] {};
        int int33 = inputStream22.read(byteArray32);
        byte[] byteArray35 = inputStream22.readNBytes((int) (short) 100);
        int int36 = inputStream11.read(byteArray35);
        // The following exception was thrown during execution in test generation
        try {
            int int39 = inputStream0.read(byteArray35, (int) (byte) 0, (int) (short) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [0, 0 + -1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(inputStream22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
    }

    @Test
    public void test205() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test205");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        byte[] byteArray1 = inputStream0.readAllBytes();
        byte[] byteArray3 = inputStream0.readNBytes(10);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
    }

    @Test
    public void test206() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test206");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        long long9 = inputStream0.skip(1L);
        byte[] byteArray10 = inputStream0.readAllBytes();
        java.io.OutputStream outputStream11 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long12 = inputStream0.transferTo(outputStream11);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
    }

    @Test
    public void test207() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test207");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        byte[] byteArray1 = inputStream0.readAllBytes();
        java.io.InputStream inputStream2 = java.io.InputStream.nullInputStream();
        long long4 = inputStream2.skip((long) 'a');
        byte[] byteArray5 = new byte[] {};
        int int6 = inputStream2.read(byteArray5);
        byte[] byteArray8 = inputStream2.readNBytes(10);
        int int9 = inputStream0.read(byteArray8);
        byte[] byteArray11 = inputStream0.readNBytes((int) 'a');
        byte[] byteArray12 = inputStream0.readAllBytes();
        byte[] byteArray14 = inputStream0.readNBytes((int) (short) 1);
        java.io.InputStream inputStream15 = java.io.InputStream.nullInputStream();
        long long17 = inputStream15.skip((long) 'a');
        byte[] byteArray18 = new byte[] {};
        int int19 = inputStream15.read(byteArray18);
        // The following exception was thrown during execution in test generation
        try {
            int int22 = inputStream0.readNBytes(byteArray18, (int) (byte) -1, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [-1, -1 + 10) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(inputStream2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertNotNull(inputStream15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
    }

    @Test
    public void test208() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test208");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray10 = inputStream0.readNBytes((int) (byte) 10);
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray14 = new byte[] {};
        int int15 = inputStream11.read(byteArray14);
        byte[] byteArray17 = inputStream11.readNBytes(10);
        long long19 = inputStream11.skip((long) '4');
        byte[] byteArray20 = inputStream11.readAllBytes();
        byte[] byteArray22 = inputStream11.readNBytes(1);
        int int23 = inputStream0.read(byteArray22);
        long long25 = inputStream0.skip((long) 1);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
    }

    @Test
    public void test209() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test209");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) 1 };
        int int11 = inputStream0.read(byteArray10);
        byte[] byteArray13 = inputStream0.readNBytes((int) (byte) 1);
        java.io.InputStream inputStream14 = java.io.InputStream.nullInputStream();
        byte[] byteArray15 = inputStream14.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int18 = inputStream0.readNBytes(byteArray15, (int) (byte) 10, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [10, 10 + 10) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, 1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(inputStream14);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
    }

    @Test
    public void test210() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test210");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray9 = inputStream0.readNBytes((int) (short) 100);
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        byte[] byteArray11 = inputStream10.readAllBytes();
        java.io.InputStream inputStream12 = java.io.InputStream.nullInputStream();
        long long14 = inputStream12.skip((long) 'a');
        byte[] byteArray15 = new byte[] {};
        int int16 = inputStream12.read(byteArray15);
        byte[] byteArray18 = inputStream12.readNBytes(10);
        int int19 = inputStream10.read(byteArray18);
        byte[] byteArray20 = inputStream10.readAllBytes();
        int int21 = inputStream0.read(byteArray20);
        java.io.InputStream inputStream22 = java.io.InputStream.nullInputStream();
        long long24 = inputStream22.skip((long) 'a');
        byte[] byteArray28 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int29 = inputStream22.read(byteArray28);
        int int30 = inputStream0.read(byteArray28);
        long long32 = inputStream0.skip((long) 'a');
        byte[] byteArray34 = inputStream0.readNBytes((int) (byte) 1);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(inputStream12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(inputStream22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
    }

    @Test
    public void test211() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test211");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        java.io.InputStream inputStream5 = java.io.InputStream.nullInputStream();
        long long7 = inputStream5.skip((long) 'a');
        byte[] byteArray8 = new byte[] {};
        int int9 = inputStream5.read(byteArray8);
        byte[] byteArray11 = inputStream5.readNBytes(10);
        long long13 = inputStream5.skip((long) '4');
        byte[] byteArray14 = inputStream5.readAllBytes();
        byte[] byteArray16 = inputStream5.readNBytes(1);
        java.io.InputStream inputStream17 = java.io.InputStream.nullInputStream();
        long long19 = inputStream17.skip((long) 'a');
        byte[] byteArray20 = new byte[] {};
        int int21 = inputStream17.read(byteArray20);
        byte[] byteArray23 = inputStream17.readNBytes(10);
        long long25 = inputStream17.skip((long) '4');
        byte[] byteArray27 = inputStream17.readNBytes((int) (byte) 10);
        int int28 = inputStream5.read(byteArray27);
        java.io.InputStream inputStream29 = java.io.InputStream.nullInputStream();
        long long31 = inputStream29.skip((long) 'a');
        byte[] byteArray32 = new byte[] {};
        int int33 = inputStream29.read(byteArray32);
        byte[] byteArray35 = inputStream29.readNBytes(10);
        long long37 = inputStream29.skip((long) '4');
        byte[] byteArray38 = inputStream29.readAllBytes();
        int int39 = inputStream5.read(byteArray38);
        int int40 = inputStream0.read(byteArray38);
        byte[] byteArray42 = inputStream0.readNBytes(0);
        java.io.InputStream inputStream43 = java.io.InputStream.nullInputStream();
        long long45 = inputStream43.skip((long) 'a');
        byte[] byteArray46 = new byte[] {};
        int int47 = inputStream43.read(byteArray46);
        byte[] byteArray49 = inputStream43.readNBytes(10);
        long long51 = inputStream43.skip((long) '4');
        long long53 = inputStream43.skip(1L);
        java.io.InputStream inputStream54 = java.io.InputStream.nullInputStream();
        long long56 = inputStream54.skip((long) 'a');
        byte[] byteArray57 = new byte[] {};
        int int58 = inputStream54.read(byteArray57);
        byte[] byteArray60 = inputStream54.readNBytes(10);
        java.io.InputStream inputStream61 = java.io.InputStream.nullInputStream();
        long long63 = inputStream61.skip((long) 'a');
        byte[] byteArray64 = new byte[] {};
        int int65 = inputStream61.read(byteArray64);
        byte[] byteArray67 = inputStream61.readNBytes(10);
        int int68 = inputStream54.read(byteArray67);
        int int69 = inputStream43.read(byteArray67);
        int int70 = inputStream0.read(byteArray67);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(inputStream5);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(inputStream17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(inputStream29);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
        org.junit.Assert.assertNotNull(inputStream43);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertNotNull(inputStream54);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[]");
        org.junit.Assert.assertNotNull(inputStream61);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
    }

    @Test
    public void test212() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test212");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = inputStream0.readAllBytes();
        byte[] byteArray12 = inputStream0.readNBytes((int) (byte) 10);
        long long14 = inputStream0.skip((long) '4');
        byte[] byteArray15 = inputStream0.readAllBytes();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
    }

    @Test
    public void test213() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test213");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = inputStream0.readAllBytes();
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int18 = inputStream11.read(byteArray17);
        byte[] byteArray19 = inputStream11.readAllBytes();
        byte[] byteArray20 = inputStream11.readAllBytes();
        byte[] byteArray21 = new byte[] {};
        int int22 = inputStream11.read(byteArray21);
        byte[] byteArray24 = inputStream11.readNBytes((int) (short) 100);
        int int25 = inputStream0.read(byteArray24);
        long long27 = inputStream0.skip((long) (byte) 100);
        java.lang.Class<?> wildcardClass28 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test214() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test214");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        long long10 = inputStream0.skip(1L);
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int18 = inputStream11.read(byteArray17);
        byte[] byteArray19 = inputStream11.readAllBytes();
        byte[] byteArray20 = inputStream11.readAllBytes();
        java.io.InputStream inputStream21 = java.io.InputStream.nullInputStream();
        long long23 = inputStream21.skip((long) 'a');
        byte[] byteArray27 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int28 = inputStream21.read(byteArray27);
        byte[] byteArray29 = inputStream21.readAllBytes();
        java.io.InputStream inputStream30 = java.io.InputStream.nullInputStream();
        long long32 = inputStream30.skip((long) 'a');
        byte[] byteArray33 = new byte[] {};
        int int34 = inputStream30.read(byteArray33);
        int int35 = inputStream21.read(byteArray33);
        byte[] byteArray37 = inputStream21.readNBytes((int) (byte) 0);
        int int40 = inputStream11.read(byteArray37, 0, 0);
        int int41 = inputStream0.read(byteArray37);
        java.lang.Class<?> wildcardClass42 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(inputStream21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(inputStream30);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(wildcardClass42);
    }

    @Test
    public void test215() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test215");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray11 = inputStream0.readNBytes((int) (short) 100);
        long long13 = inputStream0.skip((long) 'a');
        java.lang.Class<?> wildcardClass14 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test216() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test216");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream7.read(byteArray10);
        byte[] byteArray13 = inputStream7.readNBytes(10);
        int int14 = inputStream0.read(byteArray13);
        byte[] byteArray16 = inputStream0.readNBytes((int) (byte) 100);
        long long18 = inputStream0.skip((long) (-1));
        java.io.InputStream inputStream19 = java.io.InputStream.nullInputStream();
        long long21 = inputStream19.skip((long) 'a');
        byte[] byteArray25 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int26 = inputStream19.read(byteArray25);
        byte[] byteArray27 = inputStream19.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int30 = inputStream0.read(byteArray27, (int) (short) 10, 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [10, 10 + 0) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(inputStream19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
    }

    @Test
    public void test217() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test217");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray4 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream5 = java.io.InputStream.nullInputStream();
        long long7 = inputStream5.skip((long) 'a');
        byte[] byteArray8 = new byte[] {};
        int int9 = inputStream5.read(byteArray8);
        byte[] byteArray11 = inputStream5.readNBytes(10);
        long long13 = inputStream5.skip((long) '4');
        long long15 = inputStream5.skip(1L);
        java.io.InputStream inputStream16 = java.io.InputStream.nullInputStream();
        long long18 = inputStream16.skip((long) 'a');
        byte[] byteArray22 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int23 = inputStream16.read(byteArray22);
        byte[] byteArray24 = inputStream16.readAllBytes();
        byte[] byteArray25 = inputStream16.readAllBytes();
        java.io.InputStream inputStream26 = java.io.InputStream.nullInputStream();
        long long28 = inputStream26.skip((long) 'a');
        byte[] byteArray32 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int33 = inputStream26.read(byteArray32);
        byte[] byteArray34 = inputStream26.readAllBytes();
        java.io.InputStream inputStream35 = java.io.InputStream.nullInputStream();
        long long37 = inputStream35.skip((long) 'a');
        byte[] byteArray38 = new byte[] {};
        int int39 = inputStream35.read(byteArray38);
        int int40 = inputStream26.read(byteArray38);
        byte[] byteArray42 = inputStream26.readNBytes((int) (byte) 0);
        int int45 = inputStream16.read(byteArray42, 0, 0);
        int int46 = inputStream5.read(byteArray42);
        int int47 = inputStream0.read(byteArray42);
        byte[] byteArray49 = inputStream0.readNBytes((int) (short) 0);
        byte[] byteArray50 = inputStream0.readAllBytes();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[]");
        org.junit.Assert.assertNotNull(inputStream5);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(inputStream16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(inputStream26);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(inputStream35);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
    }

    @Test
    public void test218() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test218");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray11 = inputStream0.readNBytes(1);
        java.io.InputStream inputStream12 = java.io.InputStream.nullInputStream();
        long long14 = inputStream12.skip((long) 'a');
        byte[] byteArray15 = new byte[] {};
        int int16 = inputStream12.read(byteArray15);
        byte[] byteArray18 = inputStream12.readNBytes(10);
        long long20 = inputStream12.skip((long) '4');
        byte[] byteArray22 = inputStream12.readNBytes((int) (byte) 10);
        int int23 = inputStream0.read(byteArray22);
        long long25 = inputStream0.skip((long) 1);
        // The following exception was thrown during execution in test generation
        try {
            byte[] byteArray27 = inputStream0.readNBytes((-1));
            org.junit.Assert.fail("Expected exception of type java.lang.IllegalArgumentException; message: len < 0");
        } catch (java.lang.IllegalArgumentException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(inputStream12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
    }

    @Test
    public void test219() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test219");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        java.io.InputStream inputStream1 = java.io.InputStream.nullInputStream();
        byte[] byteArray2 = inputStream1.readAllBytes();
        java.io.InputStream inputStream3 = java.io.InputStream.nullInputStream();
        long long5 = inputStream3.skip((long) 'a');
        byte[] byteArray6 = new byte[] {};
        int int7 = inputStream3.read(byteArray6);
        byte[] byteArray9 = inputStream3.readNBytes(10);
        int int10 = inputStream1.read(byteArray9);
        byte[] byteArray11 = inputStream1.readAllBytes();
        int int12 = inputStream0.read(byteArray11);
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        long long15 = inputStream13.skip((long) 'a');
        byte[] byteArray16 = new byte[] {};
        int int17 = inputStream13.read(byteArray16);
        byte[] byteArray19 = inputStream13.readNBytes(10);
        byte[] byteArray23 = new byte[] { (byte) 1, (byte) 10, (byte) 1 };
        int int24 = inputStream13.read(byteArray23);
        // The following exception was thrown during execution in test generation
        try {
            int int27 = inputStream0.read(byteArray23, 10, (int) (byte) 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [10, 10 + 100) out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(inputStream1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[]");
        org.junit.Assert.assertNotNull(inputStream3);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[1, 10, 1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
    }

    @Test
    public void test220() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test220");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = inputStream0.readAllBytes();
        byte[] byteArray12 = inputStream0.readNBytes((int) (byte) 10);
        long long14 = inputStream0.skip((long) 1);
        byte[] byteArray15 = inputStream0.readAllBytes();
        java.io.InputStream inputStream16 = java.io.InputStream.nullInputStream();
        long long18 = inputStream16.skip((long) 'a');
        byte[] byteArray22 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int23 = inputStream16.read(byteArray22);
        byte[] byteArray24 = inputStream16.readAllBytes();
        byte[] byteArray25 = inputStream16.readAllBytes();
        byte[] byteArray26 = new byte[] {};
        int int27 = inputStream16.read(byteArray26);
        byte[] byteArray29 = inputStream16.readNBytes((int) (short) 100);
        byte[] byteArray31 = inputStream16.readNBytes(0);
        // The following exception was thrown during execution in test generation
        try {
            int int34 = inputStream0.readNBytes(byteArray31, 0, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [0, 0 + 10) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertNotNull(inputStream16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
    }

    @Test
    public void test221() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test221");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        byte[] byteArray1 = inputStream0.readAllBytes();
        java.io.InputStream inputStream2 = java.io.InputStream.nullInputStream();
        long long4 = inputStream2.skip((long) 'a');
        byte[] byteArray5 = new byte[] {};
        int int6 = inputStream2.read(byteArray5);
        byte[] byteArray8 = inputStream2.readNBytes(10);
        int int9 = inputStream0.read(byteArray8);
        byte[] byteArray10 = inputStream0.readAllBytes();
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int18 = inputStream11.read(byteArray17);
        byte[] byteArray19 = inputStream11.readAllBytes();
        byte[] byteArray20 = inputStream11.readAllBytes();
        byte[] byteArray21 = inputStream11.readAllBytes();
        byte[] byteArray23 = inputStream11.readNBytes((int) (byte) 10);
        int int24 = inputStream0.read(byteArray23);
        java.io.InputStream inputStream25 = java.io.InputStream.nullInputStream();
        long long27 = inputStream25.skip((long) 'a');
        byte[] byteArray31 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int32 = inputStream25.read(byteArray31);
        byte[] byteArray33 = inputStream25.readAllBytes();
        byte[] byteArray34 = inputStream25.readAllBytes();
        byte[] byteArray35 = new byte[] {};
        int int36 = inputStream25.read(byteArray35);
        byte[] byteArray38 = inputStream25.readNBytes((int) (short) 0);
        int int39 = inputStream0.read(byteArray38);
        long long41 = inputStream0.skip((long) '4');
        java.io.OutputStream outputStream42 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long43 = inputStream0.transferTo(outputStream42);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(inputStream2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(inputStream25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
    }

    @Test
    public void test222() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test222");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = inputStream0.readAllBytes();
        byte[] byteArray12 = inputStream0.readNBytes((int) (byte) 10);
        long long14 = inputStream0.skip((long) 1);
        byte[] byteArray15 = inputStream0.readAllBytes();
        long long17 = inputStream0.skip((long) 100);
        java.io.InputStream inputStream18 = java.io.InputStream.nullInputStream();
        long long20 = inputStream18.skip((long) 'a');
        byte[] byteArray21 = new byte[] {};
        int int22 = inputStream18.read(byteArray21);
        byte[] byteArray24 = inputStream18.readNBytes(10);
        java.io.InputStream inputStream25 = java.io.InputStream.nullInputStream();
        long long27 = inputStream25.skip((long) 'a');
        byte[] byteArray28 = new byte[] {};
        int int29 = inputStream25.read(byteArray28);
        byte[] byteArray31 = inputStream25.readNBytes(10);
        int int32 = inputStream18.read(byteArray31);
        byte[] byteArray34 = inputStream18.readNBytes((int) (byte) 100);
        java.io.InputStream inputStream35 = java.io.InputStream.nullInputStream();
        long long37 = inputStream35.skip((long) 'a');
        byte[] byteArray38 = new byte[] {};
        int int39 = inputStream35.read(byteArray38);
        byte[] byteArray41 = inputStream35.readNBytes(10);
        long long43 = inputStream35.skip((long) '4');
        byte[] byteArray44 = inputStream35.readAllBytes();
        java.io.InputStream inputStream45 = java.io.InputStream.nullInputStream();
        long long47 = inputStream45.skip((long) 'a');
        byte[] byteArray48 = new byte[] {};
        int int49 = inputStream45.read(byteArray48);
        byte[] byteArray51 = inputStream45.readNBytes(10);
        long long53 = inputStream45.skip((long) '4');
        byte[] byteArray54 = inputStream45.readAllBytes();
        java.io.InputStream inputStream55 = java.io.InputStream.nullInputStream();
        long long57 = inputStream55.skip((long) 'a');
        byte[] byteArray61 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int62 = inputStream55.read(byteArray61);
        byte[] byteArray64 = inputStream55.readNBytes((int) (short) 100);
        int int65 = inputStream45.read(byteArray64);
        int int66 = inputStream35.read(byteArray64);
        int int67 = inputStream18.read(byteArray64);
        byte[] byteArray68 = inputStream18.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int71 = inputStream0.readNBytes(byteArray68, (int) (short) 1, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [1, 1 + 1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(inputStream18);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(inputStream25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(inputStream35);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(inputStream45);
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertNotNull(inputStream55);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + (-1) + "'", int62 == (-1));
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[]");
    }

    @Test
    public void test223() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test223");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream0.read(byteArray10);
        byte[] byteArray13 = inputStream0.readNBytes((int) (short) 100);
        byte[] byteArray15 = inputStream0.readNBytes(0);
        byte[] byteArray17 = inputStream0.readNBytes((int) ' ');
        byte[] byteArray19 = inputStream0.readNBytes(0);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
    }

    @Test
    public void test224() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test224");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray10 = inputStream0.readNBytes((int) (byte) 10);
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray14 = new byte[] {};
        int int15 = inputStream11.read(byteArray14);
        byte[] byteArray17 = inputStream11.readNBytes(10);
        long long19 = inputStream11.skip((long) '4');
        byte[] byteArray20 = inputStream11.readAllBytes();
        byte[] byteArray22 = inputStream11.readNBytes(1);
        int int23 = inputStream0.read(byteArray22);
        byte[] byteArray25 = inputStream0.readNBytes((int) ' ');
        java.io.InputStream inputStream26 = java.io.InputStream.nullInputStream();
        byte[] byteArray27 = inputStream26.readAllBytes();
        java.io.InputStream inputStream28 = java.io.InputStream.nullInputStream();
        long long30 = inputStream28.skip((long) 'a');
        byte[] byteArray31 = new byte[] {};
        int int32 = inputStream28.read(byteArray31);
        byte[] byteArray34 = inputStream28.readNBytes(10);
        int int35 = inputStream26.read(byteArray34);
        int int36 = inputStream0.read(byteArray34);
        java.io.InputStream inputStream37 = java.io.InputStream.nullInputStream();
        long long39 = inputStream37.skip((long) 'a');
        byte[] byteArray40 = new byte[] {};
        int int41 = inputStream37.read(byteArray40);
        byte[] byteArray43 = inputStream37.readNBytes(10);
        long long45 = inputStream37.skip((long) '4');
        byte[] byteArray46 = inputStream37.readAllBytes();
        byte[] byteArray48 = inputStream37.readNBytes(1);
        java.io.InputStream inputStream49 = java.io.InputStream.nullInputStream();
        long long51 = inputStream49.skip((long) 'a');
        byte[] byteArray52 = new byte[] {};
        int int53 = inputStream49.read(byteArray52);
        byte[] byteArray55 = inputStream49.readNBytes(10);
        long long57 = inputStream49.skip((long) '4');
        byte[] byteArray59 = inputStream49.readNBytes((int) (byte) 10);
        int int60 = inputStream37.read(byteArray59);
        java.io.InputStream inputStream61 = java.io.InputStream.nullInputStream();
        long long63 = inputStream61.skip((long) 'a');
        byte[] byteArray64 = new byte[] {};
        int int65 = inputStream61.read(byteArray64);
        byte[] byteArray67 = inputStream61.readNBytes(10);
        long long69 = inputStream61.skip((long) '4');
        byte[] byteArray70 = inputStream61.readAllBytes();
        int int71 = inputStream37.read(byteArray70);
        java.io.InputStream inputStream72 = java.io.InputStream.nullInputStream();
        long long74 = inputStream72.skip((long) 'a');
        byte[] byteArray75 = new byte[] {};
        int int76 = inputStream72.read(byteArray75);
        byte[] byteArray78 = inputStream72.readNBytes(10);
        long long80 = inputStream72.skip((long) '4');
        byte[] byteArray82 = inputStream72.readNBytes(100);
        int int83 = inputStream37.read(byteArray82);
        // The following exception was thrown during execution in test generation
        try {
            int int86 = inputStream0.readNBytes(byteArray82, (int) (byte) 1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [1, 1 + 32) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(inputStream26);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(inputStream28);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(inputStream37);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[]");
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(inputStream49);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[]");
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(inputStream61);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertTrue("'" + long69 + "' != '" + 0L + "'", long69 == 0L);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertNotNull(inputStream72);
        org.junit.Assert.assertTrue("'" + long74 + "' != '" + 0L + "'", long74 == 0L);
        org.junit.Assert.assertNotNull(byteArray75);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray75), "[]");
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[]");
        org.junit.Assert.assertTrue("'" + long80 + "' != '" + 0L + "'", long80 == 0L);
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }

    @Test
    public void test225() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test225");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        byte[] byteArray1 = inputStream0.readAllBytes();
        java.io.InputStream inputStream2 = java.io.InputStream.nullInputStream();
        long long4 = inputStream2.skip((long) 'a');
        byte[] byteArray5 = new byte[] {};
        int int6 = inputStream2.read(byteArray5);
        byte[] byteArray8 = inputStream2.readNBytes(10);
        int int9 = inputStream0.read(byteArray8);
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int17 = inputStream10.read(byteArray16);
        byte[] byteArray18 = inputStream10.readAllBytes();
        java.io.InputStream inputStream19 = java.io.InputStream.nullInputStream();
        long long21 = inputStream19.skip((long) 'a');
        byte[] byteArray25 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int26 = inputStream19.read(byteArray25);
        byte[] byteArray27 = inputStream19.readAllBytes();
        java.io.InputStream inputStream28 = java.io.InputStream.nullInputStream();
        long long30 = inputStream28.skip((long) 'a');
        byte[] byteArray31 = new byte[] {};
        int int32 = inputStream28.read(byteArray31);
        int int33 = inputStream19.read(byteArray31);
        int int36 = inputStream10.read(byteArray31, 0, 0);
        int int37 = inputStream0.read(byteArray31);
        java.io.InputStream inputStream38 = java.io.InputStream.nullInputStream();
        long long40 = inputStream38.skip((long) 'a');
        byte[] byteArray41 = new byte[] {};
        int int42 = inputStream38.read(byteArray41);
        byte[] byteArray44 = inputStream38.readNBytes(10);
        byte[] byteArray48 = new byte[] { (byte) 1, (byte) 10, (byte) 1 };
        int int49 = inputStream38.read(byteArray48);
        byte[] byteArray51 = inputStream38.readNBytes((int) (byte) 1);
        int int52 = inputStream0.read(byteArray51);
        java.io.InputStream inputStream53 = java.io.InputStream.nullInputStream();
        long long55 = inputStream53.skip((long) 'a');
        byte[] byteArray56 = new byte[] {};
        int int57 = inputStream53.read(byteArray56);
        byte[] byteArray59 = inputStream53.readNBytes(10);
        long long61 = inputStream53.skip((long) '4');
        byte[] byteArray62 = inputStream53.readAllBytes();
        java.io.InputStream inputStream63 = java.io.InputStream.nullInputStream();
        long long65 = inputStream63.skip((long) 'a');
        byte[] byteArray66 = new byte[] {};
        int int67 = inputStream63.read(byteArray66);
        byte[] byteArray69 = inputStream63.readNBytes(10);
        long long71 = inputStream63.skip((long) '4');
        byte[] byteArray72 = inputStream63.readAllBytes();
        java.io.InputStream inputStream73 = java.io.InputStream.nullInputStream();
        long long75 = inputStream73.skip((long) 'a');
        byte[] byteArray79 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int80 = inputStream73.read(byteArray79);
        byte[] byteArray82 = inputStream73.readNBytes((int) (short) 100);
        int int83 = inputStream63.read(byteArray82);
        int int84 = inputStream53.read(byteArray82);
        byte[] byteArray85 = inputStream53.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int88 = inputStream0.readNBytes(byteArray85, (int) (byte) 10, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [10, 10 + 32) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(inputStream2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(inputStream19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + (-1) + "'", int26 == (-1));
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(inputStream28);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(inputStream38);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[1, 10, 1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(inputStream53);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(inputStream63);
        org.junit.Assert.assertTrue("'" + long65 + "' != '" + 0L + "'", long65 == 0L);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[]");
        org.junit.Assert.assertTrue("'" + long71 + "' != '" + 0L + "'", long71 == 0L);
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
        org.junit.Assert.assertNotNull(inputStream73);
        org.junit.Assert.assertTrue("'" + long75 + "' != '" + 0L + "'", long75 == 0L);
        org.junit.Assert.assertNotNull(byteArray79);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray79), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + (-1) + "'", int80 == (-1));
        org.junit.Assert.assertNotNull(byteArray82);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray82), "[]");
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
        org.junit.Assert.assertTrue("'" + int84 + "' != '" + 0 + "'", int84 == 0);
        org.junit.Assert.assertNotNull(byteArray85);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray85), "[]");
    }

    @Test
    public void test226() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test226");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray9 = inputStream0.readNBytes((int) (short) 100);
        long long11 = inputStream0.skip((long) (short) 10);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
    }

    @Test
    public void test227() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test227");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream7.read(byteArray10);
        byte[] byteArray13 = inputStream7.readNBytes(10);
        int int14 = inputStream0.read(byteArray13);
        byte[] byteArray16 = inputStream0.readNBytes((int) (byte) 100);
        long long18 = inputStream0.skip((long) (-1));
        java.io.InputStream inputStream19 = java.io.InputStream.nullInputStream();
        long long21 = inputStream19.skip((long) 'a');
        byte[] byteArray22 = new byte[] {};
        int int23 = inputStream19.read(byteArray22);
        byte[] byteArray25 = inputStream19.readNBytes(10);
        long long27 = inputStream19.skip((long) '4');
        byte[] byteArray28 = inputStream19.readAllBytes();
        byte[] byteArray30 = inputStream19.readNBytes((int) (short) 100);
        byte[] byteArray31 = inputStream19.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int34 = inputStream0.read(byteArray31, (int) (short) 100, (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [100, 100 + 10) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(inputStream19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
    }

    @Test
    public void test228() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test228");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream7.read(byteArray10);
        byte[] byteArray13 = inputStream7.readNBytes(10);
        int int14 = inputStream0.read(byteArray13);
        byte[] byteArray15 = inputStream0.readAllBytes();
        java.lang.Class<?> wildcardClass16 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test229() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test229");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        long long16 = inputStream0.skip((long) 0);
        byte[] byteArray17 = inputStream0.readAllBytes();
        long long19 = inputStream0.skip((long) 1);
        java.io.OutputStream outputStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long21 = inputStream0.transferTo(outputStream20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
    }

    @Test
    public void test230() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test230");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        long long16 = inputStream0.skip((long) 0);
        byte[] byteArray17 = inputStream0.readAllBytes();
        byte[] byteArray19 = inputStream0.readNBytes((int) (byte) 1);
        byte[] byteArray20 = inputStream0.readAllBytes();
        byte[] byteArray22 = inputStream0.readNBytes((int) (byte) 1);
        java.io.InputStream inputStream23 = java.io.InputStream.nullInputStream();
        byte[] byteArray24 = inputStream23.readAllBytes();
        java.io.InputStream inputStream25 = java.io.InputStream.nullInputStream();
        long long27 = inputStream25.skip((long) 'a');
        byte[] byteArray28 = new byte[] {};
        int int29 = inputStream25.read(byteArray28);
        byte[] byteArray31 = inputStream25.readNBytes(10);
        int int32 = inputStream23.read(byteArray31);
        java.io.InputStream inputStream33 = java.io.InputStream.nullInputStream();
        long long35 = inputStream33.skip((long) 'a');
        byte[] byteArray39 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int40 = inputStream33.read(byteArray39);
        byte[] byteArray41 = inputStream33.readAllBytes();
        java.io.InputStream inputStream42 = java.io.InputStream.nullInputStream();
        long long44 = inputStream42.skip((long) 'a');
        byte[] byteArray48 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int49 = inputStream42.read(byteArray48);
        byte[] byteArray50 = inputStream42.readAllBytes();
        java.io.InputStream inputStream51 = java.io.InputStream.nullInputStream();
        long long53 = inputStream51.skip((long) 'a');
        byte[] byteArray54 = new byte[] {};
        int int55 = inputStream51.read(byteArray54);
        int int56 = inputStream42.read(byteArray54);
        int int59 = inputStream33.read(byteArray54, 0, 0);
        int int60 = inputStream23.read(byteArray54);
        java.io.InputStream inputStream61 = java.io.InputStream.nullInputStream();
        long long63 = inputStream61.skip((long) 'a');
        byte[] byteArray64 = new byte[] {};
        int int65 = inputStream61.read(byteArray64);
        byte[] byteArray67 = inputStream61.readNBytes(10);
        byte[] byteArray71 = new byte[] { (byte) 1, (byte) 10, (byte) 1 };
        int int72 = inputStream61.read(byteArray71);
        byte[] byteArray74 = inputStream61.readNBytes((int) (byte) 1);
        int int75 = inputStream23.read(byteArray74);
        // The following exception was thrown during execution in test generation
        try {
            int int78 = inputStream0.readNBytes(byteArray74, (int) '4', (int) (byte) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [52, 52 + 10) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertNotNull(inputStream23);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(inputStream25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(inputStream33);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(inputStream42);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(inputStream51);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertNotNull(inputStream61);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[1, 10, 1]");
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + (-1) + "'", int72 == (-1));
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
    }

    @Test
    public void test231() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test231");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) 1 };
        int int11 = inputStream0.read(byteArray10);
        java.io.InputStream inputStream12 = java.io.InputStream.nullInputStream();
        long long14 = inputStream12.skip((long) 'a');
        long long16 = inputStream12.skip((long) 10);
        byte[] byteArray18 = inputStream12.readNBytes((int) (short) 10);
        byte[] byteArray20 = inputStream12.readNBytes((int) (byte) 0);
        java.io.InputStream inputStream21 = java.io.InputStream.nullInputStream();
        long long23 = inputStream21.skip((long) 'a');
        byte[] byteArray24 = new byte[] {};
        int int25 = inputStream21.read(byteArray24);
        byte[] byteArray27 = inputStream21.readNBytes(10);
        java.io.InputStream inputStream28 = java.io.InputStream.nullInputStream();
        long long30 = inputStream28.skip((long) 'a');
        byte[] byteArray31 = new byte[] {};
        int int32 = inputStream28.read(byteArray31);
        byte[] byteArray34 = inputStream28.readNBytes(10);
        int int35 = inputStream21.read(byteArray34);
        byte[] byteArray37 = inputStream21.readNBytes((int) (byte) 100);
        int int38 = inputStream12.read(byteArray37);
        byte[] byteArray40 = inputStream12.readNBytes((int) (short) 1);
        byte[] byteArray41 = inputStream12.readAllBytes();
        int int42 = inputStream0.read(byteArray41);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, 1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(inputStream12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(inputStream21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(inputStream28);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + 0 + "'", int42 == 0);
    }

    @Test
    public void test232() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test232");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream7.read(byteArray10);
        byte[] byteArray13 = inputStream7.readNBytes(10);
        int int14 = inputStream0.read(byteArray13);
        byte[] byteArray16 = inputStream0.readNBytes((int) (byte) 100);
        long long18 = inputStream0.skip((long) '4');
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
    }

    @Test
    public void test233() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test233");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        java.io.InputStream inputStream1 = java.io.InputStream.nullInputStream();
        byte[] byteArray2 = inputStream1.readAllBytes();
        java.io.InputStream inputStream3 = java.io.InputStream.nullInputStream();
        long long5 = inputStream3.skip((long) 'a');
        byte[] byteArray6 = new byte[] {};
        int int7 = inputStream3.read(byteArray6);
        byte[] byteArray9 = inputStream3.readNBytes(10);
        int int10 = inputStream1.read(byteArray9);
        byte[] byteArray11 = inputStream1.readAllBytes();
        int int12 = inputStream0.read(byteArray11);
        byte[] byteArray14 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream15 = java.io.InputStream.nullInputStream();
        long long17 = inputStream15.skip((long) 'a');
        byte[] byteArray18 = new byte[] {};
        int int19 = inputStream15.read(byteArray18);
        byte[] byteArray21 = inputStream15.readNBytes(10);
        java.io.InputStream inputStream22 = java.io.InputStream.nullInputStream();
        long long24 = inputStream22.skip((long) 'a');
        byte[] byteArray25 = new byte[] {};
        int int26 = inputStream22.read(byteArray25);
        byte[] byteArray28 = inputStream22.readNBytes(10);
        int int29 = inputStream15.read(byteArray28);
        byte[] byteArray31 = inputStream15.readNBytes((int) (byte) 100);
        java.io.InputStream inputStream32 = java.io.InputStream.nullInputStream();
        long long34 = inputStream32.skip((long) 'a');
        byte[] byteArray35 = new byte[] {};
        int int36 = inputStream32.read(byteArray35);
        byte[] byteArray38 = inputStream32.readNBytes(10);
        long long40 = inputStream32.skip((long) '4');
        byte[] byteArray41 = inputStream32.readAllBytes();
        java.io.InputStream inputStream42 = java.io.InputStream.nullInputStream();
        long long44 = inputStream42.skip((long) 'a');
        byte[] byteArray45 = new byte[] {};
        int int46 = inputStream42.read(byteArray45);
        byte[] byteArray48 = inputStream42.readNBytes(10);
        long long50 = inputStream42.skip((long) '4');
        byte[] byteArray51 = inputStream42.readAllBytes();
        java.io.InputStream inputStream52 = java.io.InputStream.nullInputStream();
        long long54 = inputStream52.skip((long) 'a');
        byte[] byteArray58 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int59 = inputStream52.read(byteArray58);
        byte[] byteArray61 = inputStream52.readNBytes((int) (short) 100);
        int int62 = inputStream42.read(byteArray61);
        int int63 = inputStream32.read(byteArray61);
        int int64 = inputStream15.read(byteArray61);
        byte[] byteArray65 = inputStream15.readAllBytes();
        byte[] byteArray66 = inputStream15.readAllBytes();
        byte[] byteArray67 = inputStream15.readAllBytes();
        byte[] byteArray69 = inputStream15.readNBytes(0);
        int int70 = inputStream0.read(byteArray69);
        byte[] byteArray71 = inputStream0.readAllBytes();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(inputStream1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[]");
        org.junit.Assert.assertNotNull(inputStream3);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertNotNull(inputStream15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(inputStream22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(inputStream32);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(inputStream42);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(inputStream52);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[]");
    }

    @Test
    public void test234() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test234");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        long long10 = inputStream0.skip(1L);
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int18 = inputStream11.read(byteArray17);
        byte[] byteArray19 = inputStream11.readAllBytes();
        byte[] byteArray20 = inputStream11.readAllBytes();
        java.io.InputStream inputStream21 = java.io.InputStream.nullInputStream();
        long long23 = inputStream21.skip((long) 'a');
        byte[] byteArray27 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int28 = inputStream21.read(byteArray27);
        byte[] byteArray29 = inputStream21.readAllBytes();
        java.io.InputStream inputStream30 = java.io.InputStream.nullInputStream();
        long long32 = inputStream30.skip((long) 'a');
        byte[] byteArray33 = new byte[] {};
        int int34 = inputStream30.read(byteArray33);
        int int35 = inputStream21.read(byteArray33);
        byte[] byteArray37 = inputStream21.readNBytes((int) (byte) 0);
        int int40 = inputStream11.read(byteArray37, 0, 0);
        int int41 = inputStream0.read(byteArray37);
        java.io.InputStream inputStream42 = java.io.InputStream.nullInputStream();
        long long44 = inputStream42.skip((long) 'a');
        byte[] byteArray48 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int49 = inputStream42.read(byteArray48);
        byte[] byteArray50 = inputStream42.readAllBytes();
        java.io.InputStream inputStream51 = java.io.InputStream.nullInputStream();
        long long53 = inputStream51.skip((long) 'a');
        byte[] byteArray54 = new byte[] {};
        int int55 = inputStream51.read(byteArray54);
        int int56 = inputStream42.read(byteArray54);
        long long58 = inputStream42.skip((long) 0);
        java.io.InputStream inputStream59 = java.io.InputStream.nullInputStream();
        long long61 = inputStream59.skip((long) 'a');
        byte[] byteArray65 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int66 = inputStream59.read(byteArray65);
        int int69 = inputStream42.readNBytes(byteArray65, (int) (byte) 1, 1);
        int int70 = inputStream0.read(byteArray65);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(inputStream21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(inputStream30);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(inputStream42);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + (-1) + "'", int49 == (-1));
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(inputStream51);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertNotNull(inputStream59);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + (-1) + "'", int66 == (-1));
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + 0 + "'", int69 == 0);
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + (-1) + "'", int70 == (-1));
    }

    @Test
    public void test235() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test235");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = inputStream0.readAllBytes();
        byte[] byteArray12 = inputStream0.readNBytes((int) (byte) 10);
        long long14 = inputStream0.skip((long) 1);
        byte[] byteArray15 = inputStream0.readAllBytes();
        java.lang.Class<?> wildcardClass16 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test236() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test236");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        byte[] byteArray16 = inputStream0.readNBytes((int) (byte) 0);
        long long18 = inputStream0.skip((long) 1);
        java.lang.Class<?> wildcardClass19 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass19);
    }

    @Test
    public void test237() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test237");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        byte[] byteArray6 = inputStream0.readNBytes((int) (short) 10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream7.read(byteArray10);
        byte[] byteArray13 = inputStream7.readNBytes(10);
        java.io.InputStream inputStream14 = java.io.InputStream.nullInputStream();
        long long16 = inputStream14.skip((long) 'a');
        byte[] byteArray17 = new byte[] {};
        int int18 = inputStream14.read(byteArray17);
        byte[] byteArray20 = inputStream14.readNBytes(10);
        int int21 = inputStream7.read(byteArray20);
        int int24 = inputStream0.readNBytes(byteArray20, 0, (int) (short) 0);
        java.io.OutputStream outputStream25 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long26 = inputStream0.transferTo(outputStream25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(inputStream14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test238() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test238");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = inputStream0.readAllBytes();
        byte[] byteArray12 = inputStream0.readNBytes((int) (byte) 10);
        long long14 = inputStream0.skip((long) 1);
        java.io.InputStream inputStream15 = java.io.InputStream.nullInputStream();
        long long17 = inputStream15.skip((long) 'a');
        long long19 = inputStream15.skip((long) 10);
        byte[] byteArray21 = inputStream15.readNBytes((int) (short) 10);
        int int22 = inputStream0.read(byteArray21);
        java.io.InputStream inputStream23 = java.io.InputStream.nullInputStream();
        long long25 = inputStream23.skip((long) 'a');
        long long27 = inputStream23.skip((long) 10);
        byte[] byteArray29 = inputStream23.readNBytes((int) (short) 10);
        byte[] byteArray31 = inputStream23.readNBytes((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int34 = inputStream0.read(byteArray31, (int) (short) -1, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [-1, -1 + 10) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(inputStream15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(inputStream23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
    }

    @Test
    public void test239() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test239");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        java.io.InputStream inputStream3 = java.io.InputStream.nullInputStream();
        long long5 = inputStream3.skip((long) 'a');
        byte[] byteArray6 = new byte[] {};
        int int7 = inputStream3.read(byteArray6);
        byte[] byteArray9 = inputStream3.readNBytes(10);
        byte[] byteArray13 = new byte[] { (byte) 1, (byte) 10, (byte) 1 };
        int int14 = inputStream3.read(byteArray13);
        // The following exception was thrown during execution in test generation
        try {
            int int17 = inputStream0.readNBytes(byteArray13, (int) (byte) 0, 100);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [0, 0 + 100) out of bounds for length 3");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(inputStream3);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[1, 10, 1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
    }

    @Test
    public void test240() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test240");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray13 = new byte[] {};
        int int14 = inputStream10.read(byteArray13);
        byte[] byteArray16 = inputStream10.readNBytes(10);
        long long18 = inputStream10.skip((long) '4');
        byte[] byteArray19 = inputStream10.readAllBytes();
        java.io.InputStream inputStream20 = java.io.InputStream.nullInputStream();
        long long22 = inputStream20.skip((long) 'a');
        byte[] byteArray26 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int27 = inputStream20.read(byteArray26);
        byte[] byteArray29 = inputStream20.readNBytes((int) (short) 100);
        int int30 = inputStream10.read(byteArray29);
        int int31 = inputStream0.read(byteArray29);
        byte[] byteArray32 = inputStream0.readAllBytes();
        byte[] byteArray33 = null;
        // The following exception was thrown during execution in test generation
        try {
            int int36 = inputStream0.read(byteArray33, (int) (byte) 1, (int) (byte) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(inputStream20);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
    }

    @Test
    public void test241() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test241");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        long long16 = inputStream0.skip((long) 0);
        byte[] byteArray17 = inputStream0.readAllBytes();
        long long19 = inputStream0.skip((long) 10);
        java.io.OutputStream outputStream20 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long21 = inputStream0.transferTo(outputStream20);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
    }

    @Test
    public void test242() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test242");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray9 = inputStream0.readNBytes((int) (short) 100);
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        byte[] byteArray11 = inputStream10.readAllBytes();
        java.io.InputStream inputStream12 = java.io.InputStream.nullInputStream();
        long long14 = inputStream12.skip((long) 'a');
        byte[] byteArray15 = new byte[] {};
        int int16 = inputStream12.read(byteArray15);
        byte[] byteArray18 = inputStream12.readNBytes(10);
        int int19 = inputStream10.read(byteArray18);
        byte[] byteArray20 = inputStream10.readAllBytes();
        int int21 = inputStream0.read(byteArray20);
        java.io.InputStream inputStream22 = java.io.InputStream.nullInputStream();
        long long24 = inputStream22.skip((long) 'a');
        byte[] byteArray28 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int29 = inputStream22.read(byteArray28);
        int int30 = inputStream0.read(byteArray28);
        long long32 = inputStream0.skip((long) 'a');
        java.io.InputStream inputStream33 = java.io.InputStream.nullInputStream();
        long long35 = inputStream33.skip((long) 'a');
        byte[] byteArray36 = new byte[] {};
        int int37 = inputStream33.read(byteArray36);
        byte[] byteArray39 = inputStream33.readNBytes(10);
        long long41 = inputStream33.skip((long) '4');
        byte[] byteArray42 = inputStream33.readAllBytes();
        long long44 = inputStream33.skip((long) '4');
        java.io.InputStream inputStream45 = java.io.InputStream.nullInputStream();
        java.io.InputStream inputStream46 = java.io.InputStream.nullInputStream();
        byte[] byteArray47 = inputStream46.readAllBytes();
        java.io.InputStream inputStream48 = java.io.InputStream.nullInputStream();
        long long50 = inputStream48.skip((long) 'a');
        byte[] byteArray51 = new byte[] {};
        int int52 = inputStream48.read(byteArray51);
        byte[] byteArray54 = inputStream48.readNBytes(10);
        int int55 = inputStream46.read(byteArray54);
        byte[] byteArray56 = inputStream46.readAllBytes();
        int int57 = inputStream45.read(byteArray56);
        byte[] byteArray59 = inputStream45.readNBytes(10);
        int int60 = inputStream33.read(byteArray59);
        int int61 = inputStream0.read(byteArray59);
        java.io.InputStream inputStream62 = java.io.InputStream.nullInputStream();
        long long64 = inputStream62.skip((long) 'a');
        byte[] byteArray65 = new byte[] {};
        int int66 = inputStream62.read(byteArray65);
        byte[] byteArray68 = inputStream62.readNBytes(10);
        byte[] byteArray70 = inputStream62.readNBytes((int) '4');
        long long72 = inputStream62.skip((long) 100);
        byte[] byteArray73 = inputStream62.readAllBytes();
        int int74 = inputStream0.read(byteArray73);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(inputStream12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(inputStream22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(inputStream33);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNotNull(inputStream45);
        org.junit.Assert.assertNotNull(inputStream46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(inputStream48);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(inputStream62);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[]");
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
    }

    @Test
    public void test243() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test243");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        byte[] byteArray1 = inputStream0.readAllBytes();
        java.io.InputStream inputStream2 = java.io.InputStream.nullInputStream();
        long long4 = inputStream2.skip((long) 'a');
        byte[] byteArray5 = new byte[] {};
        int int6 = inputStream2.read(byteArray5);
        byte[] byteArray8 = inputStream2.readNBytes(10);
        int int9 = inputStream0.read(byteArray8);
        byte[] byteArray10 = inputStream0.readAllBytes();
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int18 = inputStream11.read(byteArray17);
        byte[] byteArray19 = inputStream11.readAllBytes();
        byte[] byteArray20 = inputStream11.readAllBytes();
        byte[] byteArray21 = inputStream11.readAllBytes();
        byte[] byteArray23 = inputStream11.readNBytes((int) (byte) 10);
        int int24 = inputStream0.read(byteArray23);
        long long26 = inputStream0.skip(100L);
        java.io.InputStream inputStream27 = java.io.InputStream.nullInputStream();
        long long29 = inputStream27.skip((long) 'a');
        byte[] byteArray30 = new byte[] {};
        int int31 = inputStream27.read(byteArray30);
        byte[] byteArray33 = inputStream27.readNBytes(10);
        long long35 = inputStream27.skip((long) '4');
        long long37 = inputStream27.skip(1L);
        byte[] byteArray38 = inputStream27.readAllBytes();
        java.io.InputStream inputStream39 = java.io.InputStream.nullInputStream();
        byte[] byteArray40 = inputStream39.readAllBytes();
        java.io.InputStream inputStream41 = java.io.InputStream.nullInputStream();
        long long43 = inputStream41.skip((long) 'a');
        byte[] byteArray44 = new byte[] {};
        int int45 = inputStream41.read(byteArray44);
        byte[] byteArray47 = inputStream41.readNBytes(10);
        int int48 = inputStream39.read(byteArray47);
        int int51 = inputStream27.readNBytes(byteArray47, (int) (byte) 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int54 = inputStream0.readNBytes(byteArray47, 0, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [0, 0 + 10) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(inputStream2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(inputStream27);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertNotNull(inputStream39);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(inputStream41);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    }

    @Test
    public void test244() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test244");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        long long16 = inputStream0.skip((-1L));
        byte[] byteArray18 = inputStream0.readNBytes((int) '4');
        java.io.OutputStream outputStream19 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long20 = inputStream0.transferTo(outputStream19);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
    }

    @Test
    public void test245() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test245");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        byte[] byteArray1 = inputStream0.readAllBytes();
        java.io.InputStream inputStream2 = java.io.InputStream.nullInputStream();
        long long4 = inputStream2.skip((long) 'a');
        byte[] byteArray5 = new byte[] {};
        int int6 = inputStream2.read(byteArray5);
        byte[] byteArray8 = inputStream2.readNBytes(10);
        int int9 = inputStream0.read(byteArray8);
        byte[] byteArray11 = inputStream0.readNBytes((int) 'a');
        byte[] byteArray12 = inputStream0.readAllBytes();
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        long long15 = inputStream13.skip((long) 'a');
        byte[] byteArray16 = new byte[] {};
        int int17 = inputStream13.read(byteArray16);
        byte[] byteArray19 = inputStream13.readNBytes(10);
        long long21 = inputStream13.skip((long) '4');
        long long23 = inputStream13.skip(1L);
        java.io.InputStream inputStream24 = java.io.InputStream.nullInputStream();
        long long26 = inputStream24.skip((long) 'a');
        byte[] byteArray30 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int31 = inputStream24.read(byteArray30);
        byte[] byteArray32 = inputStream24.readAllBytes();
        byte[] byteArray33 = inputStream24.readAllBytes();
        java.io.InputStream inputStream34 = java.io.InputStream.nullInputStream();
        long long36 = inputStream34.skip((long) 'a');
        byte[] byteArray40 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int41 = inputStream34.read(byteArray40);
        byte[] byteArray42 = inputStream34.readAllBytes();
        java.io.InputStream inputStream43 = java.io.InputStream.nullInputStream();
        long long45 = inputStream43.skip((long) 'a');
        byte[] byteArray46 = new byte[] {};
        int int47 = inputStream43.read(byteArray46);
        int int48 = inputStream34.read(byteArray46);
        byte[] byteArray50 = inputStream34.readNBytes((int) (byte) 0);
        int int53 = inputStream24.read(byteArray50, 0, 0);
        int int54 = inputStream13.read(byteArray50);
        int int55 = inputStream0.read(byteArray50);
        java.io.InputStream inputStream56 = java.io.InputStream.nullInputStream();
        long long58 = inputStream56.skip((long) 'a');
        long long60 = inputStream56.skip((long) 10);
        byte[] byteArray62 = inputStream56.readNBytes((int) (short) 10);
        byte[] byteArray64 = inputStream56.readNBytes((int) (byte) 0);
        long long66 = inputStream56.skip((long) (short) 10);
        byte[] byteArray68 = inputStream56.readNBytes(10);
        // The following exception was thrown during execution in test generation
        try {
            int int71 = inputStream0.read(byteArray68, (int) (short) 0, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [0, 0 + 1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(inputStream2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(inputStream24);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(inputStream34);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
        org.junit.Assert.assertNotNull(inputStream43);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(inputStream56);
        org.junit.Assert.assertTrue("'" + long58 + "' != '" + 0L + "'", long58 == 0L);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[]");
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[]");
    }

    @Test
    public void test246() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test246");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray10 = inputStream0.readNBytes((int) (byte) 10);
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray14 = new byte[] {};
        int int15 = inputStream11.read(byteArray14);
        byte[] byteArray17 = inputStream11.readNBytes(10);
        long long19 = inputStream11.skip((long) '4');
        byte[] byteArray20 = inputStream11.readAllBytes();
        byte[] byteArray22 = inputStream11.readNBytes(1);
        int int23 = inputStream0.read(byteArray22);
        byte[] byteArray25 = inputStream0.readNBytes((int) ' ');
        byte[] byteArray27 = inputStream0.readNBytes((int) (short) 1);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
    }

    @Test
    public void test247() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test247");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream7.read(byteArray10);
        byte[] byteArray13 = inputStream7.readNBytes(10);
        int int14 = inputStream0.read(byteArray13);
        long long16 = inputStream0.skip((long) (byte) 10);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
    }

    @Test
    public void test248() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test248");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = inputStream0.readAllBytes();
        byte[] byteArray12 = inputStream0.readNBytes((int) (byte) 10);
        long long14 = inputStream0.skip((long) 1);
        java.io.InputStream inputStream15 = java.io.InputStream.nullInputStream();
        long long17 = inputStream15.skip((long) 'a');
        long long19 = inputStream15.skip((long) 10);
        byte[] byteArray21 = inputStream15.readNBytes((int) (short) 10);
        int int22 = inputStream0.read(byteArray21);
        long long24 = inputStream0.skip((long) 100);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(inputStream15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
    }

    @Test
    public void test249() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test249");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        java.io.InputStream inputStream1 = java.io.InputStream.nullInputStream();
        byte[] byteArray2 = inputStream1.readAllBytes();
        java.io.InputStream inputStream3 = java.io.InputStream.nullInputStream();
        long long5 = inputStream3.skip((long) 'a');
        byte[] byteArray6 = new byte[] {};
        int int7 = inputStream3.read(byteArray6);
        byte[] byteArray9 = inputStream3.readNBytes(10);
        int int10 = inputStream1.read(byteArray9);
        byte[] byteArray11 = inputStream1.readAllBytes();
        int int12 = inputStream0.read(byteArray11);
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        long long15 = inputStream13.skip((long) 'a');
        byte[] byteArray19 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int20 = inputStream13.read(byteArray19);
        byte[] byteArray22 = inputStream13.readNBytes((int) (short) 100);
        byte[] byteArray23 = inputStream13.readAllBytes();
        int int24 = inputStream0.read(byteArray23);
        java.io.InputStream inputStream25 = java.io.InputStream.nullInputStream();
        long long27 = inputStream25.skip((long) 'a');
        byte[] byteArray28 = new byte[] {};
        int int29 = inputStream25.read(byteArray28);
        byte[] byteArray31 = inputStream25.readNBytes(10);
        long long33 = inputStream25.skip((long) '4');
        byte[] byteArray34 = inputStream25.readAllBytes();
        java.io.InputStream inputStream35 = java.io.InputStream.nullInputStream();
        long long37 = inputStream35.skip((long) 'a');
        byte[] byteArray41 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int42 = inputStream35.read(byteArray41);
        byte[] byteArray44 = inputStream35.readNBytes((int) (short) 100);
        int int45 = inputStream25.read(byteArray44);
        int int46 = inputStream0.read(byteArray44);
        java.lang.Class<?> wildcardClass47 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(inputStream1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[]");
        org.junit.Assert.assertNotNull(inputStream3);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(inputStream25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(inputStream35);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int42 + "' != '" + (-1) + "'", int42 == (-1));
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(wildcardClass47);
    }

    @Test
    public void test250() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test250");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        byte[] byteArray1 = inputStream0.readAllBytes();
        java.io.InputStream inputStream2 = java.io.InputStream.nullInputStream();
        long long4 = inputStream2.skip((long) 'a');
        byte[] byteArray5 = new byte[] {};
        int int6 = inputStream2.read(byteArray5);
        byte[] byteArray8 = inputStream2.readNBytes(10);
        int int9 = inputStream0.read(byteArray8);
        byte[] byteArray10 = inputStream0.readAllBytes();
        long long12 = inputStream0.skip((long) 'a');
        java.io.OutputStream outputStream13 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long14 = inputStream0.transferTo(outputStream13);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(inputStream2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
    }

    @Test
    public void test251() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test251");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        byte[] byteArray8 = inputStream0.readNBytes((int) '4');
        long long10 = inputStream0.skip((long) 100);
        byte[] byteArray11 = inputStream0.readAllBytes();
        byte[] byteArray13 = inputStream0.readNBytes((int) (short) 10);
        java.io.InputStream inputStream14 = java.io.InputStream.nullInputStream();
        long long16 = inputStream14.skip((long) 'a');
        long long18 = inputStream14.skip((long) 10);
        byte[] byteArray19 = inputStream14.readAllBytes();
        int int20 = inputStream0.read(byteArray19);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(inputStream14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
    }

    @Test
    public void test252() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test252");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        long long11 = inputStream0.skip((long) '4');
        java.io.InputStream inputStream12 = java.io.InputStream.nullInputStream();
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        byte[] byteArray14 = inputStream13.readAllBytes();
        java.io.InputStream inputStream15 = java.io.InputStream.nullInputStream();
        long long17 = inputStream15.skip((long) 'a');
        byte[] byteArray18 = new byte[] {};
        int int19 = inputStream15.read(byteArray18);
        byte[] byteArray21 = inputStream15.readNBytes(10);
        int int22 = inputStream13.read(byteArray21);
        byte[] byteArray23 = inputStream13.readAllBytes();
        int int24 = inputStream12.read(byteArray23);
        byte[] byteArray26 = inputStream12.readNBytes(10);
        int int27 = inputStream0.read(byteArray26);
        java.lang.Class<?> wildcardClass28 = byteArray26.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(inputStream12);
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertNotNull(inputStream15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(wildcardClass28);
    }

    @Test
    public void test253() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test253");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        byte[] byteArray16 = inputStream0.readNBytes((int) (byte) 0);
        long long18 = inputStream0.skip((long) 1);
        java.io.InputStream inputStream19 = java.io.InputStream.nullInputStream();
        long long21 = inputStream19.skip((long) 'a');
        long long23 = inputStream19.skip((long) 10);
        byte[] byteArray25 = inputStream19.readNBytes((int) (short) 10);
        byte[] byteArray27 = inputStream19.readNBytes((int) '#');
        long long29 = inputStream19.skip(1L);
        java.io.InputStream inputStream30 = java.io.InputStream.nullInputStream();
        long long32 = inputStream30.skip((long) 'a');
        byte[] byteArray33 = new byte[] {};
        int int34 = inputStream30.read(byteArray33);
        byte[] byteArray36 = inputStream30.readNBytes(10);
        long long38 = inputStream30.skip((long) '4');
        long long40 = inputStream30.skip(1L);
        java.io.InputStream inputStream41 = java.io.InputStream.nullInputStream();
        long long43 = inputStream41.skip((long) 'a');
        byte[] byteArray44 = new byte[] {};
        int int45 = inputStream41.read(byteArray44);
        byte[] byteArray47 = inputStream41.readNBytes(10);
        java.io.InputStream inputStream48 = java.io.InputStream.nullInputStream();
        long long50 = inputStream48.skip((long) 'a');
        byte[] byteArray51 = new byte[] {};
        int int52 = inputStream48.read(byteArray51);
        byte[] byteArray54 = inputStream48.readNBytes(10);
        int int55 = inputStream41.read(byteArray54);
        int int56 = inputStream30.read(byteArray54);
        int int57 = inputStream19.read(byteArray54);
        int int58 = inputStream0.read(byteArray54);
        byte[] byteArray60 = inputStream0.readNBytes((int) (byte) 100);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(inputStream19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(inputStream30);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(inputStream41);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(inputStream48);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + 0 + "'", int58 == 0);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[]");
    }

    @Test
    public void test254() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test254");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        java.io.InputStream inputStream1 = java.io.InputStream.nullInputStream();
        long long3 = inputStream1.skip((long) 'a');
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int8 = inputStream1.read(byteArray7);
        byte[] byteArray9 = inputStream1.readAllBytes();
        byte[] byteArray10 = inputStream1.readAllBytes();
        byte[] byteArray11 = new byte[] {};
        int int12 = inputStream1.read(byteArray11);
        byte[] byteArray14 = inputStream1.readNBytes((int) (short) 100);
        int int15 = inputStream0.read(byteArray14);
        long long17 = inputStream0.skip((long) 'a');
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(inputStream1);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    }

    @Test
    public void test255() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test255");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        long long16 = inputStream0.skip((long) 0);
        byte[] byteArray17 = inputStream0.readAllBytes();
        byte[] byteArray19 = inputStream0.readNBytes((int) (byte) 1);
        byte[] byteArray21 = inputStream0.readNBytes((int) '#');
        java.io.InputStream inputStream22 = java.io.InputStream.nullInputStream();
        long long24 = inputStream22.skip((long) 'a');
        byte[] byteArray25 = inputStream22.readAllBytes();
        java.io.InputStream inputStream26 = java.io.InputStream.nullInputStream();
        long long28 = inputStream26.skip((long) 'a');
        long long30 = inputStream26.skip((long) 10);
        byte[] byteArray32 = inputStream26.readNBytes((int) (short) 10);
        byte[] byteArray34 = inputStream26.readNBytes((int) (byte) 0);
        java.io.InputStream inputStream35 = java.io.InputStream.nullInputStream();
        long long37 = inputStream35.skip((long) 'a');
        byte[] byteArray38 = new byte[] {};
        int int39 = inputStream35.read(byteArray38);
        byte[] byteArray41 = inputStream35.readNBytes(10);
        java.io.InputStream inputStream42 = java.io.InputStream.nullInputStream();
        long long44 = inputStream42.skip((long) 'a');
        byte[] byteArray45 = new byte[] {};
        int int46 = inputStream42.read(byteArray45);
        byte[] byteArray48 = inputStream42.readNBytes(10);
        int int49 = inputStream35.read(byteArray48);
        byte[] byteArray51 = inputStream35.readNBytes((int) (byte) 100);
        int int52 = inputStream26.read(byteArray51);
        byte[] byteArray54 = inputStream26.readNBytes((int) (short) 1);
        int int55 = inputStream22.read(byteArray54);
        int int56 = inputStream0.read(byteArray54);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(inputStream22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(inputStream26);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(inputStream35);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(inputStream42);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + 0 + "'", int56 == 0);
    }

    @Test
    public void test256() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test256");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray10 = inputStream0.readNBytes((int) (byte) 10);
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray14 = new byte[] {};
        int int15 = inputStream11.read(byteArray14);
        byte[] byteArray17 = inputStream11.readNBytes(10);
        long long19 = inputStream11.skip((long) '4');
        byte[] byteArray20 = inputStream11.readAllBytes();
        byte[] byteArray22 = inputStream11.readNBytes(1);
        int int23 = inputStream0.read(byteArray22);
        byte[] byteArray25 = inputStream0.readNBytes((int) ' ');
        java.io.InputStream inputStream26 = java.io.InputStream.nullInputStream();
        byte[] byteArray27 = inputStream26.readAllBytes();
        java.io.InputStream inputStream28 = java.io.InputStream.nullInputStream();
        long long30 = inputStream28.skip((long) 'a');
        byte[] byteArray31 = new byte[] {};
        int int32 = inputStream28.read(byteArray31);
        byte[] byteArray34 = inputStream28.readNBytes(10);
        int int35 = inputStream26.read(byteArray34);
        int int36 = inputStream0.read(byteArray34);
        java.lang.Class<?> wildcardClass37 = byteArray34.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(inputStream26);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(inputStream28);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test257() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test257");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray9 = inputStream0.readNBytes((int) (short) 100);
        byte[] byteArray11 = inputStream0.readNBytes((int) (short) 10);
        long long13 = inputStream0.skip((-1L));
        java.io.InputStream inputStream14 = java.io.InputStream.nullInputStream();
        long long16 = inputStream14.skip((long) 'a');
        byte[] byteArray17 = new byte[] {};
        int int18 = inputStream14.read(byteArray17);
        byte[] byteArray20 = inputStream14.readNBytes(10);
        java.io.InputStream inputStream21 = java.io.InputStream.nullInputStream();
        long long23 = inputStream21.skip((long) 'a');
        byte[] byteArray24 = new byte[] {};
        int int25 = inputStream21.read(byteArray24);
        byte[] byteArray27 = inputStream21.readNBytes(10);
        int int28 = inputStream14.read(byteArray27);
        byte[] byteArray30 = inputStream14.readNBytes((int) (byte) 100);
        java.io.InputStream inputStream31 = java.io.InputStream.nullInputStream();
        long long33 = inputStream31.skip((long) 'a');
        byte[] byteArray34 = new byte[] {};
        int int35 = inputStream31.read(byteArray34);
        byte[] byteArray37 = inputStream31.readNBytes(10);
        long long39 = inputStream31.skip((long) '4');
        byte[] byteArray40 = inputStream31.readAllBytes();
        java.io.InputStream inputStream41 = java.io.InputStream.nullInputStream();
        long long43 = inputStream41.skip((long) 'a');
        byte[] byteArray44 = new byte[] {};
        int int45 = inputStream41.read(byteArray44);
        byte[] byteArray47 = inputStream41.readNBytes(10);
        long long49 = inputStream41.skip((long) '4');
        byte[] byteArray50 = inputStream41.readAllBytes();
        java.io.InputStream inputStream51 = java.io.InputStream.nullInputStream();
        long long53 = inputStream51.skip((long) 'a');
        byte[] byteArray57 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int58 = inputStream51.read(byteArray57);
        byte[] byteArray60 = inputStream51.readNBytes((int) (short) 100);
        int int61 = inputStream41.read(byteArray60);
        int int62 = inputStream31.read(byteArray60);
        int int63 = inputStream14.read(byteArray60);
        int int64 = inputStream0.read(byteArray60);
        byte[] byteArray66 = inputStream0.readNBytes((int) (short) 0);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(inputStream14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(inputStream21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(inputStream31);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[]");
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(inputStream41);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(inputStream51);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int58 + "' != '" + (-1) + "'", int58 == (-1));
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[]");
    }

    @Test
    public void test258() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test258");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = inputStream0.readAllBytes();
        byte[] byteArray12 = inputStream0.readNBytes((int) (byte) 10);
        long long14 = inputStream0.skip((long) 1);
        java.io.InputStream inputStream15 = java.io.InputStream.nullInputStream();
        long long17 = inputStream15.skip((long) 'a');
        byte[] byteArray18 = new byte[] {};
        int int19 = inputStream15.read(byteArray18);
        byte[] byteArray21 = inputStream15.readNBytes(10);
        java.io.InputStream inputStream22 = java.io.InputStream.nullInputStream();
        long long24 = inputStream22.skip((long) 'a');
        byte[] byteArray25 = new byte[] {};
        int int26 = inputStream22.read(byteArray25);
        byte[] byteArray28 = inputStream22.readNBytes(10);
        int int29 = inputStream15.read(byteArray28);
        byte[] byteArray31 = inputStream15.readNBytes((int) (byte) 100);
        java.io.InputStream inputStream32 = java.io.InputStream.nullInputStream();
        long long34 = inputStream32.skip((long) 'a');
        byte[] byteArray35 = new byte[] {};
        int int36 = inputStream32.read(byteArray35);
        byte[] byteArray38 = inputStream32.readNBytes(10);
        long long40 = inputStream32.skip((long) '4');
        byte[] byteArray41 = inputStream32.readAllBytes();
        java.io.InputStream inputStream42 = java.io.InputStream.nullInputStream();
        long long44 = inputStream42.skip((long) 'a');
        byte[] byteArray45 = new byte[] {};
        int int46 = inputStream42.read(byteArray45);
        byte[] byteArray48 = inputStream42.readNBytes(10);
        long long50 = inputStream42.skip((long) '4');
        byte[] byteArray51 = inputStream42.readAllBytes();
        java.io.InputStream inputStream52 = java.io.InputStream.nullInputStream();
        long long54 = inputStream52.skip((long) 'a');
        byte[] byteArray58 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int59 = inputStream52.read(byteArray58);
        byte[] byteArray61 = inputStream52.readNBytes((int) (short) 100);
        int int62 = inputStream42.read(byteArray61);
        int int63 = inputStream32.read(byteArray61);
        int int64 = inputStream15.read(byteArray61);
        byte[] byteArray65 = inputStream15.readAllBytes();
        int int66 = inputStream0.read(byteArray65);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(inputStream15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(inputStream22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(inputStream32);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(inputStream42);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(inputStream52);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
    }

    @Test
    public void test259() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test259");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = inputStream0.readAllBytes();
        byte[] byteArray12 = inputStream0.readNBytes((int) (byte) 10);
        long long14 = inputStream0.skip((long) (byte) -1);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test260() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test260");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        byte[] byteArray1 = inputStream0.readAllBytes();
        java.io.InputStream inputStream2 = java.io.InputStream.nullInputStream();
        long long4 = inputStream2.skip((long) 'a');
        byte[] byteArray5 = new byte[] {};
        int int6 = inputStream2.read(byteArray5);
        byte[] byteArray8 = inputStream2.readNBytes(10);
        int int9 = inputStream0.read(byteArray8);
        byte[] byteArray11 = inputStream0.readNBytes((int) 'a');
        byte[] byteArray12 = inputStream0.readAllBytes();
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        long long15 = inputStream13.skip((long) 'a');
        byte[] byteArray16 = new byte[] {};
        int int17 = inputStream13.read(byteArray16);
        byte[] byteArray19 = inputStream13.readNBytes(10);
        long long21 = inputStream13.skip((long) '4');
        long long23 = inputStream13.skip(1L);
        java.io.InputStream inputStream24 = java.io.InputStream.nullInputStream();
        long long26 = inputStream24.skip((long) 'a');
        byte[] byteArray30 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int31 = inputStream24.read(byteArray30);
        byte[] byteArray32 = inputStream24.readAllBytes();
        byte[] byteArray33 = inputStream24.readAllBytes();
        java.io.InputStream inputStream34 = java.io.InputStream.nullInputStream();
        long long36 = inputStream34.skip((long) 'a');
        byte[] byteArray40 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int41 = inputStream34.read(byteArray40);
        byte[] byteArray42 = inputStream34.readAllBytes();
        java.io.InputStream inputStream43 = java.io.InputStream.nullInputStream();
        long long45 = inputStream43.skip((long) 'a');
        byte[] byteArray46 = new byte[] {};
        int int47 = inputStream43.read(byteArray46);
        int int48 = inputStream34.read(byteArray46);
        byte[] byteArray50 = inputStream34.readNBytes((int) (byte) 0);
        int int53 = inputStream24.read(byteArray50, 0, 0);
        int int54 = inputStream13.read(byteArray50);
        int int55 = inputStream0.read(byteArray50);
        java.lang.Class<?> wildcardClass56 = byteArray50.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(inputStream2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(inputStream24);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + (-1) + "'", int31 == (-1));
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(inputStream34);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + (-1) + "'", int41 == (-1));
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
        org.junit.Assert.assertNotNull(inputStream43);
        org.junit.Assert.assertTrue("'" + long45 + "' != '" + 0L + "'", long45 == 0L);
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + int54 + "' != '" + 0 + "'", int54 == 0);
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(wildcardClass56);
    }

    @Test
    public void test261() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test261");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream0.read(byteArray10);
        byte[] byteArray13 = inputStream0.readNBytes((int) (short) 0);
        java.io.InputStream inputStream14 = java.io.InputStream.nullInputStream();
        long long16 = inputStream14.skip((long) 'a');
        byte[] byteArray20 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int21 = inputStream14.read(byteArray20);
        byte[] byteArray22 = inputStream14.readAllBytes();
        byte[] byteArray23 = inputStream14.readAllBytes();
        byte[] byteArray24 = inputStream14.readAllBytes();
        java.io.InputStream inputStream25 = java.io.InputStream.nullInputStream();
        long long27 = inputStream25.skip((long) 'a');
        byte[] byteArray31 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int32 = inputStream25.read(byteArray31);
        byte[] byteArray33 = inputStream25.readAllBytes();
        byte[] byteArray34 = inputStream25.readAllBytes();
        byte[] byteArray35 = new byte[] {};
        int int36 = inputStream25.read(byteArray35);
        byte[] byteArray38 = inputStream25.readNBytes((int) (short) 100);
        int int39 = inputStream14.read(byteArray38);
        int int40 = inputStream0.read(byteArray38);
        java.io.OutputStream outputStream41 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long42 = inputStream0.transferTo(outputStream41);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(inputStream14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(inputStream25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
    }

    @Test
    public void test262() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test262");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray10 = inputStream0.readNBytes(100);
        byte[] byteArray12 = inputStream0.readNBytes((int) (short) 10);
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        java.io.InputStream inputStream14 = java.io.InputStream.nullInputStream();
        byte[] byteArray15 = inputStream14.readAllBytes();
        java.io.InputStream inputStream16 = java.io.InputStream.nullInputStream();
        long long18 = inputStream16.skip((long) 'a');
        byte[] byteArray19 = new byte[] {};
        int int20 = inputStream16.read(byteArray19);
        byte[] byteArray22 = inputStream16.readNBytes(10);
        int int23 = inputStream14.read(byteArray22);
        byte[] byteArray24 = inputStream14.readAllBytes();
        int int25 = inputStream13.read(byteArray24);
        // The following exception was thrown during execution in test generation
        try {
            int int28 = inputStream0.read(byteArray24, (int) '4', (int) (byte) -1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [52, 52 + -1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertNotNull(inputStream14);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertNotNull(inputStream16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
    }

    @Test
    public void test263() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test263");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray10 = inputStream0.readNBytes((int) (byte) 10);
        byte[] byteArray12 = inputStream0.readNBytes((int) (byte) 1);
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        long long15 = inputStream13.skip((long) 'a');
        byte[] byteArray16 = new byte[] {};
        int int17 = inputStream13.read(byteArray16);
        byte[] byteArray19 = inputStream13.readNBytes(10);
        long long21 = inputStream13.skip((long) '4');
        byte[] byteArray23 = inputStream13.readNBytes((int) (byte) 10);
        java.io.InputStream inputStream24 = java.io.InputStream.nullInputStream();
        long long26 = inputStream24.skip((long) 'a');
        byte[] byteArray27 = new byte[] {};
        int int28 = inputStream24.read(byteArray27);
        byte[] byteArray30 = inputStream24.readNBytes(10);
        long long32 = inputStream24.skip((long) '4');
        byte[] byteArray33 = inputStream24.readAllBytes();
        byte[] byteArray35 = inputStream24.readNBytes(1);
        int int36 = inputStream13.read(byteArray35);
        int int37 = inputStream0.read(byteArray35);
        java.io.InputStream inputStream38 = java.io.InputStream.nullInputStream();
        long long40 = inputStream38.skip((long) 'a');
        byte[] byteArray44 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int45 = inputStream38.read(byteArray44);
        java.io.InputStream inputStream46 = java.io.InputStream.nullInputStream();
        long long48 = inputStream46.skip((long) 'a');
        byte[] byteArray49 = new byte[] {};
        int int50 = inputStream46.read(byteArray49);
        byte[] byteArray52 = inputStream46.readNBytes(10);
        long long54 = inputStream46.skip((long) '4');
        long long56 = inputStream46.skip(1L);
        java.io.InputStream inputStream57 = java.io.InputStream.nullInputStream();
        long long59 = inputStream57.skip((long) 'a');
        byte[] byteArray60 = new byte[] {};
        int int61 = inputStream57.read(byteArray60);
        byte[] byteArray63 = inputStream57.readNBytes(10);
        java.io.InputStream inputStream64 = java.io.InputStream.nullInputStream();
        long long66 = inputStream64.skip((long) 'a');
        byte[] byteArray67 = new byte[] {};
        int int68 = inputStream64.read(byteArray67);
        byte[] byteArray70 = inputStream64.readNBytes(10);
        int int71 = inputStream57.read(byteArray70);
        int int72 = inputStream46.read(byteArray70);
        int int73 = inputStream38.read(byteArray70);
        // The following exception was thrown during execution in test generation
        try {
            int int76 = inputStream0.read(byteArray70, (int) (byte) 10, (int) '4');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [10, 10 + 52) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(inputStream24);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(inputStream38);
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + (-1) + "'", int45 == (-1));
        org.junit.Assert.assertNotNull(inputStream46);
        org.junit.Assert.assertTrue("'" + long48 + "' != '" + 0L + "'", long48 == 0L);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
        org.junit.Assert.assertTrue("'" + int50 + "' != '" + 0 + "'", int50 == 0);
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertTrue("'" + long56 + "' != '" + 0L + "'", long56 == 0L);
        org.junit.Assert.assertNotNull(inputStream57);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[]");
        org.junit.Assert.assertNotNull(inputStream64);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
        org.junit.Assert.assertTrue("'" + int72 + "' != '" + 0 + "'", int72 == 0);
        org.junit.Assert.assertTrue("'" + int73 + "' != '" + 0 + "'", int73 == 0);
    }

    @Test
    public void test264() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test264");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray11 = inputStream0.readNBytes(1);
        java.io.InputStream inputStream12 = java.io.InputStream.nullInputStream();
        long long14 = inputStream12.skip((long) 'a');
        byte[] byteArray15 = new byte[] {};
        int int16 = inputStream12.read(byteArray15);
        byte[] byteArray18 = inputStream12.readNBytes(10);
        long long20 = inputStream12.skip((long) '4');
        byte[] byteArray22 = inputStream12.readNBytes((int) (byte) 10);
        int int23 = inputStream0.read(byteArray22);
        java.io.InputStream inputStream24 = java.io.InputStream.nullInputStream();
        long long26 = inputStream24.skip((long) 'a');
        byte[] byteArray27 = new byte[] {};
        int int28 = inputStream24.read(byteArray27);
        byte[] byteArray30 = inputStream24.readNBytes(10);
        long long32 = inputStream24.skip((long) '4');
        byte[] byteArray33 = inputStream24.readAllBytes();
        int int34 = inputStream0.read(byteArray33);
        java.io.InputStream inputStream35 = java.io.InputStream.nullInputStream();
        long long37 = inputStream35.skip((long) 'a');
        byte[] byteArray38 = new byte[] {};
        int int39 = inputStream35.read(byteArray38);
        byte[] byteArray41 = inputStream35.readNBytes(10);
        long long43 = inputStream35.skip((long) '4');
        byte[] byteArray45 = inputStream35.readNBytes(100);
        int int46 = inputStream0.read(byteArray45);
        java.io.InputStream inputStream47 = java.io.InputStream.nullInputStream();
        long long49 = inputStream47.skip((long) 'a');
        byte[] byteArray50 = new byte[] {};
        int int51 = inputStream47.read(byteArray50);
        byte[] byteArray53 = inputStream47.readNBytes(10);
        long long55 = inputStream47.skip((long) '4');
        long long57 = inputStream47.skip(1L);
        byte[] byteArray58 = inputStream47.readAllBytes();
        java.io.InputStream inputStream59 = java.io.InputStream.nullInputStream();
        byte[] byteArray60 = inputStream59.readAllBytes();
        java.io.InputStream inputStream61 = java.io.InputStream.nullInputStream();
        long long63 = inputStream61.skip((long) 'a');
        byte[] byteArray64 = new byte[] {};
        int int65 = inputStream61.read(byteArray64);
        byte[] byteArray67 = inputStream61.readNBytes(10);
        int int68 = inputStream59.read(byteArray67);
        int int71 = inputStream47.readNBytes(byteArray67, (int) (byte) 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int74 = inputStream0.read(byteArray67, (int) (byte) -1, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [-1, -1 + 0) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(inputStream12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(inputStream24);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(inputStream35);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(inputStream47);
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[]");
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertTrue("'" + long57 + "' != '" + 0L + "'", long57 == 0L);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertNotNull(inputStream59);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[]");
        org.junit.Assert.assertNotNull(inputStream61);
        org.junit.Assert.assertTrue("'" + long63 + "' != '" + 0L + "'", long63 == 0L);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + 0 + "'", int65 == 0);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertTrue("'" + int68 + "' != '" + 0 + "'", int68 == 0);
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
    }

    @Test
    public void test265() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test265");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) 1 };
        int int11 = inputStream0.read(byteArray10);
        java.io.InputStream inputStream12 = java.io.InputStream.nullInputStream();
        long long14 = inputStream12.skip((long) 'a');
        byte[] byteArray15 = new byte[] {};
        int int16 = inputStream12.read(byteArray15);
        byte[] byteArray18 = inputStream12.readNBytes(10);
        java.io.InputStream inputStream19 = java.io.InputStream.nullInputStream();
        long long21 = inputStream19.skip((long) 'a');
        byte[] byteArray22 = new byte[] {};
        int int23 = inputStream19.read(byteArray22);
        byte[] byteArray25 = inputStream19.readNBytes(10);
        int int26 = inputStream12.read(byteArray25);
        byte[] byteArray28 = inputStream12.readNBytes((int) (byte) 100);
        java.io.InputStream inputStream29 = java.io.InputStream.nullInputStream();
        long long31 = inputStream29.skip((long) 'a');
        byte[] byteArray32 = new byte[] {};
        int int33 = inputStream29.read(byteArray32);
        byte[] byteArray35 = inputStream29.readNBytes(10);
        long long37 = inputStream29.skip((long) '4');
        byte[] byteArray38 = inputStream29.readAllBytes();
        java.io.InputStream inputStream39 = java.io.InputStream.nullInputStream();
        long long41 = inputStream39.skip((long) 'a');
        byte[] byteArray42 = new byte[] {};
        int int43 = inputStream39.read(byteArray42);
        byte[] byteArray45 = inputStream39.readNBytes(10);
        long long47 = inputStream39.skip((long) '4');
        byte[] byteArray48 = inputStream39.readAllBytes();
        java.io.InputStream inputStream49 = java.io.InputStream.nullInputStream();
        long long51 = inputStream49.skip((long) 'a');
        byte[] byteArray55 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int56 = inputStream49.read(byteArray55);
        byte[] byteArray58 = inputStream49.readNBytes((int) (short) 100);
        int int59 = inputStream39.read(byteArray58);
        int int60 = inputStream29.read(byteArray58);
        int int61 = inputStream12.read(byteArray58);
        byte[] byteArray62 = inputStream12.readAllBytes();
        byte[] byteArray63 = inputStream12.readAllBytes();
        byte[] byteArray64 = inputStream12.readAllBytes();
        byte[] byteArray66 = inputStream12.readNBytes(0);
        int int67 = inputStream0.read(byteArray66);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, 1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(inputStream12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(inputStream19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertNotNull(inputStream29);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertNotNull(inputStream39);
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertTrue("'" + long47 + "' != '" + 0L + "'", long47 == 0L);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertNotNull(inputStream49);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNotNull(byteArray55);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray55), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int56 + "' != '" + (-1) + "'", int56 == (-1));
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + 0 + "'", int59 == 0);
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertNotNull(byteArray63);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray63), "[]");
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[]");
        org.junit.Assert.assertTrue("'" + int67 + "' != '" + 0 + "'", int67 == 0);
    }

    @Test
    public void test266() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test266");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        java.io.InputStream inputStream1 = java.io.InputStream.nullInputStream();
        long long3 = inputStream1.skip((long) 'a');
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int8 = inputStream1.read(byteArray7);
        byte[] byteArray9 = inputStream1.readAllBytes();
        byte[] byteArray10 = inputStream1.readAllBytes();
        byte[] byteArray11 = new byte[] {};
        int int12 = inputStream1.read(byteArray11);
        byte[] byteArray14 = inputStream1.readNBytes((int) (short) 100);
        int int15 = inputStream0.read(byteArray14);
        java.io.OutputStream outputStream16 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long17 = inputStream0.transferTo(outputStream16);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(inputStream1);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
    }

    @Test
    public void test267() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test267");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray10 = inputStream0.readNBytes((int) (byte) 10);
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray14 = new byte[] {};
        int int15 = inputStream11.read(byteArray14);
        byte[] byteArray17 = inputStream11.readNBytes(10);
        long long19 = inputStream11.skip((long) '4');
        byte[] byteArray20 = inputStream11.readAllBytes();
        byte[] byteArray22 = inputStream11.readNBytes(1);
        int int23 = inputStream0.read(byteArray22);
        byte[] byteArray25 = inputStream0.readNBytes((int) ' ');
        java.io.InputStream inputStream26 = java.io.InputStream.nullInputStream();
        byte[] byteArray27 = inputStream26.readAllBytes();
        java.io.InputStream inputStream28 = java.io.InputStream.nullInputStream();
        long long30 = inputStream28.skip((long) 'a');
        byte[] byteArray31 = new byte[] {};
        int int32 = inputStream28.read(byteArray31);
        byte[] byteArray34 = inputStream28.readNBytes(10);
        int int35 = inputStream26.read(byteArray34);
        int int36 = inputStream0.read(byteArray34);
        long long38 = inputStream0.skip(0L);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(inputStream26);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertNotNull(inputStream28);
        org.junit.Assert.assertTrue("'" + long30 + "' != '" + 0L + "'", long30 == 0L);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + 0 + "'", int32 == 0);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertTrue("'" + long38 + "' != '" + 0L + "'", long38 == 0L);
    }

    @Test
    public void test268() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test268");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream0.read(byteArray10);
        byte[] byteArray13 = inputStream0.readNBytes((int) (short) 100);
        byte[] byteArray15 = inputStream0.readNBytes(0);
        long long17 = inputStream0.skip((long) 10);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
    }

    @Test
    public void test269() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test269");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream7.read(byteArray10);
        byte[] byteArray13 = inputStream7.readNBytes(10);
        int int14 = inputStream0.read(byteArray13);
        byte[] byteArray16 = inputStream0.readNBytes((int) (byte) 100);
        java.io.InputStream inputStream17 = java.io.InputStream.nullInputStream();
        long long19 = inputStream17.skip((long) 'a');
        byte[] byteArray20 = new byte[] {};
        int int21 = inputStream17.read(byteArray20);
        byte[] byteArray23 = inputStream17.readNBytes(10);
        long long25 = inputStream17.skip((long) '4');
        byte[] byteArray26 = inputStream17.readAllBytes();
        java.io.InputStream inputStream27 = java.io.InputStream.nullInputStream();
        long long29 = inputStream27.skip((long) 'a');
        byte[] byteArray30 = new byte[] {};
        int int31 = inputStream27.read(byteArray30);
        byte[] byteArray33 = inputStream27.readNBytes(10);
        long long35 = inputStream27.skip((long) '4');
        byte[] byteArray36 = inputStream27.readAllBytes();
        java.io.InputStream inputStream37 = java.io.InputStream.nullInputStream();
        long long39 = inputStream37.skip((long) 'a');
        byte[] byteArray43 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int44 = inputStream37.read(byteArray43);
        byte[] byteArray46 = inputStream37.readNBytes((int) (short) 100);
        int int47 = inputStream27.read(byteArray46);
        int int48 = inputStream17.read(byteArray46);
        int int49 = inputStream0.read(byteArray46);
        byte[] byteArray50 = inputStream0.readAllBytes();
        java.io.InputStream inputStream51 = java.io.InputStream.nullInputStream();
        long long53 = inputStream51.skip((long) 'a');
        long long55 = inputStream51.skip((long) 10);
        byte[] byteArray57 = inputStream51.readNBytes((int) (short) 10);
        java.io.InputStream inputStream58 = java.io.InputStream.nullInputStream();
        long long60 = inputStream58.skip((long) 'a');
        byte[] byteArray64 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int65 = inputStream58.read(byteArray64);
        byte[] byteArray67 = inputStream58.readNBytes((int) (short) 100);
        java.io.InputStream inputStream68 = java.io.InputStream.nullInputStream();
        byte[] byteArray69 = inputStream68.readAllBytes();
        java.io.InputStream inputStream70 = java.io.InputStream.nullInputStream();
        long long72 = inputStream70.skip((long) 'a');
        byte[] byteArray73 = new byte[] {};
        int int74 = inputStream70.read(byteArray73);
        byte[] byteArray76 = inputStream70.readNBytes(10);
        int int77 = inputStream68.read(byteArray76);
        byte[] byteArray78 = inputStream68.readAllBytes();
        int int79 = inputStream58.read(byteArray78);
        int int80 = inputStream51.read(byteArray78);
        int int81 = inputStream0.read(byteArray78);
        byte[] byteArray83 = inputStream0.readNBytes((int) (short) 1);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(inputStream17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertNotNull(inputStream27);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(inputStream37);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(inputStream51);
        org.junit.Assert.assertTrue("'" + long53 + "' != '" + 0L + "'", long53 == 0L);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
        org.junit.Assert.assertNotNull(byteArray57);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray57), "[]");
        org.junit.Assert.assertNotNull(inputStream58);
        org.junit.Assert.assertTrue("'" + long60 + "' != '" + 0L + "'", long60 == 0L);
        org.junit.Assert.assertNotNull(byteArray64);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray64), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int65 + "' != '" + (-1) + "'", int65 == (-1));
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertNotNull(inputStream68);
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[]");
        org.junit.Assert.assertNotNull(inputStream70);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[]");
        org.junit.Assert.assertTrue("'" + int74 + "' != '" + 0 + "'", int74 == 0);
        org.junit.Assert.assertNotNull(byteArray76);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray76), "[]");
        org.junit.Assert.assertTrue("'" + int77 + "' != '" + 0 + "'", int77 == 0);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[]");
        org.junit.Assert.assertTrue("'" + int79 + "' != '" + 0 + "'", int79 == 0);
        org.junit.Assert.assertTrue("'" + int80 + "' != '" + 0 + "'", int80 == 0);
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertNotNull(byteArray83);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray83), "[]");
    }

    @Test
    public void test270() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test270");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        long long11 = inputStream0.skip((long) 10);
        long long13 = inputStream0.skip(1L);
        java.io.InputStream inputStream14 = java.io.InputStream.nullInputStream();
        long long16 = inputStream14.skip((long) 'a');
        byte[] byteArray20 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int21 = inputStream14.read(byteArray20);
        byte[] byteArray22 = inputStream14.readAllBytes();
        java.io.InputStream inputStream23 = java.io.InputStream.nullInputStream();
        long long25 = inputStream23.skip((long) 'a');
        byte[] byteArray26 = new byte[] {};
        int int27 = inputStream23.read(byteArray26);
        int int28 = inputStream14.read(byteArray26);
        byte[] byteArray30 = inputStream14.readNBytes((int) (byte) 10);
        int int31 = inputStream0.read(byteArray30);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(inputStream14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertNotNull(inputStream23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test271() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test271");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = inputStream0.readAllBytes();
        byte[] byteArray12 = inputStream0.readNBytes((int) (byte) 10);
        long long14 = inputStream0.skip((long) '4');
        java.lang.Class<?> wildcardClass15 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass15);
    }

    @Test
    public void test272() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test272");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        byte[] byteArray6 = inputStream0.readNBytes((int) (short) 10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray13 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int14 = inputStream7.read(byteArray13);
        byte[] byteArray15 = inputStream7.readAllBytes();
        java.io.InputStream inputStream16 = java.io.InputStream.nullInputStream();
        long long18 = inputStream16.skip((long) 'a');
        byte[] byteArray22 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int23 = inputStream16.read(byteArray22);
        byte[] byteArray24 = inputStream16.readAllBytes();
        java.io.InputStream inputStream25 = java.io.InputStream.nullInputStream();
        long long27 = inputStream25.skip((long) 'a');
        byte[] byteArray28 = new byte[] {};
        int int29 = inputStream25.read(byteArray28);
        int int30 = inputStream16.read(byteArray28);
        int int33 = inputStream7.read(byteArray28, 0, 0);
        int int34 = inputStream0.read(byteArray28);
        long long36 = inputStream0.skip((-1L));
        java.lang.Class<?> wildcardClass37 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + (-1) + "'", int14 == (-1));
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertNotNull(inputStream16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(inputStream25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + long36 + "' != '" + 0L + "'", long36 == 0L);
        org.junit.Assert.assertNotNull(wildcardClass37);
    }

    @Test
    public void test273() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test273");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        java.io.InputStream inputStream1 = java.io.InputStream.nullInputStream();
        byte[] byteArray2 = inputStream1.readAllBytes();
        java.io.InputStream inputStream3 = java.io.InputStream.nullInputStream();
        long long5 = inputStream3.skip((long) 'a');
        byte[] byteArray6 = new byte[] {};
        int int7 = inputStream3.read(byteArray6);
        byte[] byteArray9 = inputStream3.readNBytes(10);
        int int10 = inputStream1.read(byteArray9);
        byte[] byteArray11 = inputStream1.readAllBytes();
        int int12 = inputStream0.read(byteArray11);
        byte[] byteArray14 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream15 = java.io.InputStream.nullInputStream();
        long long17 = inputStream15.skip((long) 'a');
        byte[] byteArray18 = new byte[] {};
        int int19 = inputStream15.read(byteArray18);
        byte[] byteArray21 = inputStream15.readNBytes(10);
        java.io.InputStream inputStream22 = java.io.InputStream.nullInputStream();
        long long24 = inputStream22.skip((long) 'a');
        byte[] byteArray25 = new byte[] {};
        int int26 = inputStream22.read(byteArray25);
        byte[] byteArray28 = inputStream22.readNBytes(10);
        int int29 = inputStream15.read(byteArray28);
        byte[] byteArray31 = inputStream15.readNBytes((int) (byte) 100);
        java.io.InputStream inputStream32 = java.io.InputStream.nullInputStream();
        long long34 = inputStream32.skip((long) 'a');
        byte[] byteArray35 = new byte[] {};
        int int36 = inputStream32.read(byteArray35);
        byte[] byteArray38 = inputStream32.readNBytes(10);
        long long40 = inputStream32.skip((long) '4');
        byte[] byteArray41 = inputStream32.readAllBytes();
        java.io.InputStream inputStream42 = java.io.InputStream.nullInputStream();
        long long44 = inputStream42.skip((long) 'a');
        byte[] byteArray45 = new byte[] {};
        int int46 = inputStream42.read(byteArray45);
        byte[] byteArray48 = inputStream42.readNBytes(10);
        long long50 = inputStream42.skip((long) '4');
        byte[] byteArray51 = inputStream42.readAllBytes();
        java.io.InputStream inputStream52 = java.io.InputStream.nullInputStream();
        long long54 = inputStream52.skip((long) 'a');
        byte[] byteArray58 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int59 = inputStream52.read(byteArray58);
        byte[] byteArray61 = inputStream52.readNBytes((int) (short) 100);
        int int62 = inputStream42.read(byteArray61);
        int int63 = inputStream32.read(byteArray61);
        int int64 = inputStream15.read(byteArray61);
        byte[] byteArray65 = inputStream15.readAllBytes();
        byte[] byteArray66 = inputStream15.readAllBytes();
        byte[] byteArray67 = inputStream15.readAllBytes();
        byte[] byteArray69 = inputStream15.readNBytes(0);
        int int70 = inputStream0.read(byteArray69);
        long long72 = inputStream0.skip((long) (short) 0);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(inputStream1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[]");
        org.junit.Assert.assertNotNull(inputStream3);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertNotNull(inputStream15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(inputStream22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[]");
        org.junit.Assert.assertNotNull(inputStream32);
        org.junit.Assert.assertTrue("'" + long34 + "' != '" + 0L + "'", long34 == 0L);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertTrue("'" + long40 + "' != '" + 0L + "'", long40 == 0L);
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(inputStream42);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertNotNull(byteArray48);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray48), "[]");
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(inputStream52);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(byteArray66);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray66), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[]");
        org.junit.Assert.assertTrue("'" + int70 + "' != '" + 0 + "'", int70 == 0);
        org.junit.Assert.assertTrue("'" + long72 + "' != '" + 0L + "'", long72 == 0L);
    }

    @Test
    public void test274() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test274");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray10 = inputStream0.readNBytes((int) (byte) 10);
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray14 = new byte[] {};
        int int15 = inputStream11.read(byteArray14);
        byte[] byteArray17 = inputStream11.readNBytes(10);
        long long19 = inputStream11.skip((long) '4');
        byte[] byteArray20 = inputStream11.readAllBytes();
        byte[] byteArray22 = inputStream11.readNBytes(1);
        int int23 = inputStream0.read(byteArray22);
        long long25 = inputStream0.skip((long) (byte) 1);
        long long27 = inputStream0.skip((long) (byte) 100);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
    }

    @Test
    public void test275() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test275");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray11 = inputStream0.readNBytes((int) (short) 100);
        java.lang.Class<?> wildcardClass12 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(wildcardClass12);
    }

    @Test
    public void test276() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test276");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream7.read(byteArray10);
        byte[] byteArray13 = inputStream7.readNBytes(10);
        int int14 = inputStream0.read(byteArray13);
        byte[] byteArray16 = inputStream0.readNBytes((int) (byte) 100);
        java.io.InputStream inputStream17 = java.io.InputStream.nullInputStream();
        long long19 = inputStream17.skip((long) 'a');
        byte[] byteArray20 = new byte[] {};
        int int21 = inputStream17.read(byteArray20);
        byte[] byteArray23 = inputStream17.readNBytes(10);
        long long25 = inputStream17.skip((long) '4');
        byte[] byteArray26 = inputStream17.readAllBytes();
        java.io.InputStream inputStream27 = java.io.InputStream.nullInputStream();
        long long29 = inputStream27.skip((long) 'a');
        byte[] byteArray30 = new byte[] {};
        int int31 = inputStream27.read(byteArray30);
        byte[] byteArray33 = inputStream27.readNBytes(10);
        long long35 = inputStream27.skip((long) '4');
        byte[] byteArray36 = inputStream27.readAllBytes();
        java.io.InputStream inputStream37 = java.io.InputStream.nullInputStream();
        long long39 = inputStream37.skip((long) 'a');
        byte[] byteArray43 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int44 = inputStream37.read(byteArray43);
        byte[] byteArray46 = inputStream37.readNBytes((int) (short) 100);
        int int47 = inputStream27.read(byteArray46);
        int int48 = inputStream17.read(byteArray46);
        int int49 = inputStream0.read(byteArray46);
        java.io.InputStream inputStream50 = java.io.InputStream.nullInputStream();
        long long52 = inputStream50.skip((long) 'a');
        byte[] byteArray56 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int57 = inputStream50.read(byteArray56);
        byte[] byteArray58 = inputStream50.readAllBytes();
        java.io.InputStream inputStream59 = java.io.InputStream.nullInputStream();
        long long61 = inputStream59.skip((long) 'a');
        byte[] byteArray62 = new byte[] {};
        int int63 = inputStream59.read(byteArray62);
        int int64 = inputStream50.read(byteArray62);
        long long66 = inputStream50.skip((long) 0);
        byte[] byteArray67 = inputStream50.readAllBytes();
        byte[] byteArray69 = inputStream50.readNBytes((int) (byte) 1);
        byte[] byteArray70 = inputStream50.readAllBytes();
        byte[] byteArray72 = inputStream50.readNBytes((int) (byte) 1);
        // The following exception was thrown during execution in test generation
        try {
            int int75 = inputStream0.read(byteArray72, (-1), (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [-1, -1 + 35) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(inputStream17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertNotNull(inputStream27);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(inputStream37);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(inputStream50);
        org.junit.Assert.assertTrue("'" + long52 + "' != '" + 0L + "'", long52 == 0L);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + (-1) + "'", int57 == (-1));
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[]");
        org.junit.Assert.assertNotNull(inputStream59);
        org.junit.Assert.assertTrue("'" + long61 + "' != '" + 0L + "'", long61 == 0L);
        org.junit.Assert.assertNotNull(byteArray62);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray62), "[]");
        org.junit.Assert.assertTrue("'" + int63 + "' != '" + 0 + "'", int63 == 0);
        org.junit.Assert.assertTrue("'" + int64 + "' != '" + 0 + "'", int64 == 0);
        org.junit.Assert.assertTrue("'" + long66 + "' != '" + 0L + "'", long66 == 0L);
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertNotNull(byteArray69);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray69), "[]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[]");
        org.junit.Assert.assertNotNull(byteArray72);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray72), "[]");
    }

    @Test
    public void test277() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test277");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray4 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream5 = java.io.InputStream.nullInputStream();
        long long7 = inputStream5.skip((long) 'a');
        byte[] byteArray8 = new byte[] {};
        int int9 = inputStream5.read(byteArray8);
        byte[] byteArray11 = inputStream5.readNBytes(10);
        long long13 = inputStream5.skip((long) '4');
        long long15 = inputStream5.skip(1L);
        java.io.InputStream inputStream16 = java.io.InputStream.nullInputStream();
        long long18 = inputStream16.skip((long) 'a');
        byte[] byteArray22 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int23 = inputStream16.read(byteArray22);
        byte[] byteArray24 = inputStream16.readAllBytes();
        byte[] byteArray25 = inputStream16.readAllBytes();
        java.io.InputStream inputStream26 = java.io.InputStream.nullInputStream();
        long long28 = inputStream26.skip((long) 'a');
        byte[] byteArray32 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int33 = inputStream26.read(byteArray32);
        byte[] byteArray34 = inputStream26.readAllBytes();
        java.io.InputStream inputStream35 = java.io.InputStream.nullInputStream();
        long long37 = inputStream35.skip((long) 'a');
        byte[] byteArray38 = new byte[] {};
        int int39 = inputStream35.read(byteArray38);
        int int40 = inputStream26.read(byteArray38);
        byte[] byteArray42 = inputStream26.readNBytes((int) (byte) 0);
        int int45 = inputStream16.read(byteArray42, 0, 0);
        int int46 = inputStream5.read(byteArray42);
        int int47 = inputStream0.read(byteArray42);
        java.io.InputStream inputStream48 = java.io.InputStream.nullInputStream();
        long long50 = inputStream48.skip((long) 'a');
        byte[] byteArray54 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int55 = inputStream48.read(byteArray54);
        byte[] byteArray56 = inputStream48.readAllBytes();
        java.io.InputStream inputStream57 = java.io.InputStream.nullInputStream();
        long long59 = inputStream57.skip((long) 'a');
        byte[] byteArray60 = new byte[] {};
        int int61 = inputStream57.read(byteArray60);
        int int62 = inputStream48.read(byteArray60);
        long long64 = inputStream48.skip((long) 0);
        byte[] byteArray65 = inputStream48.readAllBytes();
        byte[] byteArray67 = inputStream48.readNBytes((int) (byte) 1);
        byte[] byteArray68 = inputStream48.readAllBytes();
        byte[] byteArray70 = inputStream48.readNBytes((int) (byte) 1);
        int int71 = inputStream0.read(byteArray70);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray4);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray4), "[]");
        org.junit.Assert.assertNotNull(inputStream5);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(inputStream16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(inputStream26);
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + (-1) + "'", int33 == (-1));
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(inputStream35);
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(inputStream48);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + (-1) + "'", int55 == (-1));
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertNotNull(inputStream57);
        org.junit.Assert.assertTrue("'" + long59 + "' != '" + 0L + "'", long59 == 0L);
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[]");
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertTrue("'" + int62 + "' != '" + 0 + "'", int62 == 0);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertNotNull(byteArray67);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray67), "[]");
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[]");
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[]");
        org.junit.Assert.assertTrue("'" + int71 + "' != '" + 0 + "'", int71 == 0);
    }

    @Test
    public void test278() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test278");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray13 = new byte[] {};
        int int14 = inputStream10.read(byteArray13);
        byte[] byteArray16 = inputStream10.readNBytes(10);
        long long18 = inputStream10.skip((long) '4');
        byte[] byteArray19 = inputStream10.readAllBytes();
        java.io.InputStream inputStream20 = java.io.InputStream.nullInputStream();
        long long22 = inputStream20.skip((long) 'a');
        byte[] byteArray26 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int27 = inputStream20.read(byteArray26);
        byte[] byteArray29 = inputStream20.readNBytes((int) (short) 100);
        int int30 = inputStream10.read(byteArray29);
        int int31 = inputStream0.read(byteArray29);
        java.io.OutputStream outputStream32 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long33 = inputStream0.transferTo(outputStream32);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(inputStream20);
        org.junit.Assert.assertTrue("'" + long22 + "' != '" + 0L + "'", long22 == 0L);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + (-1) + "'", int27 == (-1));
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + 0 + "'", int30 == 0);
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
    }

    @Test
    public void test279() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test279");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        byte[] byteArray8 = inputStream0.readNBytes((int) '4');
        long long10 = inputStream0.skip((long) 100);
        byte[] byteArray11 = inputStream0.readAllBytes();
        byte[] byteArray13 = inputStream0.readNBytes((int) (short) 10);
        java.lang.Class<?> wildcardClass14 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test280() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test280");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        byte[] byteArray5 = inputStream0.readAllBytes();
        java.io.InputStream inputStream6 = java.io.InputStream.nullInputStream();
        long long8 = inputStream6.skip((long) 'a');
        byte[] byteArray9 = new byte[] {};
        int int10 = inputStream6.read(byteArray9);
        byte[] byteArray12 = inputStream6.readNBytes(10);
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        long long15 = inputStream13.skip((long) 'a');
        byte[] byteArray16 = new byte[] {};
        int int17 = inputStream13.read(byteArray16);
        byte[] byteArray19 = inputStream13.readNBytes(10);
        int int20 = inputStream6.read(byteArray19);
        byte[] byteArray22 = inputStream6.readNBytes((int) (byte) 100);
        int int23 = inputStream0.read(byteArray22);
        byte[] byteArray25 = inputStream0.readNBytes((int) (short) 1);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertNotNull(inputStream6);
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
    }

    @Test
    public void test281() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test281");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = inputStream0.readAllBytes();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
    }

    @Test
    public void test282() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test282");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        java.io.InputStream inputStream1 = java.io.InputStream.nullInputStream();
        byte[] byteArray2 = inputStream1.readAllBytes();
        java.io.InputStream inputStream3 = java.io.InputStream.nullInputStream();
        long long5 = inputStream3.skip((long) 'a');
        byte[] byteArray6 = new byte[] {};
        int int7 = inputStream3.read(byteArray6);
        byte[] byteArray9 = inputStream3.readNBytes(10);
        int int10 = inputStream1.read(byteArray9);
        byte[] byteArray11 = inputStream1.readAllBytes();
        int int12 = inputStream0.read(byteArray11);
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        long long15 = inputStream13.skip((long) 'a');
        byte[] byteArray19 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int20 = inputStream13.read(byteArray19);
        byte[] byteArray22 = inputStream13.readNBytes((int) (short) 100);
        byte[] byteArray23 = inputStream13.readAllBytes();
        int int24 = inputStream0.read(byteArray23);
        long long26 = inputStream0.skip((long) 10);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(inputStream1);
        org.junit.Assert.assertNotNull(byteArray2);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray2), "[]");
        org.junit.Assert.assertNotNull(inputStream3);
        org.junit.Assert.assertTrue("'" + long5 + "' != '" + 0L + "'", long5 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + 0 + "'", int7 == 0);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertTrue("'" + int10 + "' != '" + 0 + "'", int10 == 0);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
    }

    @Test
    public void test283() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test283");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        java.io.InputStream inputStream1 = java.io.InputStream.nullInputStream();
        long long3 = inputStream1.skip((long) 'a');
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int8 = inputStream1.read(byteArray7);
        byte[] byteArray9 = inputStream1.readAllBytes();
        byte[] byteArray10 = inputStream1.readAllBytes();
        byte[] byteArray11 = new byte[] {};
        int int12 = inputStream1.read(byteArray11);
        byte[] byteArray14 = inputStream1.readNBytes((int) (short) 100);
        int int15 = inputStream0.read(byteArray14);
        java.lang.Class<?> wildcardClass16 = inputStream0.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(inputStream1);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + int12 + "' != '" + 0 + "'", int12 == 0);
        org.junit.Assert.assertNotNull(byteArray14);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray14), "[]");
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertNotNull(wildcardClass16);
    }

    @Test
    public void test284() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test284");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream7.read(byteArray10);
        byte[] byteArray13 = inputStream7.readNBytes(10);
        int int14 = inputStream0.read(byteArray13);
        byte[] byteArray16 = inputStream0.readNBytes((int) (byte) 100);
        java.io.InputStream inputStream17 = java.io.InputStream.nullInputStream();
        long long19 = inputStream17.skip((long) 'a');
        byte[] byteArray20 = new byte[] {};
        int int21 = inputStream17.read(byteArray20);
        byte[] byteArray23 = inputStream17.readNBytes(10);
        long long25 = inputStream17.skip((long) '4');
        byte[] byteArray26 = inputStream17.readAllBytes();
        byte[] byteArray28 = inputStream17.readNBytes(1);
        java.io.InputStream inputStream29 = java.io.InputStream.nullInputStream();
        long long31 = inputStream29.skip((long) 'a');
        byte[] byteArray32 = new byte[] {};
        int int33 = inputStream29.read(byteArray32);
        byte[] byteArray35 = inputStream29.readNBytes(10);
        long long37 = inputStream29.skip((long) '4');
        byte[] byteArray39 = inputStream29.readNBytes((int) (byte) 10);
        int int40 = inputStream17.read(byteArray39);
        java.io.InputStream inputStream41 = java.io.InputStream.nullInputStream();
        long long43 = inputStream41.skip((long) 'a');
        byte[] byteArray44 = new byte[] {};
        int int45 = inputStream41.read(byteArray44);
        byte[] byteArray47 = inputStream41.readNBytes(10);
        long long49 = inputStream41.skip((long) '4');
        byte[] byteArray50 = inputStream41.readAllBytes();
        int int51 = inputStream17.read(byteArray50);
        // The following exception was thrown during execution in test generation
        try {
            int int54 = inputStream0.readNBytes(byteArray50, (int) (byte) 0, (int) (short) 1);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [0, 0 + 1) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(inputStream17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertNotNull(inputStream29);
        org.junit.Assert.assertTrue("'" + long31 + "' != '" + 0L + "'", long31 == 0L);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertTrue("'" + int33 + "' != '" + 0 + "'", int33 == 0);
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertTrue("'" + long37 + "' != '" + 0L + "'", long37 == 0L);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(inputStream41);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertTrue("'" + int51 + "' != '" + 0 + "'", int51 == 0);
    }

    @Test
    public void test285() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test285");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream7.read(byteArray10);
        byte[] byteArray13 = inputStream7.readNBytes(10);
        int int14 = inputStream0.read(byteArray13);
        byte[] byteArray16 = inputStream0.readNBytes((int) (byte) 100);
        java.io.InputStream inputStream17 = java.io.InputStream.nullInputStream();
        long long19 = inputStream17.skip((long) 'a');
        byte[] byteArray20 = new byte[] {};
        int int21 = inputStream17.read(byteArray20);
        byte[] byteArray23 = inputStream17.readNBytes(10);
        long long25 = inputStream17.skip((long) '4');
        byte[] byteArray26 = inputStream17.readAllBytes();
        java.io.InputStream inputStream27 = java.io.InputStream.nullInputStream();
        long long29 = inputStream27.skip((long) 'a');
        byte[] byteArray30 = new byte[] {};
        int int31 = inputStream27.read(byteArray30);
        byte[] byteArray33 = inputStream27.readNBytes(10);
        long long35 = inputStream27.skip((long) '4');
        byte[] byteArray36 = inputStream27.readAllBytes();
        java.io.InputStream inputStream37 = java.io.InputStream.nullInputStream();
        long long39 = inputStream37.skip((long) 'a');
        byte[] byteArray43 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int44 = inputStream37.read(byteArray43);
        byte[] byteArray46 = inputStream37.readNBytes((int) (short) 100);
        int int47 = inputStream27.read(byteArray46);
        int int48 = inputStream17.read(byteArray46);
        int int49 = inputStream0.read(byteArray46);
        byte[] byteArray50 = inputStream0.readAllBytes();
        byte[] byteArray51 = inputStream0.readAllBytes();
        byte[] byteArray52 = inputStream0.readAllBytes();
        byte[] byteArray53 = inputStream0.readAllBytes();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(inputStream17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertNotNull(inputStream27);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertNotNull(inputStream37);
        org.junit.Assert.assertTrue("'" + long39 + "' != '" + 0L + "'", long39 == 0L);
        org.junit.Assert.assertNotNull(byteArray43);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray43), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int44 + "' != '" + (-1) + "'", int44 == (-1));
        org.junit.Assert.assertNotNull(byteArray46);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray46), "[]");
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + 0 + "'", int48 == 0);
        org.junit.Assert.assertTrue("'" + int49 + "' != '" + 0 + "'", int49 == 0);
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertNotNull(byteArray52);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray52), "[]");
        org.junit.Assert.assertNotNull(byteArray53);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray53), "[]");
    }

    @Test
    public void test286() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test286");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream7.read(byteArray10);
        byte[] byteArray13 = inputStream7.readNBytes(10);
        int int14 = inputStream0.read(byteArray13);
        byte[] byteArray15 = inputStream0.readAllBytes();
        java.io.InputStream inputStream16 = java.io.InputStream.nullInputStream();
        long long18 = inputStream16.skip((long) 'a');
        byte[] byteArray22 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int23 = inputStream16.read(byteArray22);
        byte[] byteArray24 = inputStream16.readAllBytes();
        byte[] byteArray25 = inputStream16.readAllBytes();
        byte[] byteArray26 = new byte[] {};
        int int27 = inputStream16.read(byteArray26);
        byte[] byteArray29 = inputStream16.readNBytes((int) (short) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int32 = inputStream0.read(byteArray29, (int) (byte) 100, 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [100, 100 + 10) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertNotNull(inputStream16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + (-1) + "'", int23 == (-1));
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
    }

    @Test
    public void test287() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test287");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        byte[] byteArray10 = new byte[] { (byte) 1, (byte) 10, (byte) 1 };
        int int11 = inputStream0.read(byteArray10);
        byte[] byteArray13 = inputStream0.readNBytes((int) (byte) 1);
        java.io.InputStream inputStream14 = java.io.InputStream.nullInputStream();
        long long16 = inputStream14.skip((long) 'a');
        long long18 = inputStream14.skip((long) 10);
        byte[] byteArray20 = inputStream14.readNBytes((int) (short) 10);
        byte[] byteArray22 = inputStream14.readNBytes((int) (byte) 0);
        java.io.InputStream inputStream23 = java.io.InputStream.nullInputStream();
        long long25 = inputStream23.skip((long) 'a');
        byte[] byteArray26 = new byte[] {};
        int int27 = inputStream23.read(byteArray26);
        byte[] byteArray29 = inputStream23.readNBytes(10);
        java.io.InputStream inputStream30 = java.io.InputStream.nullInputStream();
        long long32 = inputStream30.skip((long) 'a');
        byte[] byteArray33 = new byte[] {};
        int int34 = inputStream30.read(byteArray33);
        byte[] byteArray36 = inputStream30.readNBytes(10);
        int int37 = inputStream23.read(byteArray36);
        byte[] byteArray39 = inputStream23.readNBytes((int) (byte) 100);
        int int40 = inputStream14.read(byteArray39);
        int int41 = inputStream0.read(byteArray39);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[1, 10, 1]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + (-1) + "'", int11 == (-1));
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(inputStream14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertNotNull(inputStream23);
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(inputStream30);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
    }

    @Test
    public void test288() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test288");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream7.read(byteArray10);
        byte[] byteArray13 = inputStream7.readNBytes(10);
        int int14 = inputStream0.read(byteArray13);
        byte[] byteArray16 = inputStream0.readNBytes((int) (byte) 100);
        java.io.InputStream inputStream17 = java.io.InputStream.nullInputStream();
        long long19 = inputStream17.skip((long) 'a');
        byte[] byteArray23 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int24 = inputStream17.read(byteArray23);
        byte[] byteArray26 = inputStream17.readNBytes((int) (short) 100);
        int int27 = inputStream0.read(byteArray26);
        java.io.InputStream inputStream28 = java.io.InputStream.nullInputStream();
        byte[] byteArray29 = inputStream28.readAllBytes();
        java.io.InputStream inputStream30 = java.io.InputStream.nullInputStream();
        long long32 = inputStream30.skip((long) 'a');
        byte[] byteArray33 = new byte[] {};
        int int34 = inputStream30.read(byteArray33);
        byte[] byteArray36 = inputStream30.readNBytes(10);
        int int37 = inputStream28.read(byteArray36);
        byte[] byteArray39 = inputStream28.readNBytes((int) 'a');
        byte[] byteArray40 = inputStream28.readAllBytes();
        java.io.InputStream inputStream41 = java.io.InputStream.nullInputStream();
        long long43 = inputStream41.skip((long) 'a');
        byte[] byteArray44 = new byte[] {};
        int int45 = inputStream41.read(byteArray44);
        byte[] byteArray47 = inputStream41.readNBytes(10);
        long long49 = inputStream41.skip((long) '4');
        long long51 = inputStream41.skip(1L);
        java.io.InputStream inputStream52 = java.io.InputStream.nullInputStream();
        long long54 = inputStream52.skip((long) 'a');
        byte[] byteArray58 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int59 = inputStream52.read(byteArray58);
        byte[] byteArray60 = inputStream52.readAllBytes();
        byte[] byteArray61 = inputStream52.readAllBytes();
        java.io.InputStream inputStream62 = java.io.InputStream.nullInputStream();
        long long64 = inputStream62.skip((long) 'a');
        byte[] byteArray68 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int69 = inputStream62.read(byteArray68);
        byte[] byteArray70 = inputStream62.readAllBytes();
        java.io.InputStream inputStream71 = java.io.InputStream.nullInputStream();
        long long73 = inputStream71.skip((long) 'a');
        byte[] byteArray74 = new byte[] {};
        int int75 = inputStream71.read(byteArray74);
        int int76 = inputStream62.read(byteArray74);
        byte[] byteArray78 = inputStream62.readNBytes((int) (byte) 0);
        int int81 = inputStream52.read(byteArray78, 0, 0);
        int int82 = inputStream41.read(byteArray78);
        int int83 = inputStream28.read(byteArray78);
        // The following exception was thrown during execution in test generation
        try {
            int int86 = inputStream0.read(byteArray78, (int) (byte) -1, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [-1, -1 + 0) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(inputStream17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(inputStream28);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(inputStream30);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertNotNull(byteArray40);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray40), "[]");
        org.junit.Assert.assertNotNull(inputStream41);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertNotNull(byteArray44);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray44), "[]");
        org.junit.Assert.assertTrue("'" + int45 + "' != '" + 0 + "'", int45 == 0);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertTrue("'" + long49 + "' != '" + 0L + "'", long49 == 0L);
        org.junit.Assert.assertTrue("'" + long51 + "' != '" + 0L + "'", long51 == 0L);
        org.junit.Assert.assertNotNull(inputStream52);
        org.junit.Assert.assertTrue("'" + long54 + "' != '" + 0L + "'", long54 == 0L);
        org.junit.Assert.assertNotNull(byteArray58);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray58), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int59 + "' != '" + (-1) + "'", int59 == (-1));
        org.junit.Assert.assertNotNull(byteArray60);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray60), "[]");
        org.junit.Assert.assertNotNull(byteArray61);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray61), "[]");
        org.junit.Assert.assertNotNull(inputStream62);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int69 + "' != '" + (-1) + "'", int69 == (-1));
        org.junit.Assert.assertNotNull(byteArray70);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray70), "[]");
        org.junit.Assert.assertNotNull(inputStream71);
        org.junit.Assert.assertTrue("'" + long73 + "' != '" + 0L + "'", long73 == 0L);
        org.junit.Assert.assertNotNull(byteArray74);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray74), "[]");
        org.junit.Assert.assertTrue("'" + int75 + "' != '" + 0 + "'", int75 == 0);
        org.junit.Assert.assertTrue("'" + int76 + "' != '" + 0 + "'", int76 == 0);
        org.junit.Assert.assertNotNull(byteArray78);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray78), "[]");
        org.junit.Assert.assertTrue("'" + int81 + "' != '" + 0 + "'", int81 == 0);
        org.junit.Assert.assertTrue("'" + int82 + "' != '" + 0 + "'", int82 == 0);
        org.junit.Assert.assertTrue("'" + int83 + "' != '" + 0 + "'", int83 == 0);
    }

    @Test
    public void test289() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test289");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray16 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int17 = inputStream10.read(byteArray16);
        byte[] byteArray19 = inputStream10.readNBytes((int) (short) 100);
        int int20 = inputStream0.read(byteArray19);
        java.io.InputStream inputStream21 = java.io.InputStream.nullInputStream();
        long long23 = inputStream21.skip((long) 'a');
        byte[] byteArray25 = inputStream21.readNBytes(10);
        // The following exception was thrown during execution in test generation
        try {
            int int28 = inputStream0.read(byteArray25, 1, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [1, 1 + 10) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + (-1) + "'", int17 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(inputStream21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
    }

    @Test
    public void test290() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test290");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray9 = inputStream0.readNBytes((int) (short) 100);
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        byte[] byteArray11 = inputStream10.readAllBytes();
        java.io.InputStream inputStream12 = java.io.InputStream.nullInputStream();
        long long14 = inputStream12.skip((long) 'a');
        byte[] byteArray15 = new byte[] {};
        int int16 = inputStream12.read(byteArray15);
        byte[] byteArray18 = inputStream12.readNBytes(10);
        int int19 = inputStream10.read(byteArray18);
        byte[] byteArray20 = inputStream10.readAllBytes();
        int int21 = inputStream0.read(byteArray20);
        java.io.InputStream inputStream22 = java.io.InputStream.nullInputStream();
        long long24 = inputStream22.skip((long) 'a');
        byte[] byteArray28 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int29 = inputStream22.read(byteArray28);
        int int30 = inputStream0.read(byteArray28);
        long long32 = inputStream0.skip((long) 'a');
        java.io.InputStream inputStream33 = java.io.InputStream.nullInputStream();
        long long35 = inputStream33.skip((long) 'a');
        byte[] byteArray36 = new byte[] {};
        int int37 = inputStream33.read(byteArray36);
        byte[] byteArray39 = inputStream33.readNBytes(10);
        long long41 = inputStream33.skip((long) '4');
        byte[] byteArray42 = inputStream33.readAllBytes();
        long long44 = inputStream33.skip((long) '4');
        java.io.InputStream inputStream45 = java.io.InputStream.nullInputStream();
        java.io.InputStream inputStream46 = java.io.InputStream.nullInputStream();
        byte[] byteArray47 = inputStream46.readAllBytes();
        java.io.InputStream inputStream48 = java.io.InputStream.nullInputStream();
        long long50 = inputStream48.skip((long) 'a');
        byte[] byteArray51 = new byte[] {};
        int int52 = inputStream48.read(byteArray51);
        byte[] byteArray54 = inputStream48.readNBytes(10);
        int int55 = inputStream46.read(byteArray54);
        byte[] byteArray56 = inputStream46.readAllBytes();
        int int57 = inputStream45.read(byteArray56);
        byte[] byteArray59 = inputStream45.readNBytes(10);
        int int60 = inputStream33.read(byteArray59);
        int int61 = inputStream0.read(byteArray59);
        java.io.InputStream inputStream62 = java.io.InputStream.nullInputStream();
        long long64 = inputStream62.skip((long) 'a');
        byte[] byteArray65 = new byte[] {};
        int int66 = inputStream62.read(byteArray65);
        byte[] byteArray68 = inputStream62.readNBytes(10);
        long long70 = inputStream62.skip((long) '4');
        byte[] byteArray71 = inputStream62.readAllBytes();
        byte[] byteArray73 = inputStream62.readNBytes(1);
        java.io.InputStream inputStream74 = java.io.InputStream.nullInputStream();
        long long76 = inputStream74.skip((long) 'a');
        byte[] byteArray77 = new byte[] {};
        int int78 = inputStream74.read(byteArray77);
        byte[] byteArray80 = inputStream74.readNBytes(10);
        long long82 = inputStream74.skip((long) '4');
        byte[] byteArray84 = inputStream74.readNBytes((int) (byte) 10);
        int int85 = inputStream62.read(byteArray84);
        // The following exception was thrown during execution in test generation
        try {
            int int88 = inputStream0.read(byteArray84, 100, (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [100, 100 + 0) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(inputStream12);
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + 0 + "'", int16 == 0);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(inputStream22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
        org.junit.Assert.assertTrue("'" + int30 + "' != '" + (-1) + "'", int30 == (-1));
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(inputStream33);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(byteArray36);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray36), "[]");
        org.junit.Assert.assertTrue("'" + int37 + "' != '" + 0 + "'", int37 == 0);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[]");
        org.junit.Assert.assertTrue("'" + long41 + "' != '" + 0L + "'", long41 == 0L);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNotNull(inputStream45);
        org.junit.Assert.assertNotNull(inputStream46);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[]");
        org.junit.Assert.assertNotNull(inputStream48);
        org.junit.Assert.assertTrue("'" + long50 + "' != '" + 0L + "'", long50 == 0L);
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertNotNull(byteArray54);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray54), "[]");
        org.junit.Assert.assertTrue("'" + int55 + "' != '" + 0 + "'", int55 == 0);
        org.junit.Assert.assertNotNull(byteArray56);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray56), "[]");
        org.junit.Assert.assertTrue("'" + int57 + "' != '" + 0 + "'", int57 == 0);
        org.junit.Assert.assertNotNull(byteArray59);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray59), "[]");
        org.junit.Assert.assertTrue("'" + int60 + "' != '" + 0 + "'", int60 == 0);
        org.junit.Assert.assertTrue("'" + int61 + "' != '" + 0 + "'", int61 == 0);
        org.junit.Assert.assertNotNull(inputStream62);
        org.junit.Assert.assertTrue("'" + long64 + "' != '" + 0L + "'", long64 == 0L);
        org.junit.Assert.assertNotNull(byteArray65);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray65), "[]");
        org.junit.Assert.assertTrue("'" + int66 + "' != '" + 0 + "'", int66 == 0);
        org.junit.Assert.assertNotNull(byteArray68);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray68), "[]");
        org.junit.Assert.assertTrue("'" + long70 + "' != '" + 0L + "'", long70 == 0L);
        org.junit.Assert.assertNotNull(byteArray71);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray71), "[]");
        org.junit.Assert.assertNotNull(byteArray73);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray73), "[]");
        org.junit.Assert.assertNotNull(inputStream74);
        org.junit.Assert.assertTrue("'" + long76 + "' != '" + 0L + "'", long76 == 0L);
        org.junit.Assert.assertNotNull(byteArray77);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray77), "[]");
        org.junit.Assert.assertTrue("'" + int78 + "' != '" + 0 + "'", int78 == 0);
        org.junit.Assert.assertNotNull(byteArray80);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray80), "[]");
        org.junit.Assert.assertTrue("'" + long82 + "' != '" + 0L + "'", long82 == 0L);
        org.junit.Assert.assertNotNull(byteArray84);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray84), "[]");
        org.junit.Assert.assertTrue("'" + int85 + "' != '" + 0 + "'", int85 == 0);
    }

    @Test
    public void test291() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test291");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        java.io.InputStream inputStream7 = java.io.InputStream.nullInputStream();
        long long9 = inputStream7.skip((long) 'a');
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream7.read(byteArray10);
        byte[] byteArray13 = inputStream7.readNBytes(10);
        int int14 = inputStream0.read(byteArray13);
        byte[] byteArray16 = inputStream0.readNBytes((int) (byte) 100);
        java.io.InputStream inputStream17 = java.io.InputStream.nullInputStream();
        long long19 = inputStream17.skip((long) 'a');
        byte[] byteArray20 = new byte[] {};
        int int21 = inputStream17.read(byteArray20);
        byte[] byteArray23 = inputStream17.readNBytes(10);
        java.io.InputStream inputStream24 = java.io.InputStream.nullInputStream();
        long long26 = inputStream24.skip((long) 'a');
        byte[] byteArray27 = new byte[] {};
        int int28 = inputStream24.read(byteArray27);
        byte[] byteArray30 = inputStream24.readNBytes(10);
        int int31 = inputStream17.read(byteArray30);
        long long33 = inputStream17.skip((long) (byte) 1);
        byte[] byteArray34 = inputStream17.readAllBytes();
        int int35 = inputStream0.read(byteArray34);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(inputStream7);
        org.junit.Assert.assertTrue("'" + long9 + "' != '" + 0L + "'", long9 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(inputStream17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(inputStream24);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
    }

    @Test
    public void test292() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test292");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray9 = inputStream0.readNBytes((int) (short) 100);
        byte[] byteArray10 = inputStream0.readAllBytes();
        byte[] byteArray12 = inputStream0.readNBytes((int) (byte) 10);
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        long long15 = inputStream13.skip((long) 'a');
        byte[] byteArray19 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int20 = inputStream13.read(byteArray19);
        byte[] byteArray21 = inputStream13.readAllBytes();
        java.io.InputStream inputStream22 = java.io.InputStream.nullInputStream();
        long long24 = inputStream22.skip((long) 'a');
        byte[] byteArray25 = new byte[] {};
        int int26 = inputStream22.read(byteArray25);
        int int27 = inputStream13.read(byteArray25);
        long long29 = inputStream13.skip((long) 0);
        byte[] byteArray30 = inputStream13.readAllBytes();
        byte[] byteArray32 = inputStream13.readNBytes((int) (byte) 100);
        byte[] byteArray33 = inputStream13.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int36 = inputStream0.read(byteArray33, 100, (int) 'a');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [100, 100 + 97) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + (-1) + "'", int20 == (-1));
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(inputStream22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertTrue("'" + long29 + "' != '" + 0L + "'", long29 == 0L);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
    }

    @Test
    public void test293() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test293");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        long long16 = inputStream0.skip((-1L));
        byte[] byteArray18 = inputStream0.readNBytes((int) '4');
        long long20 = inputStream0.skip(1L);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
    }

    @Test
    public void test294() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test294");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        java.io.InputStream inputStream15 = java.io.InputStream.nullInputStream();
        long long17 = inputStream15.skip((long) 'a');
        byte[] byteArray18 = new byte[] {};
        int int19 = inputStream15.read(byteArray18);
        byte[] byteArray21 = inputStream15.readNBytes(10);
        long long23 = inputStream15.skip((long) '4');
        byte[] byteArray24 = inputStream15.readAllBytes();
        byte[] byteArray26 = inputStream15.readNBytes((int) (short) 100);
        int int27 = inputStream0.read(byteArray26);
        byte[] byteArray29 = inputStream0.readNBytes((int) (byte) 1);
        byte[] byteArray30 = inputStream0.readAllBytes();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(inputStream15);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertTrue("'" + int19 + "' != '" + 0 + "'", int19 == 0);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertTrue("'" + int27 + "' != '" + 0 + "'", int27 == 0);
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
    }

    @Test
    public void test295() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test295");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = new byte[] {};
        int int11 = inputStream0.read(byteArray10);
        byte[] byteArray13 = inputStream0.readNBytes((int) (short) 0);
        java.io.InputStream inputStream14 = java.io.InputStream.nullInputStream();
        long long16 = inputStream14.skip((long) 'a');
        byte[] byteArray20 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int21 = inputStream14.read(byteArray20);
        byte[] byteArray22 = inputStream14.readAllBytes();
        byte[] byteArray23 = inputStream14.readAllBytes();
        byte[] byteArray24 = inputStream14.readAllBytes();
        java.io.InputStream inputStream25 = java.io.InputStream.nullInputStream();
        long long27 = inputStream25.skip((long) 'a');
        byte[] byteArray31 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int32 = inputStream25.read(byteArray31);
        byte[] byteArray33 = inputStream25.readAllBytes();
        byte[] byteArray34 = inputStream25.readAllBytes();
        byte[] byteArray35 = new byte[] {};
        int int36 = inputStream25.read(byteArray35);
        byte[] byteArray38 = inputStream25.readNBytes((int) (short) 100);
        int int39 = inputStream14.read(byteArray38);
        int int40 = inputStream0.read(byteArray38);
        java.io.InputStream inputStream41 = java.io.InputStream.nullInputStream();
        long long43 = inputStream41.skip((long) 'a');
        byte[] byteArray47 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int48 = inputStream41.read(byteArray47);
        byte[] byteArray49 = inputStream41.readAllBytes();
        byte[] byteArray50 = inputStream41.readAllBytes();
        byte[] byteArray51 = new byte[] {};
        int int52 = inputStream41.read(byteArray51);
        int int53 = inputStream0.read(byteArray51);
        long long55 = inputStream0.skip(10L);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertTrue("'" + int11 + "' != '" + 0 + "'", int11 == 0);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(inputStream14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + (-1) + "'", int21 == (-1));
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertNotNull(inputStream25);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(byteArray31);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray31), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int32 + "' != '" + (-1) + "'", int32 == (-1));
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
        org.junit.Assert.assertTrue("'" + int39 + "' != '" + 0 + "'", int39 == 0);
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertNotNull(inputStream41);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
        org.junit.Assert.assertNotNull(byteArray47);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray47), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int48 + "' != '" + (-1) + "'", int48 == (-1));
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
        org.junit.Assert.assertNotNull(byteArray50);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray50), "[]");
        org.junit.Assert.assertNotNull(byteArray51);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray51), "[]");
        org.junit.Assert.assertTrue("'" + int52 + "' != '" + 0 + "'", int52 == 0);
        org.junit.Assert.assertTrue("'" + int53 + "' != '" + 0 + "'", int53 == 0);
        org.junit.Assert.assertTrue("'" + long55 + "' != '" + 0L + "'", long55 == 0L);
    }

    @Test
    public void test296() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test296");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray15 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int16 = inputStream9.read(byteArray15);
        byte[] byteArray17 = inputStream9.readAllBytes();
        java.io.InputStream inputStream18 = java.io.InputStream.nullInputStream();
        long long20 = inputStream18.skip((long) 'a');
        byte[] byteArray21 = new byte[] {};
        int int22 = inputStream18.read(byteArray21);
        int int23 = inputStream9.read(byteArray21);
        int int26 = inputStream0.read(byteArray21, 0, 0);
        byte[] byteArray27 = inputStream0.readAllBytes();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int16 + "' != '" + (-1) + "'", int16 == (-1));
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertNotNull(inputStream18);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
    }

    @Test
    public void test297() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test297");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray11 = inputStream0.readNBytes((int) (short) 100);
        long long13 = inputStream0.skip(0L);
        java.io.OutputStream outputStream14 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long15 = inputStream0.transferTo(outputStream14);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
    }

    @Test
    public void test298() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test298");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        long long10 = inputStream0.skip(1L);
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int18 = inputStream11.read(byteArray17);
        byte[] byteArray19 = inputStream11.readAllBytes();
        byte[] byteArray20 = inputStream11.readAllBytes();
        java.io.InputStream inputStream21 = java.io.InputStream.nullInputStream();
        long long23 = inputStream21.skip((long) 'a');
        byte[] byteArray27 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int28 = inputStream21.read(byteArray27);
        byte[] byteArray29 = inputStream21.readAllBytes();
        java.io.InputStream inputStream30 = java.io.InputStream.nullInputStream();
        long long32 = inputStream30.skip((long) 'a');
        byte[] byteArray33 = new byte[] {};
        int int34 = inputStream30.read(byteArray33);
        int int35 = inputStream21.read(byteArray33);
        byte[] byteArray37 = inputStream21.readNBytes((int) (byte) 0);
        int int40 = inputStream11.read(byteArray37, 0, 0);
        int int41 = inputStream0.read(byteArray37);
        long long43 = inputStream0.skip((long) '#');
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(inputStream21);
        org.junit.Assert.assertTrue("'" + long23 + "' != '" + 0L + "'", long23 == 0L);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + (-1) + "'", int28 == (-1));
        org.junit.Assert.assertNotNull(byteArray29);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray29), "[]");
        org.junit.Assert.assertNotNull(inputStream30);
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertTrue("'" + int34 + "' != '" + 0 + "'", int34 == 0);
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + 0 + "'", int40 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertTrue("'" + long43 + "' != '" + 0L + "'", long43 == 0L);
    }

    @Test
    public void test299() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test299");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        byte[] byteArray16 = inputStream0.readNBytes((int) (byte) 0);
        long long18 = inputStream0.skip((long) 1);
        byte[] byteArray19 = inputStream0.readAllBytes();
        java.io.InputStream inputStream20 = java.io.InputStream.nullInputStream();
        byte[] byteArray21 = inputStream20.readAllBytes();
        java.io.InputStream inputStream22 = java.io.InputStream.nullInputStream();
        long long24 = inputStream22.skip((long) 'a');
        byte[] byteArray25 = new byte[] {};
        int int26 = inputStream22.read(byteArray25);
        byte[] byteArray28 = inputStream22.readNBytes(10);
        int int29 = inputStream20.read(byteArray28);
        byte[] byteArray30 = inputStream20.readAllBytes();
        // The following exception was thrown during execution in test generation
        try {
            int int33 = inputStream0.read(byteArray30, (int) (short) 1, (int) ' ');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [1, 1 + 32) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(inputStream20);
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertNotNull(inputStream22);
        org.junit.Assert.assertTrue("'" + long24 + "' != '" + 0L + "'", long24 == 0L);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
    }

    @Test
    public void test300() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test300");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) '#');
        java.io.InputStream inputStream5 = java.io.InputStream.nullInputStream();
        long long7 = inputStream5.skip((long) 'a');
        byte[] byteArray8 = new byte[] {};
        int int9 = inputStream5.read(byteArray8);
        byte[] byteArray11 = inputStream5.readNBytes(10);
        long long13 = inputStream5.skip((long) '4');
        long long15 = inputStream5.skip(1L);
        byte[] byteArray16 = inputStream5.readAllBytes();
        java.io.InputStream inputStream17 = java.io.InputStream.nullInputStream();
        byte[] byteArray18 = inputStream17.readAllBytes();
        java.io.InputStream inputStream19 = java.io.InputStream.nullInputStream();
        long long21 = inputStream19.skip((long) 'a');
        byte[] byteArray22 = new byte[] {};
        int int23 = inputStream19.read(byteArray22);
        byte[] byteArray25 = inputStream19.readNBytes(10);
        int int26 = inputStream17.read(byteArray25);
        int int29 = inputStream5.readNBytes(byteArray25, (int) (byte) 0, (int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int32 = inputStream0.read(byteArray25, (int) ' ', (int) '#');
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [32, 32 + 35) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(inputStream5);
        org.junit.Assert.assertTrue("'" + long7 + "' != '" + 0L + "'", long7 == 0L);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(inputStream17);
        org.junit.Assert.assertNotNull(byteArray18);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray18), "[]");
        org.junit.Assert.assertNotNull(inputStream19);
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + 0 + "'", int29 == 0);
    }

    @Test
    public void test301() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test301");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        long long10 = inputStream0.skip(1L);
        byte[] byteArray11 = inputStream0.readAllBytes();
        java.io.InputStream inputStream12 = java.io.InputStream.nullInputStream();
        byte[] byteArray13 = inputStream12.readAllBytes();
        java.io.InputStream inputStream14 = java.io.InputStream.nullInputStream();
        long long16 = inputStream14.skip((long) 'a');
        byte[] byteArray17 = new byte[] {};
        int int18 = inputStream14.read(byteArray17);
        byte[] byteArray20 = inputStream14.readNBytes(10);
        int int21 = inputStream12.read(byteArray20);
        int int24 = inputStream0.readNBytes(byteArray20, (int) (byte) 0, (int) (byte) 0);
        java.io.OutputStream outputStream25 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long26 = inputStream0.transferTo(outputStream25);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(inputStream12);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(inputStream14);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + 0 + "'", int18 == 0);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + 0 + "'", int24 == 0);
    }

    @Test
    public void test302() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test302");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        long long4 = inputStream0.skip((long) 10);
        byte[] byteArray6 = inputStream0.readNBytes((int) (short) 10);
        byte[] byteArray8 = inputStream0.readNBytes((int) (byte) 0);
        long long10 = inputStream0.skip((long) (byte) -1);
        byte[] byteArray12 = inputStream0.readNBytes(100);
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        long long15 = inputStream13.skip((long) 'a');
        byte[] byteArray16 = new byte[] {};
        int int17 = inputStream13.read(byteArray16);
        byte[] byteArray19 = inputStream13.readNBytes(10);
        long long21 = inputStream13.skip((long) '4');
        byte[] byteArray23 = inputStream13.readNBytes((int) (byte) 10);
        java.io.InputStream inputStream24 = java.io.InputStream.nullInputStream();
        long long26 = inputStream24.skip((long) 'a');
        byte[] byteArray27 = new byte[] {};
        int int28 = inputStream24.read(byteArray27);
        byte[] byteArray30 = inputStream24.readNBytes(10);
        long long32 = inputStream24.skip((long) '4');
        byte[] byteArray33 = inputStream24.readAllBytes();
        byte[] byteArray35 = inputStream24.readNBytes(1);
        int int36 = inputStream13.read(byteArray35);
        byte[] byteArray38 = inputStream13.readNBytes((int) ' ');
        // The following exception was thrown during execution in test generation
        try {
            int int41 = inputStream0.readNBytes(byteArray38, (-1), (int) (short) 0);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [-1, -1 + 0) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + long10 + "' != '" + 0L + "'", long10 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertTrue("'" + long15 + "' != '" + 0L + "'", long15 == 0L);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertTrue("'" + int17 + "' != '" + 0 + "'", int17 == 0);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + long21 + "' != '" + 0L + "'", long21 == 0L);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertNotNull(inputStream24);
        org.junit.Assert.assertTrue("'" + long26 + "' != '" + 0L + "'", long26 == 0L);
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertTrue("'" + long32 + "' != '" + 0L + "'", long32 == 0L);
        org.junit.Assert.assertNotNull(byteArray33);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray33), "[]");
        org.junit.Assert.assertNotNull(byteArray35);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray35), "[]");
        org.junit.Assert.assertTrue("'" + int36 + "' != '" + 0 + "'", int36 == 0);
        org.junit.Assert.assertNotNull(byteArray38);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray38), "[]");
    }

    @Test
    public void test303() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test303");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        long long16 = inputStream0.skip((-1L));
        java.io.InputStream inputStream17 = java.io.InputStream.nullInputStream();
        long long19 = inputStream17.skip((long) 'a');
        byte[] byteArray20 = new byte[] {};
        int int21 = inputStream17.read(byteArray20);
        byte[] byteArray23 = inputStream17.readNBytes(10);
        long long25 = inputStream17.skip((long) '4');
        long long27 = inputStream17.skip(1L);
        byte[] byteArray28 = inputStream17.readAllBytes();
        java.io.InputStream inputStream29 = java.io.InputStream.nullInputStream();
        byte[] byteArray30 = inputStream29.readAllBytes();
        java.io.InputStream inputStream31 = java.io.InputStream.nullInputStream();
        long long33 = inputStream31.skip((long) 'a');
        byte[] byteArray34 = new byte[] {};
        int int35 = inputStream31.read(byteArray34);
        byte[] byteArray37 = inputStream31.readNBytes(10);
        int int38 = inputStream29.read(byteArray37);
        int int41 = inputStream17.readNBytes(byteArray37, (int) (byte) 0, (int) (byte) 0);
        byte[] byteArray42 = inputStream17.readAllBytes();
        int int43 = inputStream0.read(byteArray42);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + long16 + "' != '" + 0L + "'", long16 == 0L);
        org.junit.Assert.assertNotNull(inputStream17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertTrue("'" + int21 + "' != '" + 0 + "'", int21 == 0);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[]");
        org.junit.Assert.assertTrue("'" + long25 + "' != '" + 0L + "'", long25 == 0L);
        org.junit.Assert.assertTrue("'" + long27 + "' != '" + 0L + "'", long27 == 0L);
        org.junit.Assert.assertNotNull(byteArray28);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray28), "[]");
        org.junit.Assert.assertNotNull(inputStream29);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertNotNull(inputStream31);
        org.junit.Assert.assertTrue("'" + long33 + "' != '" + 0L + "'", long33 == 0L);
        org.junit.Assert.assertNotNull(byteArray34);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray34), "[]");
        org.junit.Assert.assertTrue("'" + int35 + "' != '" + 0 + "'", int35 == 0);
        org.junit.Assert.assertNotNull(byteArray37);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray37), "[]");
        org.junit.Assert.assertTrue("'" + int38 + "' != '" + 0 + "'", int38 == 0);
        org.junit.Assert.assertTrue("'" + int41 + "' != '" + 0 + "'", int41 == 0);
        org.junit.Assert.assertNotNull(byteArray42);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray42), "[]");
        org.junit.Assert.assertTrue("'" + int43 + "' != '" + 0 + "'", int43 == 0);
    }

    @Test
    public void test304() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test304");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray10 = inputStream0.readAllBytes();
        java.io.InputStream inputStream11 = java.io.InputStream.nullInputStream();
        long long13 = inputStream11.skip((long) 'a');
        byte[] byteArray17 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int18 = inputStream11.read(byteArray17);
        byte[] byteArray19 = inputStream11.readAllBytes();
        byte[] byteArray20 = inputStream11.readAllBytes();
        byte[] byteArray21 = new byte[] {};
        int int22 = inputStream11.read(byteArray21);
        byte[] byteArray24 = inputStream11.readNBytes((int) (short) 100);
        int int25 = inputStream0.read(byteArray24);
        byte[] byteArray26 = inputStream0.readAllBytes();
        long long28 = inputStream0.skip((long) '4');
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(inputStream11);
        org.junit.Assert.assertTrue("'" + long13 + "' != '" + 0L + "'", long13 == 0L);
        org.junit.Assert.assertNotNull(byteArray17);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray17), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int18 + "' != '" + (-1) + "'", int18 == (-1));
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertNotNull(byteArray20);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray20), "[]");
        org.junit.Assert.assertNotNull(byteArray21);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray21), "[]");
        org.junit.Assert.assertTrue("'" + int22 + "' != '" + 0 + "'", int22 == 0);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertTrue("'" + long28 + "' != '" + 0L + "'", long28 == 0L);
    }

    @Test
    public void test305() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test305");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        java.io.InputStream inputStream1 = java.io.InputStream.nullInputStream();
        long long3 = inputStream1.skip((long) 'a');
        byte[] byteArray7 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int8 = inputStream1.read(byteArray7);
        byte[] byteArray9 = inputStream1.readAllBytes();
        java.io.InputStream inputStream10 = java.io.InputStream.nullInputStream();
        long long12 = inputStream10.skip((long) 'a');
        byte[] byteArray13 = new byte[] {};
        int int14 = inputStream10.read(byteArray13);
        int int15 = inputStream1.read(byteArray13);
        long long17 = inputStream1.skip((long) 0);
        java.io.InputStream inputStream18 = java.io.InputStream.nullInputStream();
        long long20 = inputStream18.skip((long) 'a');
        byte[] byteArray24 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int25 = inputStream18.read(byteArray24);
        int int28 = inputStream1.readNBytes(byteArray24, (int) (byte) 1, 1);
        int int29 = inputStream0.read(byteArray24);
        java.io.OutputStream outputStream30 = null;
        // The following exception was thrown during execution in test generation
        try {
            long long31 = inputStream0.transferTo(outputStream30);
            org.junit.Assert.fail("Expected exception of type java.lang.NullPointerException; message: null");
        } catch (java.lang.NullPointerException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(inputStream1);
        org.junit.Assert.assertTrue("'" + long3 + "' != '" + 0L + "'", long3 == 0L);
        org.junit.Assert.assertNotNull(byteArray7);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray7), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int8 + "' != '" + (-1) + "'", int8 == (-1));
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(inputStream10);
        org.junit.Assert.assertTrue("'" + long12 + "' != '" + 0L + "'", long12 == 0L);
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertTrue("'" + int15 + "' != '" + 0 + "'", int15 == 0);
        org.junit.Assert.assertTrue("'" + long17 + "' != '" + 0L + "'", long17 == 0L);
        org.junit.Assert.assertNotNull(inputStream18);
        org.junit.Assert.assertTrue("'" + long20 + "' != '" + 0L + "'", long20 == 0L);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + (-1) + "'", int25 == (-1));
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertTrue("'" + int29 + "' != '" + (-1) + "'", int29 == (-1));
    }

    @Test
    public void test306() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test306");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray9 = inputStream0.readAllBytes();
        byte[] byteArray11 = inputStream0.readNBytes((int) (short) 100);
        byte[] byteArray13 = inputStream0.readNBytes((int) '4');
        java.lang.Class<?> wildcardClass14 = byteArray13.getClass();
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(byteArray13);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray13), "[]");
        org.junit.Assert.assertNotNull(wildcardClass14);
    }

    @Test
    public void test307() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test307");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray3 = new byte[] {};
        int int4 = inputStream0.read(byteArray3);
        byte[] byteArray6 = inputStream0.readNBytes(10);
        long long8 = inputStream0.skip((long) '4');
        byte[] byteArray10 = inputStream0.readNBytes(100);
        byte[] byteArray12 = inputStream0.readNBytes((int) (short) 10);
        java.io.InputStream inputStream13 = java.io.InputStream.nullInputStream();
        java.io.InputStream inputStream14 = java.io.InputStream.nullInputStream();
        byte[] byteArray15 = inputStream14.readAllBytes();
        java.io.InputStream inputStream16 = java.io.InputStream.nullInputStream();
        long long18 = inputStream16.skip((long) 'a');
        byte[] byteArray19 = new byte[] {};
        int int20 = inputStream16.read(byteArray19);
        byte[] byteArray22 = inputStream16.readNBytes(10);
        int int23 = inputStream14.read(byteArray22);
        byte[] byteArray24 = inputStream14.readAllBytes();
        int int25 = inputStream13.read(byteArray24);
        int int26 = inputStream0.read(byteArray24);
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray3);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray3), "[]");
        org.junit.Assert.assertTrue("'" + int4 + "' != '" + 0 + "'", int4 == 0);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[]");
        org.junit.Assert.assertTrue("'" + long8 + "' != '" + 0L + "'", long8 == 0L);
        org.junit.Assert.assertNotNull(byteArray10);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray10), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertNotNull(inputStream13);
        org.junit.Assert.assertNotNull(inputStream14);
        org.junit.Assert.assertNotNull(byteArray15);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray15), "[]");
        org.junit.Assert.assertNotNull(inputStream16);
        org.junit.Assert.assertTrue("'" + long18 + "' != '" + 0L + "'", long18 == 0L);
        org.junit.Assert.assertNotNull(byteArray19);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray19), "[]");
        org.junit.Assert.assertTrue("'" + int20 + "' != '" + 0 + "'", int20 == 0);
        org.junit.Assert.assertNotNull(byteArray22);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray22), "[]");
        org.junit.Assert.assertTrue("'" + int23 + "' != '" + 0 + "'", int23 == 0);
        org.junit.Assert.assertNotNull(byteArray24);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray24), "[]");
        org.junit.Assert.assertTrue("'" + int25 + "' != '" + 0 + "'", int25 == 0);
        org.junit.Assert.assertTrue("'" + int26 + "' != '" + 0 + "'", int26 == 0);
    }

    @Test
    public void test308() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test308");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray8 = inputStream0.readAllBytes();
        java.io.InputStream inputStream9 = java.io.InputStream.nullInputStream();
        long long11 = inputStream9.skip((long) 'a');
        byte[] byteArray12 = new byte[] {};
        int int13 = inputStream9.read(byteArray12);
        int int14 = inputStream0.read(byteArray12);
        byte[] byteArray16 = inputStream0.readNBytes((int) (byte) 0);
        java.io.InputStream inputStream17 = java.io.InputStream.nullInputStream();
        long long19 = inputStream17.skip((long) 'a');
        byte[] byteArray23 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int24 = inputStream17.read(byteArray23);
        byte[] byteArray25 = inputStream17.readAllBytes();
        byte[] byteArray26 = inputStream17.readAllBytes();
        byte[] byteArray27 = new byte[] {};
        int int28 = inputStream17.read(byteArray27);
        byte[] byteArray30 = inputStream17.readNBytes((int) (short) 0);
        int int31 = inputStream0.read(byteArray30);
        byte[] byteArray32 = inputStream0.readAllBytes();
        java.io.InputStream inputStream33 = java.io.InputStream.nullInputStream();
        long long35 = inputStream33.skip((long) 'a');
        byte[] byteArray39 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int40 = inputStream33.read(byteArray39);
        byte[] byteArray41 = inputStream33.readAllBytes();
        java.io.InputStream inputStream42 = java.io.InputStream.nullInputStream();
        long long44 = inputStream42.skip((long) 'a');
        byte[] byteArray45 = new byte[] {};
        int int46 = inputStream42.read(byteArray45);
        int int47 = inputStream33.read(byteArray45);
        byte[] byteArray49 = inputStream33.readNBytes((int) (byte) 0);
        // The following exception was thrown during execution in test generation
        try {
            int int52 = inputStream0.read(byteArray49, 0, (int) (short) 10);
            org.junit.Assert.fail("Expected exception of type java.lang.IndexOutOfBoundsException; message: Range [0, 0 + 10) out of bounds for length 0");
        } catch (java.lang.IndexOutOfBoundsException e) {
            // Expected exception.
        }
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertNotNull(inputStream9);
        org.junit.Assert.assertTrue("'" + long11 + "' != '" + 0L + "'", long11 == 0L);
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + int13 + "' != '" + 0 + "'", int13 == 0);
        org.junit.Assert.assertTrue("'" + int14 + "' != '" + 0 + "'", int14 == 0);
        org.junit.Assert.assertNotNull(byteArray16);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray16), "[]");
        org.junit.Assert.assertNotNull(inputStream17);
        org.junit.Assert.assertTrue("'" + long19 + "' != '" + 0L + "'", long19 == 0L);
        org.junit.Assert.assertNotNull(byteArray23);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray23), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int24 + "' != '" + (-1) + "'", int24 == (-1));
        org.junit.Assert.assertNotNull(byteArray25);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray25), "[]");
        org.junit.Assert.assertNotNull(byteArray26);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray26), "[]");
        org.junit.Assert.assertNotNull(byteArray27);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray27), "[]");
        org.junit.Assert.assertTrue("'" + int28 + "' != '" + 0 + "'", int28 == 0);
        org.junit.Assert.assertNotNull(byteArray30);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray30), "[]");
        org.junit.Assert.assertTrue("'" + int31 + "' != '" + 0 + "'", int31 == 0);
        org.junit.Assert.assertNotNull(byteArray32);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray32), "[]");
        org.junit.Assert.assertNotNull(inputStream33);
        org.junit.Assert.assertTrue("'" + long35 + "' != '" + 0L + "'", long35 == 0L);
        org.junit.Assert.assertNotNull(byteArray39);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray39), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int40 + "' != '" + (-1) + "'", int40 == (-1));
        org.junit.Assert.assertNotNull(byteArray41);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray41), "[]");
        org.junit.Assert.assertNotNull(inputStream42);
        org.junit.Assert.assertTrue("'" + long44 + "' != '" + 0L + "'", long44 == 0L);
        org.junit.Assert.assertNotNull(byteArray45);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray45), "[]");
        org.junit.Assert.assertTrue("'" + int46 + "' != '" + 0 + "'", int46 == 0);
        org.junit.Assert.assertTrue("'" + int47 + "' != '" + 0 + "'", int47 == 0);
        org.junit.Assert.assertNotNull(byteArray49);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray49), "[]");
    }

    @Test
    public void test309() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test309");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        byte[] byteArray1 = inputStream0.readAllBytes();
        java.io.InputStream inputStream2 = java.io.InputStream.nullInputStream();
        long long4 = inputStream2.skip((long) 'a');
        byte[] byteArray5 = new byte[] {};
        int int6 = inputStream2.read(byteArray5);
        byte[] byteArray8 = inputStream2.readNBytes(10);
        int int9 = inputStream0.read(byteArray8);
        byte[] byteArray11 = inputStream0.readNBytes((int) 'a');
        byte[] byteArray12 = inputStream0.readAllBytes();
        long long14 = inputStream0.skip((long) ' ');
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertNotNull(byteArray1);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray1), "[]");
        org.junit.Assert.assertNotNull(inputStream2);
        org.junit.Assert.assertTrue("'" + long4 + "' != '" + 0L + "'", long4 == 0L);
        org.junit.Assert.assertNotNull(byteArray5);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray5), "[]");
        org.junit.Assert.assertTrue("'" + int6 + "' != '" + 0 + "'", int6 == 0);
        org.junit.Assert.assertNotNull(byteArray8);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray8), "[]");
        org.junit.Assert.assertTrue("'" + int9 + "' != '" + 0 + "'", int9 == 0);
        org.junit.Assert.assertNotNull(byteArray11);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray11), "[]");
        org.junit.Assert.assertNotNull(byteArray12);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray12), "[]");
        org.junit.Assert.assertTrue("'" + long14 + "' != '" + 0L + "'", long14 == 0L);
    }

    @Test
    public void test310() throws Throwable {
        if (debug)
            System.out.format("%n%s%n", "RegressionTest0.test310");
        java.io.InputStream inputStream0 = java.io.InputStream.nullInputStream();
        long long2 = inputStream0.skip((long) 'a');
        byte[] byteArray6 = new byte[] { (byte) 100, (byte) 1, (byte) 1 };
        int int7 = inputStream0.read(byteArray6);
        byte[] byteArray9 = inputStream0.readNBytes((int) ' ');
        org.junit.Assert.assertNotNull(inputStream0);
        org.junit.Assert.assertTrue("'" + long2 + "' != '" + 0L + "'", long2 == 0L);
        org.junit.Assert.assertNotNull(byteArray6);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray6), "[100, 1, 1]");
        org.junit.Assert.assertTrue("'" + int7 + "' != '" + (-1) + "'", int7 == (-1));
        org.junit.Assert.assertNotNull(byteArray9);
        org.junit.Assert.assertEquals(java.util.Arrays.toString(byteArray9), "[]");
    }
}

